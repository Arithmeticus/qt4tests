<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="bin-unpack-float">
  <description>Tests for the bin:unpack-float function</description>
  
  <environment name="EXPath-binary.numeric">
    <namespace prefix="bin" uri="http://expath.org/ns/binary"/>
    <namespace prefix="binJAVA" uri="java:org.expath.ns.binary.EXPathBinary"/>
    <namespace prefix="err" uri="http://expath.org/ns/binary"/>
    <param name="int.byte" select="5"/>
    <param name="int.short" select="256 * 1 + 5"/>
    <param name="int.3" select="65536 * 1 + 256 * 1 + 5"/>
    <param name="int.int" select="16777216 * 1 + 65536 * 1 + 256 * 1 + 5"/>
    <param name="int.long" select="4294967296 * 1 + 16777216 * 1 + 65536 * 1 + 256 * 1 + 5"/>
    <param name="double.negative.0" select="xs:base64Binary(xs:hexBinary('8000000000000000'))"/>
    <param name="double.1" select="xs:base64Binary(xs:hexBinary('3ff0000000000000'))"/>
    <param name="double.1.octets" select="(63,240,0,0,0,0,0,0)"/>
    <param name="float.negative.0" select="xs:base64Binary(xs:hexBinary('80000000'))"/>
    <param name="float.1.octets" select="(63,128,0,0)"/>
    <param name="int.byte.B" select="xs:base64Binary(xs:hexBinary('f0'))"/>
    <param name="int.short.B" select="xs:base64Binary(xs:hexBinary('f040'))"/>
    <param name="int.short.B-1" select="xs:base64Binary(xs:hexBinary('ffff'))"/>
  </environment>
  
  <environment name="binary">
    <namespace prefix="bin" uri="http://expath.org/ns/binary"/>
  </environment>
  
  <dependency type="feature" value="binary"/>
  
  <test-case name="EXPath-binary-unpack-float-001">
    <description>unpack-float with unknown octet-order</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary.numeric"/>
    <test> bin:unpack-float(bin:from-octets($float.1.octets),0,'MOST-sign-first') </test>
    <result>
      <error code="Q{http://expath.org/ns/binary}unknown-significance-order"/>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-unpack-float-002">
    <description>unpack-float with negative offset</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary.numeric"/>
    <test> bin:unpack-float(bin:from-octets($float.1.octets),-1,'most-significant-first') </test>
    <result>
      <error code="Q{http://expath.org/ns/binary}index-out-of-range"/>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-unpack-float-003">
    <description>unpack-float extending beyond data</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary.numeric"/>
    <test> bin:unpack-float(bin:from-octets($float.1.octets),1,'most-significant-first') </test>
    <result>
      <error code="Q{http://expath.org/ns/binary}index-out-of-range"/>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-unpack-float-004">
    <description>unpack-float for -0.0 - big-endian</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary.numeric"/>
    <test> bin:unpack-float($float.negative.0,0,'most-significant-first') </test>
    <result>
      <all-of>
        <assert-type>xs:float</assert-type>
        <assert-eq>-0.0</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-unpack-float-005">
    <description>unpack-float for 1.0 - big-endian</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary.numeric"/>
    <test> bin:unpack-float(bin:from-octets($float.1.octets),0,'most-significant-first') </test>
    <result>
      <all-of>
        <assert-type>xs:float</assert-type>
        <assert-eq>1.0</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-unpack-float-006">
    <description>unpack-float with NaN - big-endian</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary.numeric"/>
    <test> bin:unpack-float(bin:from-octets((127,192,0,0)),0,'most-significant-first') </test>
    <result>
      <all-of>
        <assert-type>xs:float</assert-type>
        <assert-deep-eq>xs:float(number("NaN"))</assert-deep-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-unpack-float-007">
    <description>unpack-float with NaN with payload - big-endian</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary.numeric"/>
    <test> bin:unpack-float(bin:from-octets((127,192,0,1)),0,'most-significant-first') </test>
    <result>
      <all-of>
        <assert-type>xs:float</assert-type>
        <assert-deep-eq>number("NaN")</assert-deep-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-unpack-float-008">
    <description>unpack-float with quiet NaN with payload - big-endian</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary.numeric"/>
    <test>
                bin:to-octets(bin:pack-float(bin:unpack-float(bin:from-octets((127,192,0,1)),0,'most-significant-first'),'most-significant-first')) </test>
    <result>
      <assert-deep-eq>(127,192,0,0)</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-unpack-float-009">
    <description>unpack-float with signalling NaN with payload - big-endian</description>
    <created by="John Lumley" on="2013-07-19"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary.numeric"/>
    <test>
                bin:to-octets(bin:pack-float(bin:unpack-float(bin:from-octets((127,248,0,1)),0,'most-significant-first'),'most-significant-first')) </test>
    <result>
      <assert-deep-eq>(127,192,0,0)</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float1">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("00000000")), 0)</test>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float2">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("3F800000")), 0)</test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float3">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("BF800000")), 0)</test>
    <result>
      <assert-eq>-1</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float4">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("80000000")), 0)</test>
    <result>
      <assert-eq>-0</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float5">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("00000000")), 0)</test>
    <result>
      <assert-eq>0</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float6">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("7F800000")), 0)</test>
    <result>
      <assert-eq>1 div 0e0</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float7">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("FF800000")), 0)</test>
    <result>
      <assert-eq>-1 div 0e0</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float8">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("7FC00000")), 0)</test>
    <result>
      <assert-deep-eq>number("NaN")</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float9">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("3F800000")), 0, "most-significant-first")</test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float10">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("3F800000")), 0, "big-endian")</test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float11">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("3F800000")), 0, "BE")</test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float12">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("0000803F")), 0, "least-significant-first")</test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float13">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("0000803F")), 0, "little-endian")</test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float14">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("0000803F")), 0, "LE")</test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float15">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("00000000")), -1)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}index-out-of-range"/>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float16">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("00000000")), 1)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}index-out-of-range"/>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float17">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("00")), 0)</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}index-out-of-range"/>
    </result>
  </test-case>
  
  <test-case name="bin-unpack-float18">
    <description>Test for the unpack-float function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="binary"/>
    <test>bin:unpack-float(xs:base64Binary(xs:hexBinary("00000000")), 0, "X")</test>
    <result>
      <error code="Q{http://expath.org/ns/binary}unknown-significance-order"/>
    </result>
  </test-case>
 
  
</test-set>