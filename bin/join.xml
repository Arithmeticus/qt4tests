<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="bin-join">
  <description>Tests for the bin:join function</description>
  
  <environment name="EXPath-binary">
    <namespace prefix="bin" uri="http://expath.org/ns/binary"/>
    <param name="empty.bin" select="xs:base64Binary('')"/>
    <!-- 'Man' in base64 - 3 octets, 4 characters -->
    <param name="man.base" select="xs:base64Binary('TWFu')"/>
    <param name="man.octets" select="77,97,110"/>
  </environment>
  
  <dependency type="feature" value="binary"/>
  
   
 <test-case name="EXPath-binary-join-001">
    <description>Join of an empty sequence</description>
    <created by="John Lumley" on="2013-07-18"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary"/>
    <test> bin:join(()) </test>
    <result>
      <all-of>
        <assert-type>xs:base64Binary</assert-type>
        <assert-eq>xs:base64Binary("")</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-join-002">
    <description>Join of two sequences</description>
    <created by="John Lumley" on="2013-07-18"/>
    <modified by="John Lumley" on="2014-08-11" change="consistent EXPath naming"/>
    <environment ref="EXPath-binary"/>
    <test> bin:join(($man.base,$man.base)) </test>
    <result>
      <all-of>
        <assert-type>xs:base64Binary</assert-type>
        <assert-eq>xs:base64Binary("TWFuTWFu")</assert-eq>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="EXPath-binary-join-003">
    <description>Join with type mismatch sequences</description>
    <created by="John Lumley" on="2013-07-18"/>
    <modified by="John Lumley" on="2014-08-13" change="Admit static type-check errors"/>
    <environment ref="EXPath-binary"/>
    <test> bin:join(($man.base,123)) </test>
    <result>
      <any-of>
        <error code="Q{http://www.w3.org/2005/xqt-errors}FORG0006"/>
        <error code="Q{http://www.w3.org/2005/xqt-errors}XPTY0004"/>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="bin-join1">
    <description>Test for the join function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="EXPath-binary"/>
    <test>xs:hexBinary(bin:join(()))</test>
    <result>
      <assert-eq>xs:hexBinary("")</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-join2">
    <description>Test for the join function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="EXPath-binary"/>
    <test>xs:hexBinary(bin:join(xs:base64Binary(xs:hexBinary(""))))</test>
    <result>
      <assert-eq>xs:hexBinary("")</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-join3">
    <description>Test for the join function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="EXPath-binary"/>
    <test>xs:hexBinary(bin:join(xs:base64Binary(xs:hexBinary("FF"))))</test>
    <result>
      <assert-eq>xs:hexBinary("FF")</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-join4">
    <description>Test for the join function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <environment ref="EXPath-binary"/>
    <test>xs:hexBinary(bin:join((xs:base64Binary(xs:hexBinary("FF")), xs:base64Binary(xs:hexBinary("FF")))))</test>
    <result>
      <assert-eq>xs:hexBinary("FFFF")</assert-eq>
    </result>
  </test-case>
  
  <test-case name="bin-join5">
    <description>Test for the join function.</description>
    <created by="Christian Grün" on="2013-11-19+01:00"/>
    <modified by="John Lumley" on="2014-10-02" change="dependent on XP30"/>
    <environment ref="EXPath-binary"/>
    <dependency type="spec" value="XP30+ XQ30+"/>
    <test>xs:hexBinary(bin:join((1 to 3) ! xs:base64Binary(xs:hexBinary("11"))))</test>
    <result>
      <assert-eq>xs:hexBinary("111111")</assert-eq>
    </result>
  </test-case>
  
</test-set>