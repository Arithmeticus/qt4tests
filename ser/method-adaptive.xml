<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="method-adaptive">
   <description>Tests for the Serialization</description>
   <link type="spec" document="http://www.w3.org/TR/xquery-30/"
         idref="doc-xquery30-Serialization"/>

  <test-case name="Serialization-adaptive-01" >
      <description>Test the adaptive serialization output method - empty array</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Anchor the assertion regex"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        [ ] 

      ]]></test>
      <result>
        <serialization-matches>^\[\]$</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-02" >
      <description>Test the adaptive serialization output method - empty map</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Spec change; and anchor the assertion regex"/>
      <dependency type="spec" value="XQ31"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        map { } 

      ]]></test>
      <result>
        <serialization-matches>^map\{\}$</serialization-matches>
      </result>
   </test-case>
  
  <test-case name="Serialization-adaptive-02a" covers-40="PR1123">
    <description>Test the adaptive serialization output method - empty map</description>
    <created by="Andrew Coleman" on="2015-02-11"/>
    <modified by="Michael Kay" on="2015-07-18" change="Spec change; and anchor the assertion regex"/>
    <modified by="Michael Kay" on="2024-03-27" change="Spec change for 4.0"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        map { } 

      ]]></test>
    <result>
      <serialization-matches>^\{\}$</serialization-matches>
    </result>
  </test-case>

   <test-case name="Serialization-adaptive-03" >
      <description>Test the adaptive serialization output method - empty sequence</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Anchor the assertion regex"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        ()

      ]]></test>
      <result>
        <serialization-matches>^$</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-04" >
      <description>Test the adaptive serialization output method - atomic value</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Anchor the assertion regex"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        5

      ]]></test>
      <result>
        <serialization-matches>^5$</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-05" >
      <description>Test the adaptive serialization output method - atomic value</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Anchor the assertion regex"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        "simple string"

      ]]></test>
      <result>
        <serialization-matches>^"simple string"$</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-06" >
      <description>Test the adaptive serialization output method - document node</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Anchor the assertion regex"/>
      <modified by="Debbie Lockett" on="2020-10-27" 
       change="Corrected expected results. Inclusion of XML declaration is implementation defined. See Saxon bug 4647"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        document { element test {"content"}}

      ]]></test>
      <result>
        <serialization-matches><![CDATA[^(<\?xml[^<]+>)?<test>content</test>$]]></serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-07" >
      <description>Test the adaptive serialization output method - element node</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Anchor the assertion regex"/>
      <modified by="Debbie Lockett" on="2020-10-27" 
       change="Corrected expected results. Inclusion of XML declaration is implementation defined. See Saxon bug 4647"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        element test {"content"}

      ]]></test>
      <result>
        <serialization-matches><![CDATA[^(<\?xml[^<]+>)?<test>content</test>$]]></serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-08" >
      <description>Test the adaptive serialization output method - text node</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Anchor the assertion regex"/>
      <modified by="Debbie Lockett" on="2020-10-27" 
       change="Corrected expected results. Inclusion of XML declaration is implementation defined. See Saxon bug 4647"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        <test>content</test>/text()

      ]]></test>
      <result>
        <serialization-matches><![CDATA[^(<\?xml[^<]+>)?content$]]></serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-09" >
      <description>Test the adaptive serialization output method - comment node</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Anchor the assertion regex"/>
      <modified by="Debbie Lockett" on="2020-10-27" 
       change="Corrected expected results. Inclusion of XML declaration is implementation defined. See Saxon bug 4647"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        <!--comment-->

      ]]></test>
      <result>
        <serialization-matches><![CDATA[^(<\?xml[^<]+>)?<!--comment-->$]]></serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-10" >
      <description>Test the adaptive serialization output method - processing-instruction node</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Christian Gruen" on="2012-02-19" change="regular expression fixed"/>
      <modified by="Michael Kay" on="2015-07-18" change="Anchor the assertion regex"/>
      <modified by="Debbie Lockett" on="2020-10-27" 
       change="Corrected expected results. Inclusion of XML declaration is implementation defined. See Saxon bug 4647"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        <?target instruction ?>

      ]]></test>
      <result>
        <serialization-matches><![CDATA[^(<\?xml[^<]+>)?<\?target instruction \?>$]]></serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-11" >
      <description>Test the adaptive serialization output method - attribute node</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-06-15" change="Allow some variability in the result"/>
      <modified by="Michael Kay" on="2015-07-18" change="Anchor the assertion regex"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        attribute att-name { "att-value" }

      ]]></test>
      <result>
        <serialization-matches><![CDATA[^att-name\s*=\s*['"]att-value['"]$]]></serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-12" >
      <description>Test the adaptive serialization output method - function</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <modified by="Michael Kay" on="2015-11-27" change="Add HOF dependency"/>
      <dependency type="spec" value="XQ31+"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        fn:exists#1

      ]]></test>
      <result>
        <serialization-matches>^fn:exists#1$</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-13" >
      <description>Test the adaptive serialization output method - anon function</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Christian Gruen" on="2012-02-19" change="regular expression fixed"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <modified by="Michael Kay" on="2015-11-27" change="Add HOF dependency"/>
      <dependency type="spec" value="XQ31+"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        function($a) { $a }

      ]]></test>
      <result>
        <serialization-matches>^\(anonymous-function\)#1$</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-14" >
      <description>Test the adaptive serialization output method - default item separator</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Christian Gruen" on="2012-02-19" change="regular expression fixed"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        (1,2,3)

      ]]></test>
      <result>
        <serialization-matches><![CDATA[1\r?\n2\r?\n3]]></serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-15" >
      <description>Test the adaptive serialization output method - item-separator</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        declare option output:item-separator "-";
        
        (1,2,3)

      ]]></test>
      <result>
        <serialization-matches>1-2-3</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-16" >
      <description>Test the adaptive serialization output method - array</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        [1, true(), not(true()), (), "string"]

      ]]></test>
      <result>
        <serialization-matches>^\[1,true\(\),false\(\),\(\),"string"\]$</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-17" >
      <description>Test the adaptive serialization output method - array of sequence of length > 1</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Christian Gruen" on="2012-02-19" change="regular expression fixed"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        [(1,2,3),(4,5,6)]

      ]]></test>
      <result>
        <serialization-matches>^\[\(1,2,3\),\(4,5,6\)\]$</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-18" >
      <description>Test the adaptive serialization output method - array of sequence of length > 1</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        declare option output:item-separator "-";
        
        [(1,2,3),(4,5,6)]

      ]]></test>
      <result>
        <serialization-matches>^\[\(1,2,3\),\(4,5,6\)\]$</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-19" >
      <description>Test the adaptive serialization output method - map with duplicate names</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <dependency type="spec" value="XQ31"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
  
        map { "one" : 1, xs:QName("one") : 1 }  

      ]]></test>
      <result>
        <any-of>
            <serialization-matches>map\{"one":1,Q\{\}one:1\}</serialization-matches>
            <serialization-matches>map\{Q\{\}one:1,"one":1\}</serialization-matches>
        </any-of>    
      </result>
   </test-case>
  
  <test-case name="Serialization-adaptive-19a" >
    <description>Test the adaptive serialization output method - map with duplicate names</description>
    <created by="Andrew Coleman" on="2015-02-11"/>
    <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
    <modified by="Michael Kay" on="2024-03-27" change="Spec change for 4.0"/>
    <modified by="Christian Gruen" on="2025-06-25" change="PR2060"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
  
        map { "one" : 1, xs:QName("one") : 1 }  

      ]]></test>
    <result>
      <serialization-matches>^\{"one":1,#one:1\}</serialization-matches>
    </result>
  </test-case>

   <test-case name="Serialization-adaptive-20" >
      <description>Test the adaptive serialization output method - array with attribute node</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <modified by="Debbie Lockett" on="2020-10-27" 
       change="Corrected expected results. Inclusion of XML declaration is implementation defined. See Saxon bug 4647"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        [<element>content</element>, attribute att-name { "att-value" }]

      ]]></test>
      <result>
        <serialization-matches><![CDATA[^\[[(]?(<\?xml[^<]+>)?<element>content</element>[)]?,[(]?att-name="att-value"[)]?\]$]]></serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-21" >
      <description>Test the adaptive serialization output method - map with attribute value</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <dependency type="spec" value="XQ31"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";

        map { "key": attribute att-name { "att-value" }}

      ]]></test>
      <result>
        <serialization-matches>^map\{"key":att-name="att-value"\}$</serialization-matches>
      </result>
   </test-case>
  
  <test-case name="Serialization-adaptive-21a" covers-40="PR1123">
    <description>Test the adaptive serialization output method - map with attribute value</description>
    <created by="Andrew Coleman" on="2015-02-11"/>
    <modified by="Michael Kay" on="2024-03-27"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";

        map { "key": attribute att-name { "att-value" }}

      ]]></test>
    <result>
      <serialization-matches>^\{"key":att-name="att-value"\}$</serialization-matches>
    </result>
  </test-case>
  

   <test-case name="Serialization-adaptive-22" >
      <description>Test the adaptive serialization output method - array with numeric INF</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        [ xs:float("INF"), xs:double("-INF") ]

      ]]></test>
      <result>
        <serialization-matches>^\[xs:float\("INF"\),-INF\]$</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-23" >
      <description>Test the adaptive serialization output method - map with numeric INF</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Christian Gruen" on="2012-02-19" change="query fixed"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <dependency type="spec" value="XQ31"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        map { "infinity": xs:float("INF") }

      ]]></test>
      <result>
        <serialization-matches>map\{"infinity":xs:float\("INF"\)\}</serialization-matches>
      </result>
   </test-case>
  
  <test-case name="Serialization-adaptive-23a" covers-40="PR1123">
    <description>Test the adaptive serialization output method - map with numeric INF</description>
    <created by="Andrew Coleman" on="2015-02-11"/>
    <modified by="Christian Gruen" on="2012-02-19" change="query fixed"/>
    <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
    <modified by="Michael Kay" on="2024-03-27" change="Spec change for 4.0"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        map { "infinity": xs:float("INF") }

      ]]></test>
    <result>
      <serialization-matches>^\{"infinity":xs:float\("INF"\)\}</serialization-matches>
    </result>
  </test-case>

   <test-case name="Serialization-adaptive-24" >
      <description>Test the adaptive serialization output method - array with NaN</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Christian Gruen" on="2012-02-19" change="query fixed"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        [ xs:float("NaN") ]

      ]]></test>
      <result>
        <serialization-matches>\[xs:float\("NaN"\)\]</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-25" >
      <description>Test the adaptive serialization output method - map with NaN value</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Christian Gruen" on="2012-02-19" change="query fixed"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <dependency type="spec" value="XQ31"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        map { "not-a-number": xs:double("NaN") }

      ]]></test>
      <result>
        <serialization-matches>^map\{"not-a-number":NaN\}$</serialization-matches>
      </result>
   </test-case>
  
  <test-case name="Serialization-adaptive-25a" covers-40="PR1123">
    <description>Test the adaptive serialization output method - map with NaN value</description>
    <created by="Andrew Coleman" on="2015-02-11"/>
    <modified by="Christian Gruen" on="2012-02-19" change="query fixed"/>
    <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
    <modified by="Michael Kay" on="2024-03-27" change="Spec change for 4.0"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        map { "not-a-number": xs:double("NaN") }

      ]]></test>
    <result>
      <serialization-matches>^\{"not-a-number":NaN\}$</serialization-matches>
    </result>
  </test-case>

   <test-case name="Serialization-adaptive-26" >
      <description>Test the adaptive serialization output method - array of functions</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Christian Gruen" on="2012-02-19" change="regular expression fixed"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <modified by="Michael Kay" on="2015-11-27" change="Add HOF dependency"/>
      <dependency type="spec" value="XQ31+"/>
      <dependency type="feature" value="higherOrderFunctions"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        [fn:exists#1, function($a) { $a }]

      ]]></test>
      <result>
        <serialization-matches>^\[fn:exists#1,\(anonymous-function\)#1\]$</serialization-matches>
      </result>
   </test-case>

   <test-case name="Serialization-adaptive-27" >
      <description>Test the adaptive serialization output method - mixed array</description>
      <created by="Andrew Coleman" on="2015-02-11"/>
      <modified by="Christian Gruen" on="2015-02-19" change="query and regular expression fixed"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <modified by="Michael Kay" on="2015-11-27" change="Add HOF dependency"/>
      <modified by="Debbie Lockett" on="2020-10-27" 
       change="Corrected expected results. Inclusion of XML declaration is implementation defined. See Saxon bug 4647"/>
      <dependency type="spec" value="XQ31"/>
      <dependency type="feature" value="higherOrderFunctions"/>
     
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        [fn:exists#1, 1, <element>content</element>, (), function($a) { $a }, map { "infinity":xs:double("INF") }, "json-string"]

      ]]></test>
      <result>
        <serialization-matches><![CDATA[^\[[(]?fn:exists#1[)]?,[(]?1[)]?,[(]?(<\?xml[^<]+>)?<element>content</element>[)]?,\(\),[(]?\(anonymous-function\)#1[)]?,[(]?map\{"infinity":INF[)]?\},[(]?"json-string"[)]?\]$]]></serialization-matches>
      </result>
   </test-case>
  
  <test-case name="Serialization-adaptive-27a" covers-40="PR1123">
    <description>Test the adaptive serialization output method - mixed array</description>
    <created by="Andrew Coleman" on="2015-02-11"/>
    <modified by="Christian Gruen" on="2015-02-19" change="query and regular expression fixed"/>
    <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
    <modified by="Michael Kay" on="2015-11-27" change="Add HOF dependency"/>
    <modified by="Debbie Lockett" on="2020-10-27" 
      change="Corrected expected results. Inclusion of XML declaration is implementation defined. See Saxon bug 4647"/>
    <modified by="Michael Kay" on="2024-03-27" change="Spec change for 4.0"/>
    <dependency type="spec" value="XQ40+"/>
    <dependency type="feature" value="higherOrderFunctions"/>
    
    <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        [fn:exists#1, 1, <element>content</element>, (), function($a) { $a }, map { "infinity":xs:double("INF") }, "json-string"]

      ]]></test>
    <result>
      <serialization-matches><![CDATA[^\[[(]?fn:exists#1[)]?,[(]?1[)]?,[(]?(<\?xml[^<]+>)?<element>content</element>[)]?,\(\),[(]?\(anonymous-function\)#1[)]?,[(]?\{"infinity":INF[)]?\},[(]?"json-string"[)]?\]$]]></serialization-matches>
    </result>
  </test-case>
   
   <test-case name="Serialization-adaptive-28" >
      <description>Test the adaptive serialization output method - empty sequence</description>
      <created by="Michael Kay" on="2015-07-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        ()

      ]]></test>
      <result>
        <serialization-matches><![CDATA[^$]]></serialization-matches>
      </result>
   </test-case>
   
   <test-case name="Serialization-adaptive-29" >
      <description>Test the adaptive serialization output method - sequence with item-separator</description>
      <created by="Michael Kay" on="2015-07-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        declare option output:item-separator " ";
        
        1 to 5

      ]]></test>
      <result>
        <serialization-matches><![CDATA[1 2 3 4 5]]></serialization-matches>
      </result>
   </test-case>
   
   <test-case name="Serialization-adaptive-30" >
      <description>Test the adaptive serialization output method - sequence with item-separator</description>
      <created by="Michael Kay" on="2015-07-13"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        declare option output:item-separator " ";
        
        "the quick", "brown fox"

      ]]></test>
      <result>
        <serialization-matches><![CDATA[^"the quick" "brown fox"$]]></serialization-matches>
      </result>
   </test-case>
   
   <test-case name="Serialization-adaptive-31" >
      <description>Test the adaptive serialization output method - map with duplicate keys</description>
      <created by="Michael Kay" on="2015-07-13"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        map{ "2015":1, 2015:2, xs:gYear('2015'):3 }

      ]]></test>
      <result>
        <all-of>
         <serialization-matches><![CDATA["2015":1]]></serialization-matches>
         <serialization-matches><![CDATA[2015:2]]></serialization-matches>
         <serialization-matches><![CDATA[xs:gYear\("2015"\):3]]></serialization-matches>
        </all-of> 
      </result>
   </test-case>
   
   <test-case name="Serialization-adaptive-32" >
      <description>Test the adaptive serialization output method - escaping in map keys</description>
      <created by="Michael Kay" on="2015-07-13"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <dependency type="spec" value="XQ31"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        map{ "O'Neil says ""no""": 1 }

      ]]></test>
      <result>
        <any-of>
          <serialization-matches><![CDATA[map\{"O'Neil says ""no""":1\}]]></serialization-matches>
          <serialization-matches><![CDATA[map\{'O''Neil says "no"':1\}]]></serialization-matches>
        </any-of>  
      </result>
   </test-case>
  
  <test-case name="Serialization-adaptive-32a" covers-40="PR1123">
    <description>Test the adaptive serialization output method - escaping in map keys</description>
    <created by="Michael Kay" on="2015-07-13"/>
    <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
    <modified by="Michael Kay" on="2024-03-27" change="Spec change for 4.0"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        map{ "O'Neil says ""no""": 1 }

      ]]></test>
    <result>
      <any-of>
        <serialization-matches><![CDATA[^\{"O'Neil says ""no""":1\}]]></serialization-matches>
        <serialization-matches><![CDATA[^\{'O''Neil says "no"':1\}]]></serialization-matches>
      </any-of>  
    </result>
  </test-case>
   
   <test-case name="Serialization-adaptive-33" >
      <description>Test the adaptive serialization output method - escaping in map values</description>
      <created by="Michael Kay" on="2015-07-13"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <modified by="Christian Gruen" on="2015-09-29" change="Regex fixed"/>
      <dependency type="spec" value="XQ31"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        map{ 1:"O'Neil says ""no""" }

      ]]></test>
      <result>
        <any-of>
          <serialization-matches><![CDATA[map\{1:"O'Neil says ""no"""\}]]></serialization-matches>
          <serialization-matches><![CDATA[map\{1:'O''Neil says "no"'\}]]></serialization-matches>
        </any-of>  
      </result>
   </test-case>
  
  <test-case name="Serialization-adaptive-33a" covers-40="PR1123">
    <description>Test the adaptive serialization output method - escaping in map values</description>
    <created by="Michael Kay" on="2015-07-13"/>
    <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
    <modified by="Christian Gruen" on="2015-09-29" change="Regex fixed"/>
    <modified by="Christian Gruen" on="2024-03-27" change="Spec change for 4.0"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        map{ 1:"O'Neil says ""no""" }

      ]]></test>
    <result>
      <any-of>
        <serialization-matches><![CDATA[^\{1:"O'Neil says ""no"""\}]]></serialization-matches>
        <serialization-matches><![CDATA[^\{1:'O''Neil says "no"'\}]]></serialization-matches>
      </any-of>  
    </result>
  </test-case>
   
   <test-case name="Serialization-adaptive-34" >
      <description>No quotes and no escaping when a map value has length > 1</description>
      <created by="Michael Kay" on="2015-07-13"/>
      <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
      <modified by="Benito van der Zander" on="2020-10-23" change="allow different quotes"/>
      <dependency type="spec" value="XQ31"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        declare option output:item-separator "~";
        
        map{ "a":("quotes ("")", "apos (')") }

      ]]></test>
      <result>
        <any-of>
          <serialization-matches><![CDATA[^map\{"a":\("quotes \(""\)","apos \('\)"\)\}$]]></serialization-matches>
          <serialization-matches><![CDATA[^map\{"a":\('quotes \("\)','apos \(''\)'\)\}$]]></serialization-matches>
          <serialization-matches><![CDATA[^map\{"a":\("quotes \(""\)",'apos \(''\)'\)\}$]]></serialization-matches>
          <serialization-matches><![CDATA[^map\{"a":\('quotes \("\)',"apos \('\)"\)\}$]]></serialization-matches>
        </any-of>
      </result>
   </test-case>
  
  <test-case name="Serialization-adaptive-34a" covers-40="PR1123">
    <description>No quotes and no escaping when a map value has length > 1</description>
    <created by="Michael Kay" on="2015-07-13"/>
    <modified by="Michael Kay" on="2015-07-18" change="Implement spec change"/>
    <modified by="Benito van der Zander" on="2020-10-23" change="allow different quotes"/>
    <modified by="Michael Kay" on="2024-03-27" change="Spec change for 4.0"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        declare option output:item-separator "~";
        
        map{ "a":("quotes ("")", "apos (')") }

      ]]></test>
    <result>
      <any-of>
        <serialization-matches><![CDATA[^\{"a":\("quotes \(""\)","apos \('\)"\)\}$]]></serialization-matches>
        <serialization-matches><![CDATA[^\{"a":\('quotes \("\)','apos \(''\)'\)\}$]]></serialization-matches>
        <serialization-matches><![CDATA[^\{"a":\("quotes \(""\)",'apos \(''\)'\)\}$]]></serialization-matches>
        <serialization-matches><![CDATA[^\{"a":\('quotes \("\)',"apos \('\)"\)\}$]]></serialization-matches>
      </any-of>
    </result>
  </test-case>

  <test-case name="Serialization-adaptive-35" >
      <description>Test the adaptive serialization output method - xs:untypedAtomic</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:untypedAtomic("untypedAtomic")
      ]]></test>
      <result>
        <serialization-matches>"untypedAtomic"</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-36" >
      <description>Test the adaptive serialization output method - xs:dateTime</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        xs:dateTime('1999-05-31T13:20:00-05:00')
      ]]></test>
      <result>
        <serialization-matches>^xs:dateTime\("1999-05-31T13:20:00-05:00"\)$</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-37" >
      <description>Test the adaptive serialization output method - xs:dateTimeStamp</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <modified by="Tim Mills" on="2016-10-05" change="See Bug 29913"/>
      <dependency type="spec" value="XQ31+"/>
      <dependency type="xsd-version" value="1.1"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:dateTimeStamp("2011-07-28T12:34:56-08:00")
      ]]></test>
      <result>
        <serialization-matches>^xs:dateTime\("2011-07-28T12:34:56-08:00"\)</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-38" >
      <description>Test the adaptive serialization output method - xs:date</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:date("1999-05-31")
      ]]></test>
      <result>
        <serialization-matches>^xs:date\("1999-05-31"\)</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-39" >
      <description>Test the adaptive serialization output method - xs:time</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:time("12:00:00")
      ]]></test>
      <result>
        <serialization-matches>^xs:time\("12:00:00"\)</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-40" >
      <description>Test the adaptive serialization output method - xs:duration</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:duration("P1Y2M3DT10H30M23S")
      ]]></test>
      <result>
        <serialization-matches>^xs:duration\("P1Y2M3DT10H30M23S"\)$</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-41" >
      <description>Test the adaptive serialization output method - xs:yearMonthDuration</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <modified by="Tim Mills" on="2016-10-05" change="See Bug 29913"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:yearMonthDuration("P1Y2M")
      ]]></test>
      <result>
        <serialization-matches>^xs:duration\("P1Y2M"\)$</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-42" >
      <description>Test the adaptive serialization output method - xs:dayTimeDuration</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <modified by="Tim Mills" on="2016-10-05" change="See Bug 29913"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:dayTimeDuration("P3DT10H30M")
      ]]></test>
      <result>
        <serialization-matches>^xs:duration\("P3DT10H30M"\)</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-43" >
      <description>Test the adaptive serialization output method - xs:float</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:float("1e0")
      ]]></test>
      <result>
        <serialization-matches>^xs:float\("1"\)$</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-44" >
      <description>Test the adaptive serialization output method - xs:double</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:double(1e0)
      ]]></test>
      <result>
        <serialization-matches>1\.0e0</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-45" >
      <description>Test the adaptive serialization output method - xs:decimal</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:decimal(1.2)
      ]]></test>
      <result>
        <serialization-matches>1.2</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-46" >
      <description>Test the adaptive serialization output method - xs:integer</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:integer(1)
      ]]></test>
      <result>
        <serialization-matches>1</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-47" >
      <description>Test the adaptive serialization output method - xs:nonPositiveInteger</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:nonPositiveInteger("0")
      ]]></test>
      <result>
        <serialization-matches>0</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-48" >
      <description>Test the adaptive serialization output method - xs:negativeInteger</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:negativeInteger(-1)
      ]]></test>
      <result>
        <serialization-matches>-1</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-49" >
      <description>Test the adaptive serialization output method - xs:long</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:long(0)
      ]]></test>
      <result>
        <serialization-matches>0</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-50" >
      <description>Test the adaptive serialization output method - xs:int</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:int(0)
      ]]></test>
      <result>
        <serialization-matches>0</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-51" >
      <description>Test the adaptive serialization output method - xs:short</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:short(0)
      ]]></test>
      <result>
        <serialization-matches>0</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-52" >
      <description>Test the adaptive serialization output method - xs:byte</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:byte(0)
      ]]></test>
      <result>
        <serialization-matches>0</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-53" >
      <description>Test the adaptive serialization output method - xs:nonNegativeInteger</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:nonNegativeInteger(0)
      ]]></test>
      <result>
        <serialization-matches>0</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-54" >
      <description>Test the adaptive serialization output method - xs:unsignedLong</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:unsignedLong(0)
      ]]></test>
      <result>
        <serialization-matches>0</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-55" >
      <description>Test the adaptive serialization output method - xs:unsignedInt</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:unsignedInt(0)
      ]]></test>
      <result>
        <serialization-matches>0</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-56" >
      <description>Test the adaptive serialization output method - xs:unsignedShort</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:unsignedShort(0)
      ]]></test>
      <result>
        <serialization-matches>0</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-57" >
      <description>Test the adaptive serialization output method - xs:unsignedByte</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:unsignedByte(0)
      ]]></test>
      <result>
        <serialization-matches>0</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-58" >
      <description>Test the adaptive serialization output method - xs:positiveInteger</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:positiveInteger(1)
      ]]></test>
      <result>
        <serialization-matches>1</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-59" >
      <description>Test the adaptive serialization output method - xs:gYearMonth</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:gYearMonth("2000-01")
      ]]></test>
      <result>
        <serialization-matches>^xs:gYearMonth\("2000-01"\)</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-60" >
      <description>Test the adaptive serialization output method - xs:gYear</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:gYear("2000")
      ]]></test>
      <result>
        <serialization-matches>^xs:gYear\("2000"\)</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-61" >
      <description>Test the adaptive serialization output method - xs:gMonthDay</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:gMonthDay("--01-01")
      ]]></test>
      <result>
        <serialization-matches>^xs:gMonthDay\("--01-01"\)</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-62" >
      <description>Test the adaptive serialization output method - xs:gDay</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:gDay("---01")
      ]]></test>
      <result>
        <serialization-matches>^xs:gDay\("---01"\)</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-63" >
      <description>Test the adaptive serialization output method - xs:gMonth</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:gMonth("--01")
      ]]></test>
      <result>
        <serialization-matches>^xs:gMonth\("--01"\)</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-64" >
      <description>Test the adaptive serialization output method - xs:string</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:string("en")
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'en'$</serialization-matches>
	  <serialization-matches>^"en"$</serialization-matches>
	</any-of>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-65" >
      <description>Test the adaptive serialization output method - xs:normalizedString</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:normalizedString("en")
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'en'$</serialization-matches>
	  <serialization-matches>^"en"$</serialization-matches>
	</any-of>
      </result>
   </test-case>


  <test-case name="Serialization-adaptive-66" >
      <description>Test the adaptive serialization output method - xs:token</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:token("en")
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'en'$</serialization-matches>
	  <serialization-matches>^"en"$</serialization-matches>
	</any-of>
      </result>
   </test-case>


  <test-case name="Serialization-adaptive-67" >
      <description>Test the adaptive serialization output method - xs:language</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:language("en")
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'en'$</serialization-matches>
	  <serialization-matches>^"en"$</serialization-matches>
	</any-of>
      </result>
   </test-case>


  <test-case name="Serialization-adaptive-68" >
      <description>Test the adaptive serialization output method - xs:NMTOKEN</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:NMTOKEN("en")
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'en'$</serialization-matches>
	  <serialization-matches>^"en"$</serialization-matches>
	</any-of>
      </result>
   </test-case>


  <test-case name="Serialization-adaptive-69" >
      <description>Test the adaptive serialization output method - xs:Name</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:Name("en")
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'en'$</serialization-matches>
	  <serialization-matches>^"en"$</serialization-matches>
	</any-of>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-70" >
      <description>Test the adaptive serialization output method - xs:NCName</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:NCName("en")
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'en'$</serialization-matches>
	  <serialization-matches>^"en"$</serialization-matches>
	</any-of>
      </result>
   </test-case>


  <test-case name="Serialization-adaptive-71" >
      <description>Test the adaptive serialization output method - xs:ID</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:ID("en")
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'en'$</serialization-matches>
	  <serialization-matches>^"en"$</serialization-matches>
	</any-of>
      </result>
   </test-case>


  <test-case name="Serialization-adaptive-72" >
      <description>Test the adaptive serialization output method - xs:IDREF</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:IDREF("en")
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'en'$</serialization-matches>
	  <serialization-matches>^"en"$</serialization-matches>
	</any-of>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-73" >
      <description>Test the adaptive serialization output method - xs:ENTITY</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:ENTITY("en")
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'en'$</serialization-matches>
	  <serialization-matches>^"en"$</serialization-matches>
	</any-of>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-74" >
      <description>Test the adaptive serialization output method - xs:boolean</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:boolean(true())
      ]]></test>
      <result>
        <serialization-matches>^true\(\)$</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-75" >
      <description>Test the adaptive serialization output method - xs:base64Binary</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:base64Binary("01001010")
      ]]></test>
      <result>
        <serialization-matches>^xs:base64Binary\("01001010"\)$</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-76" >
      <description>Test the adaptive serialization output method - xs:hexBinary</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:hexBinary("D74D35D35D35")
      ]]></test>
      <result>
        <serialization-matches>^xs:hexBinary\("D74D35D35D35"\)$</serialization-matches>
      </result>
   </test-case>


  <test-case name="Serialization-adaptive-77" >
      <description>Test the adaptive serialization output method - xs:anyURI</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <modified by="Michael Kay" on="2016-10-07" change="respond to spec change"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
	xs:anyURI("http://www.example.org/")
      ]]></test>
      <result>
        <serialization-matches>^"http://www.example.org/"$</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-78" >
      <description>Test the adaptive serialization output method - xs:QName</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        xs:QName("xs:integer")
      ]]></test>
      <result>
        <serialization-matches>^Q\{http://www.w3.org/2001/XMLSchema\}integer$</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-78a" covers-40="PR2060">
      <description>Test the adaptive serialization output method - xs:QName</description>
      <created by="Christian Gruen" on="2025-06-25"/>
      <dependency type="spec" value="XQ40+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        xs:QName("xs:integer")
      ]]></test>
      <result>
        <serialization-matches>^#Q\{http://www.w3.org/2001/XMLSchema\}integer$</serialization-matches>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-79" >
      <description>Test the adaptive serialization output method - xs:string escaping</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        "'"
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^"'"$</serialization-matches>
	  <serialization-matches>^''''$</serialization-matches>
	</any-of>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-80" >
      <description>Test the adaptive serialization output method - xs:string escaping</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        '"'
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'"'$</serialization-matches>
	  <serialization-matches>^""""$</serialization-matches>
	</any-of>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-81" >
      <description>Test the adaptive serialization output method - xs:untypedAtomic escaping</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        xs:untypedAtomic("'")
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^"'"$</serialization-matches>
	  <serialization-matches>^''''$</serialization-matches>
	</any-of>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-82" >
      <description>Test the adaptive serialization output method - xs:untypedAtomic escaping</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        xs:untypedAtomic('"')
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'"'$</serialization-matches>
	  <serialization-matches>^""""$</serialization-matches>
	</any-of>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-83" >
      <description>Test the adaptive serialization output method - xs:anyURI escaping</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        xs:anyURI("'")
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^"'"$</serialization-matches>
	  <serialization-matches>^''''$</serialization-matches>
	</any-of>
      </result>
   </test-case>

  <test-case name="Serialization-adaptive-84" >
      <description>Test the adaptive serialization output method - xs:anyURI escaping</description>
      <created by="Tim Mills" on="2016-09-13"/>
      <modified by="Josh Spiegel" on="2016-10-10" change="Bug 29926"/>
      <dependency type="spec" value="XQ31+"/>
      <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        xs:anyURI('"')
      ]]></test>
      <result>
	<any-of>
	  <serialization-matches>^'"'$</serialization-matches>
	  <serialization-matches>^""""$</serialization-matches>
          <error code="FORG0001"/>
	</any-of>
      </result>
   </test-case>

<test-case name="Serialization-adaptive-85" >
    <description>Test the adaptive serialization output method - xs:string escaping (Saxon bug 5387)</description>
    <created by="Michael Kay" on="2022-03-12"/>
    <dependency type="spec" value="XQ31+"/>
    <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        '""'
      ]]></test>
    <result>
      <any-of>
        <serialization-matches>^'""'$</serialization-matches>
        <serialization-matches>^""""""$</serialization-matches>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="Serialization-adaptive-86" >
    <description>Test the adaptive serialization output method - xs:string escaping (Saxon bug 5387)</description>
    <created by="Michael Kay" on="2022-03-12"/>
    <dependency type="spec" value="XQ31+"/>
    <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        "''"
      ]]></test>
    <result>
      <any-of>
        <serialization-matches>^"''"$</serialization-matches>
        <serialization-matches>^''''''$</serialization-matches>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="Serialization-adaptive-87" >
    <description>Test the adaptive serialization output method - xs:string escaping (Saxon bug 5387)</description>
    <created by="Michael Kay" on="2022-03-12"/>
    <dependency type="spec" value="XQ31+"/>
    <test><![CDATA[
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        "'""'"
      ]]></test>
    <result>
      <any-of>
        <serialization-matches>^"'""'"$</serialization-matches>
        <serialization-matches>^'''"'''$</serialization-matches>
      </any-of>
    </result>
  </test-case>
  
  <test-case name="Serialization-adaptive-88" >
    <description>Test the adaptive serialization output method - attribute node -escaping - Saxon bug 5603</description>
    <created by="Michael Kay" on="2022-07-13"/>
    <dependency type="spec" value="XQ31+"/>
    <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        
        attribute att-name { "att&lt;&amp;&gt;value" }

      ]]></test>
    <result>
      <serialization-matches><![CDATA[^att-name\s*=\s*['"]att&lt;&amp;&gt;value['"]$]]></serialization-matches>
    </result>
  </test-case>
  
  <test-case name="Serialization-adaptive-89" >
    <description>Test the adaptive serialization output method - text node - escaping - Saxon bug 5604</description>
    <created by="Michael Kay" on="2022-07-13"/>
    <dependency type="spec" value="XQ31+"/>
    <test><![CDATA[
 
     	declare namespace output = "http://www.w3.org/2010/xslt-xquery-serialization";
        declare option output:method "adaptive";
        declare option output:omit-xml-declaration "yes";
        
        <a> &lt;-&gt; </a> / text()

      ]]></test>
    <result>
      <serialization-matches><![CDATA[^ &lt;-&gt; $]]></serialization-matches>
    </result>
  </test-case>
  
  <test-case name="Serialization-adaptive-90" covers-40="PR2114">
    <description>Adaptive serialization - jnodes</description>
    <created by="Michael Kay" on="2025-07-29"/>
    <dependency type="spec" value="XQ40+"/>
    <test>jtree({'x':1,'y':2})</test>
    <result>
      <serialization-matches><![CDATA[jnode\(\{"x":1,"y":2\}\)]]></serialization-matches>
    </result>
  </test-case>
  
  <test-case name="Serialization-adaptive-91" covers-40="PR2114">
    <description>Adaptive serialization - jnodes</description>
    <created by="Michael Kay" on="2025-07-29"/>
    <dependency type="spec" value="XQ40+"/>
    <test>jtree([1,2,3])</test>
    <result>
      <serialization-matches><![CDATA[jnode\(\[1,2,3\]\)]]></serialization-matches>
    </result>
  </test-case>
  
  <test-case name="Serialization-adaptive-92" covers-40="PR2114">
    <description>Adaptive serialization - jnodes</description>
    <created by="Michael Kay" on="2025-07-29"/>
    <dependency type="spec" value="XQ40+"/>
    <test>jtree([{'x':1, 'y':2}])/*</test>
    <result>
      <serialization-matches><![CDATA[jnode\(\{"x":1,"y":2\}\)]]></serialization-matches>
    </result>
  </test-case>
  

</test-set>   
