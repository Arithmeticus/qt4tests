<?xml version="1.0" encoding="UTF-8"?>
<changes>   
    <spec name="FO40">
        <change id="fn-all-different">New function fn:all-different</change>
        <change id="fn-all-equal">New function fn:all-equal</change>
        <change id="fn-atomic-equal">New function fn:atomic-equal</change>
        <change id="fn-build-uri">New function fn:build-uri</change>
        <change id="fn-char">New function fn:char</change>
        <change id="fn-characters">New function fn:characters</change>
        <change id="fn-codepoints-to-string">Function fn:codepoints-to-string becomes variadic (TODO???)</change>
        <change id="fn-concat">Function fn:concat allows sequence-valued arguments (TODO???)</change>
        <change id="fn-contains-sequence">New function fn:contains-sequence</change>
        <change id="fn-deep-equal">New options argument to function fn:deep-equal</change>
        <change id="fn-duplicate-values">New function fn:duplicate-values</change>
        <change id="fn-ends-with-sequence">New function fn:ends-with-sequence</change>
        <change id="fn-every">New function fn:every</change>
        <change id="fn-expanded-QName">New function fn:expanded-QName</change>
        <change id="fn-format-integer">Changes to fn:format-integer, for example hex and binary output</change>
        <change id="fn-format-number">Changes to fn:format-number, decimal format supplied as QName</change>
        <change id="fn-foot">New function fn:foot</change>
        <change id="fn-highest">New function fn:highest</change>
        <change id="fn-identity">New function fn:identity</change>
        <change id="fn-in-scope-namespaces">New function fn:in-scope-namespaces</change>
        <change id="fn-index-where">New function fn:items-where</change>
        <change id="fn-intersperse">New function fn:intersperse</change>
        <change id="fn-is-NaN">New function fn:is-NaN</change>
        <change id="fn-items-after">New function fn:items-after</change>
        <change id="fn-items-at">New function fn:items-at</change>
        <change id="fn-items-before">New function fn:items-before</change>
        <change id="fn-items-ending-where">New function fn:items-ending-where</change>
        <change id="fn-items-starting-where">New function fn:items-starting-where</change>
        <change id="fn-iterate-while">New function fn:iterate-while</change>
        <change id="fn-json-doc">Extra options to fn:json-doc</change>
        <change id="fn-log">New function fn:log</change>
        <change id="fn-lowest">New function fn:lowest</change>
        <change id="fn-op">New function fn:op</change>
        <change id="fn-parcel">New function fn:parcel (TODO: drop???)</change>
        <change id="fn-parse-QName">New function fn:parse-QName</change>
        <change id="fn-parse-html">New function fn:parse-html</change>
        <change id="fn-parse-integer">New function fn:parse-integer</change>
        <change id="fn-parse-json">New options for function fn:parse-json</change>
        <change id="fn-parse-uri">New function fn:parse-uri</change>
        <change id="fn-partition">New function fn:partition</change>
        <change id="fn-parts">New function fn:parts (TODO: not currently in spec)</change>
        <change id="fn-resolve-uri">Changes to fn:resolve-uri (empty sequence in arg 2)</change>
        <change id="fn-remove">Changes to fn:remove (remove multiple items)</change>
        <change id="fn-replace">Changes to fn:replace (new substitute argument)</change>
        <change id="fn-replicate">New function fn:replicate</change>
        <change id="fn-slice">New function fn:slice</change>
        <change id="fn-some">New function fn:some</change>
        <change id="fn-starts-with-sequence">New function fn:starts-with-sequence</change>
        <change id="fn-transform">Changes to function fn:transform</change>
        <change id="fn-trunk">New function fn:trunk</change>
        <change id="fn-unparcel">New function fn:unparcel (TODO: drop???)</change>
        <change id="fn-transform">Changes to function fn:transform</change>
        <change id="fn-transitive-closure">Changes to function fn:transform</change>
        <change id="fn-void">New function fn:void</change>
        <change id="fn-xdm-to-json">Extra options to fn:xdm-to-json</change>
        <change id="fn-xml-to-json">Changes to function fn:xml-to-json</change>
        <change id="map-build">New function map:build</change>
        <change id="map-entries">New function map:entries</change>
        <change id="map-filter">Changes to function map:filter</change>
        <change id="map-get">Extra argument to map:get</change>
        <change id="map-group-by">New function map:group-by (TODO: status ???)</change>
        <change id="map-keys">Extra argument to map:keys</change>
        <change id="map-of-pairs">New function map:of-pairs</change>
        <change id="map-pair">New function map:pair</change>
        <change id="map-values">New function map:values</change>
        <change id="array-build">New function array:build</change>
        <change id="array-foot">New function array:foot</change>
        <change id="array-get">Extra argument to array:get</change>
        <change id="array-of-members">New function array:of-members</change>
        <change id="array-members">New function array:members</change>
        <change id="array-slice">New function array:slice</change>
        <change id="array-split">New function array:split</change>
        <change id="array-trunk">New function array:trunk</change>

    </spec>
    <spec name="XP40">
        <change id="prod-EnumerationType">enum() types</change>
        <change id="prod-LambdaExpr">abbreviated inline functions - lambda notation</change>
        <change id="prod-LocalUnionType">local union types</change>
        <change id="prod-InlineFunctionExpr.focus">abbreviated inline functions - focus notation</change>
        <change id="multiple-let">Multiple let clauses in an expression</change>
        <change id="multiple-for">Multiple for clauses in an expression</change>
        <change id="prod-ForClause.member">For-member in for expressions</change>
        <change id="prod-MappingArrow">Tests the =!> operator</change>
        <change id="if-curlies">Curly braces in if expression</change>
        <change id="keywords">Keywords in static function calls</change>
        <change id="numeric-underscores">Underscores in numeric literals</change>
        <change id="hex-literals">Hex notation in numeric literals</change>
        <change id="binary-literals">Binary notation in numeric literals</change>
        <change id="otherwise">Otherwise operator</change>
        <change id="record-test">Record tests</change>
        <change id="prod-ThinArrow">Thin arrow expressions</change>
        <change id="prod-StringTemplate">String templates</change>
        <change id="prod-UnionNodeTest">Union node test</change>
        <change id="downcasting">Downcasting in coercion rules</change>
        <change id="arity-coercion">Reducing arity in coercion rules</change>
        <change id="operator-symbols">Non-ASCII characters in operator tokens</change>
        <change id="NameTestUnion">Name test unions</change>
    </spec>
    <spec name="XQ40">
        <change id="defaulted-params">Default params in function declarations</change>
        <change id="switch">Changes to switch expressions</change>
        <change id="window">Changes to FLWOR window clause</change>
        <change id="coercion-in-variables">Coercion rules are applied to variables</change> 
        <change id="typeswitch-braces">Curly braces in typeswitch expressions</change> 
    </spec>
    
    <spec name="SE40">
        <change id="escape-solidus">New serialization parameter escape-solidus</change>
    </spec>
    
</changes>
