<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="xs-dateTimeStamp" covers-30="xsd11">
   <description>Tests for the xs:dateTimeStamp values</description>

   <dependency type="xsd-version" value="1.1"/>

   <test-case name="xs-dateTimeStamp-1">
      <description>Make sure the value returned by current-dateTime() includes a timezone</description>
      <created by="Norman Walsh" on="2011-07-28"/>
      <test>exists(fn:timezone-from-dateTime(fn:current-dateTime()))</test>
      <result>
         <assert-eq>true()</assert-eq>
      </result>
   </test-case>

   <test-case name="xs-dateTimeStamp-2">
      <description>Make sure xs:dateTimeStamp() has a timezone</description>
      <created by="Norman Walsh" on="2011-07-28"/>
      <modified by="Michael Kay" on="2011-07-29" change="add hyphens to date part"/>
      <test>exists(fn:timezone-from-dateTime(xs:dateTimeStamp("2011-07-28T12:34:56-08:00")))</test>
      <result>
         <assert-eq>true()</assert-eq>
      </result>
   </test-case>

   <test-case name="xs-dateTimeStamp-3">
      <description>Make sure an attempt to create an xs:dateTimeStamp() w/o a timezone fails</description>
      <created by="Norman Walsh" on="2011-07-28"/>
      <modified by="Michael Kay" on="2011-07-29" change="make test name unique, change expected error"/>
      <test>xs:dateTimeStamp("2011-07-28T12:34:56")</test>
      <result>
         <error code="FORG0001"/>
      </result>
   </test-case>
   
   <test-case name="xs-dateTimeStamp-4">
      <description>Make sure an attempt to create an xs:dateTimeStamp() w/o a timezone fails</description>
      <created by="Michael Kay" on="2020-09-27"/>
      <test>xs:dateTimeStamp(xs:dateTime("2011-07-28T12:34:56"))</test>
      <result>
         <error code="FORG0001"/>
      </result>
   </test-case>
   
   <test-case name="xs-dateTimeStamp-5">
      <description>Cast from xs:date with timezone</description>
      <created by="Michael Kay" on="2020-09-27"/>
      <test>xs:dateTimeStamp(xs:date("2011-07-28+01:00"))</test>
      <result>
         <assert-string-value>2011-07-28T00:00:00+01:00</assert-string-value>
      </result>
   </test-case>
   
   <test-case name="xs-dateTimeStamp-6">
      <description>Cast from xs:date with timezone</description>
      <created by="Michael Kay" on="2020-09-27"/>
      <test>current-date() castable as xs:dateTimeStamp</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="xs-dateTimeStamp-7" covers-40="PR1090">
      <description>Cast from xs:string with potential truncation of fractional seconds</description>
      <created by="Michael Kay" on="2020-09-27"/>
      <dependency type="spec" value="XP40+ XQ40+"/>
      <test>xs:dateTimeStamp('2023-12-31T23:59:59.99999999999999999999999999999999999999Z') 
         => year-from-dateTime()</test>
      <result>
         <assert-eq>2023</assert-eq>
      </result>
   </test-case>
   
   <test-case name="xs-dateTimeStamp-8" covers-40="PR1090">
      <description>Cast from xs:string with potential truncation of fractional seconds</description>
      <created by="Michael Kay" on="2020-09-27"/>
      <dependency type="spec" value="XP40+ XQ40+"/>
      <test>xs:dateTimeStamp('2023-12-31T23:59:59.99999999999999999999999999999999999999Z') 
         => string() => starts-with('2023-12-31T23:59:59.999')</test>
      <result>
         <assert-true/>
      </result>
   </test-case>




</test-set>