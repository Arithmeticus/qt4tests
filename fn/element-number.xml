<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-element-number">
   <description>Tests for the element-number() function</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-11/"
         idref="func-round"/>
   <environment name="xdm">
      <source role="." file="element-number/xpath-datamodel.xml">
         <description>A snapshot of the data model spec, used simply as a test document</description>
         <created by="Michael Kay" on="2024-09-19"/>
      </source>
   </environment>
   
   <dependency type="spec" value="XP40+ XQ40+"/>
   
   <test-case name="element-number-101">
      <description>Number of a top-level section within the document</description>
      <created by="Michael Kay" on="2024-09-19"/>
      <environment ref="xdm"/>
      <test>element-number(//div1[@id='construction'])</test>
      <result>
         <assert-eq>3</assert-eq>
      </result>
   </test-case>
   
   <test-case name="element-number-102">
      <description>Number of a second-level section within the document</description>
      <created by="Michael Kay" on="2024-09-19"/>
      <environment ref="xdm"/>
      <test>element-number(//div2[@id='const-infoset'])</test>
      <result>
         <assert-eq>12</assert-eq>
      </result>
   </test-case>
   
   <test-case name="element-number-103">
      <description>Number of a second-level section within its parent</description>
      <created by="Michael Kay" on="2024-09-19"/>
      <environment ref="xdm"/>
      <test>let $target := //div2[@id='const-psvi'] return element-number($target, $target/..)</test>
      <result>
         <assert-eq>3</assert-eq>
      </result>
   </test-case>
   
   <test-case name="element-number-104">
      <description>Number of an appendix</description>
      <created by="Michael Kay" on="2024-09-19"/>
      <environment ref="xdm"/>
      <test>element-number(//div1[@id='references'], //back) => format-integer('A')</test>
      <result>
         <assert-eq>'B'</assert-eq>
      </result>
   </test-case>
   
   <test-case name="element-number-105">
      <description>Number of an appendix</description>
      <created by="Michael Kay" on="2024-09-19"/>
      <environment ref="xdm"/>
      <test>element-number(//*[@id='ChangeLog'], //back, fn{self::div1 or self::inform-div1}) => format-integer('A')</test>
      <result>
         <assert-eq>'F'</assert-eq>
      </result>
   </test-case>
   
   <test-case name="element-number-106">
      <description>Number of a bibref based on the position of the corresponding bibl</description>
      <created by="Michael Kay" on="2024-09-19"/>
      <environment ref="xdm"/>
      <test>
         let $bibref := (//bibref[@ref="xpath-40"])[1]
         return element-number(//bibl[@id=$bibref/@ref])
      </test>
      <result>
         <assert-eq>7</assert-eq>
      </result>
   </test-case>
   
   <test-case name="element-number-107">
      <description>Hierarchic section number</description>
      <created by="Michael Kay" on="2024-09-19"/>
      <environment ref="xdm"/>
      <test>
         let $target := //*[@id="const-infoset-namespace"]
         return ($target/ancestor-or-self::*[matches(local-name(), 'div[1-9]')]
               ! element-number(., ..)) => string-join('.')
      </test>
      <result>
         <assert-eq>"5.4.3"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="element-number-108">
      <description>Hierarchic clause number</description>
      <created by="Michael Kay" on="2024-09-19"/>
      <environment ref="xdm"/>
      <test>
         let $target := head(//item[starts-with(p, "If the {name} property of the actual type is absent")])
         return ($target/ancestor-or-self::item
               ! element-number(., ..) 
               ! format-integer(., ('1', 'a', 'i', 'A') => items-at(position()))) => string-join(".")
      </test>
      <result>
         <assert-eq>"1.b.ii"</assert-eq>
      </result>
   </test-case>



</test-set>