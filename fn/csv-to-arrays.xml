<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-csv-to-arrays" covers-40="fn-csv-to-arrays">
  <description>Tests for the fn:csv-to-arrays function</description>
  <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/" idref="func-csv-to-arrays"/>
  <dependency type="spec" value="XP40+ XQ40+"/>
  
  <test-case name="csv-to-arrays-001">
    <description>Empty sequence</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test><![CDATA[fn:csv-to-arrays(())]]></test>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-002">
    <description>Empty string</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("")</test>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-003">
    <description>Single row, single column</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one")</test>
    <result>
      <all-of>
        <assert-type>array(xs:string)</assert-type>
        <assert-count>1</assert-count>
        <assert>array:size($result[1]) eq 1</assert>
        <assert>$result[1]?1 = "one"</assert>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-004">
    <description>Single row, two columns</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,two")</test>
    <result>
      <all-of>
        <assert-type>array(xs:string)</assert-type>
        <assert-count>1</assert-count>
        <assert>array:size($result[1]) eq 2</assert>
        <assert>$result[1]?1 = "one"</assert>
        <assert>$result[1]?2 = "two"</assert>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-005">
    <description>Two rows, two columns</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,two"||char(10)||"three,four")</test>
    <result>
      <all-of>
        <assert-type>array(xs:string)*</assert-type>
        <assert-count>2</assert-count>
        <assert>array:size($result[1]) eq 2</assert>
        <assert>array:size($result[2]) eq 2</assert>
        <assert>$result[1]?1 = "one"</assert>
        <assert>$result[1]?2 = "two"</assert>
        <assert>$result[2]?1 = "three"</assert>
        <assert>$result[2]?2 = "four"</assert>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-006">
    <description>Two rows, two columns; extra newline at end</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,two"||char(10)||"three,four"||char(10))</test>
    <result>
      <all-of>
        <assert-type>array(xs:string)*</assert-type>
        <assert-count>2</assert-count>
        <assert>array:size($result[1]) eq 2</assert>
        <assert>array:size($result[2]) eq 2</assert>
        <assert>$result[1]?1 = "one"</assert>
        <assert>$result[1]?2 = "two"</assert>
        <assert>$result[2]?1 = "three"</assert>
        <assert>$result[2]?2 = "four"</assert>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-007">
    <description>Two rows, ragged columns</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,two"||char(10)||"three,four,five")</test>
    <result>
      <all-of>
        <assert-type>array(xs:string)*</assert-type>
        <assert-count>2</assert-count>
        <assert>array:size($result[1]) eq 2</assert>
        <assert>array:size($result[2]) eq 3</assert>
        <assert>$result[1]?1 = "one"</assert>
        <assert>$result[1]?2 = "two"</assert>
        <assert>$result[2]?1 = "three"</assert>
        <assert>$result[2]?2 = "four"</assert>
        <assert>$result[2]?3 = "five"</assert>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-008">
    <description>Blank line</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,two"||char(10)||char(10)||"three,four")</test>
    <result>
      <all-of>
        <assert-type>array(xs:string)*</assert-type>
        <assert-count>3</assert-count>
        <assert>array:size($result[1]) eq 2</assert>
        <assert>array:size($result[2]) eq 0</assert>
        <assert>array:size($result[3]) eq 3</assert>
        <assert>$result[1]?1 = "one"</assert>
        <assert>$result[1]?2 = "two"</assert>
        <assert>$result[3]?1 = "three"</assert>
        <assert>$result[3]?2 = "four"</assert>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-009">
    <description>Quoted field</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,two"||char(10)||'"three,four",five')</test>
    <result>
      <all-of>
        <assert-type>array(xs:string)*</assert-type>
        <assert-count>2</assert-count>
        <assert>array:size($result[1]) eq 2</assert>
        <assert>array:size($result[2]) eq 2</assert>
        <assert>$result[1]?1 = "one"</assert>
        <assert>$result[1]?2 = "two"</assert>
        <assert>$result[2]?1 = "three,four"</assert>
        <assert>$result[2]?2 = "five"</assert>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-010">
    <description>Quoted field with escaped quotes</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,two"||char(10)||'"three,""four""",five')</test>
    <result>
      <all-of>
        <assert-type>array(xs:string)*</assert-type>
        <assert-count>2</assert-count>
        <assert>array:size($result[1]) eq 2</assert>
        <assert>array:size($result[2]) eq 2</assert>
        <assert>$result[1]?1 = "one"</assert>
        <assert>$result[1]?2 = "two"</assert>
        <assert>$result[2]?1 = 'three,"four"'</assert>
        <assert>$result[2]?2 = "five"</assert>
      </all-of>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-011">
    <description>CRLF delimiter</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,two"||char(13)||char(10)||"three,four")</test>
    <result>
      <assert-deep-eq>["one","two"],["three","four"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-012">
    <description>CR delimiter</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,two"||char(13)||"three,four"||char(13))</test>
    <result>
      <assert-deep-eq>["one","two"],["three","four"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-013">
    <description>Empty fields</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,"||char(10)||",four"||char(10)||","||char(10)||",,,")</test>
    <result>
      <assert-deep-eq>["one",""],["","four"],["",""],["","","",""]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-014">
    <description>Empty quoted fields</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,""'||char(10)||'"","four"')</test>
    <result>
      <assert-deep-eq>["one",""],["","four"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-015">
    <description>Newline in quoted field</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,"["'||char(10)||']'||char(10)||'"","four"')</test>
    <result>
      <assert-deep-eq>["one","["||char(10)||"]"],["","four"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-020">
    <description>Field delimiter semicolon</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one;two"||char(10)||"three;four", map{'field-delimiter':';'})</test>
    <result>
      <assert-deep-eq>["one","two"],["three","four"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-021">
    <description>Row delimiter vertical bar</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,two|three,four", map{'row-delimiter':'|'})</test>
    <result>
      <assert-deep-eq>["one","two"],["three","four"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-022">
    <description>Reset both delimiters</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one.two|three.four", map{'row-delimiter':'|','field-delimiter':'.'})</test>
    <result>
      <assert-deep-eq>["one","two"],["three","four"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-023">
    <description>Alternative row delimiters</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one.two|three.four"||char(10)||"five.six", 
                           map{'row-delimiter':('|',char(10)),'field-delimiter':'.'})</test>
    <result>
      <assert-deep-eq>["one","two"],["three","four"],["five","six"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-024">
    <description>Single quotes</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,'two,2'|three,'four,4'", 
      map{'row-delimiter':'|','quote-character':"'"})</test>
    <result>
      <assert-deep-eq>["one","two,2"],["three","four,4"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-025">
    <description>Single quotes, escaped</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one,'two,''2'''|three,'four,''4'''", 
      map{'row-delimiter':'|','quote-character':"'"})</test>
    <result>
      <assert-deep-eq>["one","two,'2'"],["three","four,'4'"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-026">
    <description>Whitespace not trimmed</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one ,two | three, four", 
      map{'row-delimiter':'|'})</test>
    <result>
      <assert-deep-eq>["one ","two "],[" three"," four"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-027">
    <description>Whitespace explicitly not trimmed</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one ,two | three, four", 
      map{'row-delimiter':'|', 'trim-whitespace':false()})</test>
    <result>
      <assert-deep-eq>["one ","two "],[" three"," four"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-028">
    <description>Whitespace trimmed</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays("one ,two | three, twenty  four ", 
      map{'row-delimiter':'|', 'trim-whitespace':true()})</test>
    <result>
      <assert-deep-eq>["one","two"],["three","twenty  four"]</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-901">
    <description>Unclosed quotes</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,two,"three')</test>
    <result>
      <error code="FOCV0001"/>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-902">
    <description>Quotes in mid-field</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,two"three"')</test>
    <result>
      <error code="FOCV0001"/>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-903">
    <description>Quotes in mid-field</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,"two"three')</test>
    <result>
      <error code="FOCV0001"/>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-904">
    <description>Field delimiter not a single char</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,two', map{'field-delimiter':'::'})</test>
    <result>
      <error code="FOCV0002"/>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-905">
    <description>Field delimiter not a single char</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,two', map{'field-delimiter':''})</test>
    <result>
      <error code="FOCV0002"/>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-906">
    <description>Row delimiter not a single char</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,two', map{'row-delimiter':'||'})</test>
    <result>
      <error code="FOCV0002"/>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-907">
    <description>Row delimiter not a single char</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,two', map{'row-delimiter':('|','||')})</test>
    <result>
      <error code="FOCV0002"/>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-908">
    <description>Same delimiter in multiple roles</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,two', map{'row-delimiter':','})</test>
    <result>
      <error code="FOCV0003"/>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-909">
    <description>Same delimiter in multiple roles</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,two', map{'field-delimiter':char(10)})</test>
    <result>
      <error code="FOCV0003"/>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-910">
    <description>Same delimiter in multiple roles</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,two', map{'field-delimiter':'"'})</test>
    <result>
      <error code="FOCV0003"/>
    </result>
  </test-case>
  
  <test-case name="csv-to-arrays-911">
    <description>Same delimiter in multiple roles</description>
    <created by="Michael Kay" on="2024-02-26"/>
    <test>fn:csv-to-arrays('one,two', map{'field-delimiter':';', 'row-delimiter':';'})</test>
    <result>
      <error code="FOCV0003"/>
    </result>
  </test-case>
  
  
  
 
</test-set>