<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="fn-subsequence-before" covers-40="fn-subsequence-before">
   <description>Tests for the fn:subsequence-before extension function (4.0 proposal)</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-11/"
         idref="func-subsequence-before"/>
         
    <dependency type="spec" value="XP40+ XQ40+"/>  

   <test-case name="subsequence-before-001">
       <description>Basic example</description>
      <created by="Michael Kay" on="2019-06-09"/>
      <test>subsequence-before(1 to 29, function($x){$x=10})</test>
      <result>
          <assert-deep-eq>1 to 9</assert-deep-eq>
      </result>
   </test-case>
    
    <test-case name="subsequence-before-002">
        <description>No match</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>subsequence-before(1 to 29, function($x){$x=100})</test>
        <result>
            <assert-deep-eq>1 to 29</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-003">
        <description>Match on first</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>subsequence-before(1 to 29, function($x){true()})</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-004">
        <description>Empty input</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>subsequence-before((), function($x){$x = 3})</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-005">
        <description>Match at end of sequence</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>subsequence-before(1 to 29, function($x){$x eq 29})</test>
        <result>
            <assert-deep-eq>1 to 28</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-006">
        <description>Map as argument</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>subsequence-before(1 to 5, map{1:false(), 2:false(), 3:true(), 4:true(), 5:true()})</test>
        <result>
            <assert-deep-eq>1 to 2</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-007">
        <description>Sequence of nodes</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <dependency type="spec" value="XQ31+"/>
        <test><![CDATA[
            let $nodes := document{<x><a/><b/><c/><d/><e/></x>}
            return subsequence-before($nodes/x/*, function($node){exists($node[self::c])})!local-name()
            ]]></test>
        <result>
            <assert-deep-eq>'a', 'b'</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-008">
        <description>Zero-arity callback</description>
        <created by="Michael Kay" on="2023-11-30"/>
        <test>subsequence-before(1 to 29, true#0)</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-009">
        <description>Zero-arity callback</description>
        <created by="Michael Kay" on="2023-11-30"/>
        <test>subsequence-before(1 to 29, false#0)</test>
        <result>
            <assert-deep-eq>1 to 29</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-010">
        <description>Arity 2 callback</description>
        <created by="Michael Kay" on="2023-11-30"/>
        <test>subsequence-before(1 to 29, op('eq'))</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-011">
        <description>Arity 2 callback</description>
        <created by="Michael Kay" on="2023-11-30"/>
        <test>subsequence-before(1 to 29, op('ne'))</test>
        <result>
            <assert-deep-eq>1 to 29</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-012">
        <description>Arity 2 callback</description>
        <created by="Michael Kay" on="2023-11-30"/>
        <test>subsequence-before((1 to 10, 12 to 20), op('ne'))</test>
        <result>
            <assert-deep-eq>1 to 10</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-013">
        <description>Arity 2 callback</description>
        <created by="Michael Kay" on="2023-11-30"/>
        <test>subsequence-before((1 to 10, 12 to 20), fn($it, $pos){$pos mod 2 ne $it mod 2})</test>
        <result>
            <assert-deep-eq>1 to 10</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-901">
        <description>Test use of EBV is disallowed</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>subsequence-before(1 to 100, function($x){$x - 1})</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-902">
        <description>Wrong arity of function</description>
        <created by="Michael Kay" on="2019-06-09"/>
        <test>subsequence-before(1 to 100, function($x, $y, $z){$x eq $z})</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    
    <test-case name="subsequence-before-903">
        <description>Error evaluating callback function</description>
        <created by="Michael Kay" on="2023-11-30"/>
        <test>subsequence-before(("a", "b", "c"), function($x, $y){$x gt $y})</test>
        <result>
            <error code="XPTY0004"/>
        </result>
    </test-case>
    
 
    

  
</test-set>