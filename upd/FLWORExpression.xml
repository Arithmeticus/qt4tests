<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog"
          name="upd-FLWORExpression">
   <description>XQuery Update - FLWOR Expressions</description>

   <dependency type="spec" value="XQ30+"/>

   <dependency type="feature" value="XQUpdate"/>

   <test-case name="id-flwor-expr-001">
      <description>Evaluates an insert expression used with FLWOR expression where the let
                  clause is an updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-01"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] let $var1 := insert node <salary>110000</salary> into $var return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-002">
      <description>Evaluates an insert expression used with FLWOR expression where the for
                  clause is an updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-02"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] for $var1 in (insert node <salary>110000</salary> into $var) return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-003">
      <description>Evaluates an insert expression used with FLWOR expression where the
                  "where" clause is an updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-03"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] where (insert node <salary>110000</salary> into $var) return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-004">
      <description>Evaluates an insert expression used with FLWOR expression where the
                  "order by" clause is an updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-04"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] order by (insert node <salary>110000</salary> into $var) descending return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-005">
      <description>Evaluates a delete expression used with FLWOR expression where the let
                  clause is an updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-05"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] let $var1 := delete node $var/salary[1] return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-006">
      <description>Evaluates a delete expression used with FLWOR expression where the for
                  clause is an updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-06"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] for $var1 in (delete node $var/salary[1]) return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-007">
      <description>Evaluates a delete expression used with FLWOR expression where the
                  "where" clause is an updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-07"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] where (delete node $var/salary[1]) return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-008">
      <description>Evaluates a delete expression used with FLWOR expression where the
                  "order by" clause is an updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-08"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] order by (delete node $var/salary[1]) descending return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-009">
      <description>Evaluates a replace expression used with FLOWR expression with "let"
                  clause set to an updating (replace) expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-09"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var1 := $input-context/employees[1]/employee[2] let $var2 := <salaries><salary>15000</salary></salaries> let $var3 := replace value of node $var1/salary[1] with $var2/salary[1] return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-010">
      <description>Evaluates a replace expression used with FLOWR expression with "for"
                  clause set to an updating (replace) expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-010"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] let $var2 := <salaries><salary>15000</salary></salaries> for $var3 in replace value of node $var/salary[1] with $var2/salary[1] return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-011">
      <description>Evaluates a replace expression used with FLOWR expression with "where"
                  clause set to an updating (replace) expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-011"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] let $var2 := <salaries><salary>15000</salary></salaries> where replace value of node $var/salary[1] with $var2/salary[1] return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-012">
      <description>Evaluates a replace expression used with FLOWR expression with "order
                  by" clause set to an updating (replace) expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-012"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] let $var2 := <salaries><salary>150000</salary></salaries> order by (replace value of node $var/salary[1] with $var2/salary[1]) ascending return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-013">
      <description>Evaluation of a rename expression use with FLWOR expression where let
                  clause is an updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-013"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] let $var1 := rename node $var/salary[1] as "salary1" return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-014">
      <description>Evaluation of a rename expression use with FLWOR expression where the
                  "for" clause is an updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-014"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] for $var1 in (rename node $var/salary[1] as "salary1") return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-015">
      <description>Evaluation of a rename expression use with FLWOR expression where the
                  "where" clause is an updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-015"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] where (rename node $var/salary[1] as "salary1") return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-016">
      <description>Evaluation of a rename expression use with FLWOR expression where the
                  "order by" clause is an updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-016"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] order by (rename node $var/salary[1] as "salary1") descending return "This Test Should Fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-017">
      <description>Evaluates a transform expression together with a FLWOR expression where
                  the "let" expression is a transform expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-017"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[1] let $var1 := copy $newVar := $var modify delete node $newVar/salary[1] return $newVar return $var1]]></test>
      <result>
         <assert-xml><![CDATA[<employee mgr="true" dept="Toys">
    <name>Smith</name>
    
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-018">
      <description>Evaluates a transform expression together with a FLWOR expression where
                  the "for" expression is a non updating (transform) expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-018"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[1] for $var1 in (copy $newVar := $var modify delete node $newVar/salary[1] return $newVar) return $var1]]></test>
      <result>
         <assert-xml><![CDATA[<employee mgr="true" dept="Toys">
    <name>Smith</name>
    
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-019">
      <description>Evaluates a transform expression together with a FLWOR expression where
                  the "where" expression is an non updating (transform) expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-019"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[1] where copy $newVar := $var modify delete node $newVar/salary[1] return $newVar return $var]]></test>
      <result>
         <assert-xml><![CDATA[<employee mgr="true" dept="Toys">
    <name>Smith</name>
    <salary>100000</salary>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-020">
      <description>Evaluates a transform expression together with a FLWOR expression where
                  the "order by" expression is a non updating (transform) expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-020"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[1] order by (copy $newVar := $var modify delete node $newVar/salary[1] return $newVar) descending return $var]]></test>
      <result>
         <assert-xml><![CDATA[<employee mgr="true" dept="Toys">
    <name>Smith</name>
    <salary>100000</salary>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-021">
      <description>Evaluation of a FLWOR expression, where return is a delete expression
                  that deletes a series nodes bounded via let clause.</description>
      <created by="Carmelo Montanez" on="2007-08-02"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-021"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := ($input-context/works[1]/employee[1], $input-context/works[1]/employee[2], $input-context/works[1]/employee[3]) return delete node $var/empnum[1]]]></test>
      <test><![CDATA[ fn:count(.//empnum)]]></test>
      <result>
         <assert-string-value>10</assert-string-value>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-022">
      <description>Evaluation of a FLWOR expression, where return is a delete expression
                  that deletes a series nodes bounded via for clause.</description>
      <created by="Carmelo Montanez" on="2007-08-02"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-022"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; for $var in $input-context/works[1]/employee return delete node $var/empnum[1]]]></test>
      <test><![CDATA[ fn:count(.//empnum)]]></test>
      <result>
         <assert-string-value>0</assert-string-value>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-023">
      <description>For clause that contains a for expression with a simple return
                  clause.</description>
      <created by="Andrew Eisenberg" on="2008-10-25"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-023"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; for $var in for $var in $input-context/works[1]/employee[1]/hours[1] return $var return $var]]></test>
      <result>
         <assert-xml><![CDATA[<hours>40</hours>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-024">
      <description>For clause that contains a for expression with a updating return
                  clause.</description>
      <created by="Andrew Eisenberg" on="2008-10-25"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-024"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; for $var in for $var in $input-context/works[1]/employee[1]/hours[1] return delete node $var return $var]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-flwor-expr-025">
      <description>For clause that contains a for expression with a vacuous return
                  clause.</description>
      <created by="Andrew Eisenberg" on="2008-10-25"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-flwor-expr-025"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; for $var in for $var in $input-context/works[1]/employee[1]/hours[1] return () return $var]]></test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
</test-set>
