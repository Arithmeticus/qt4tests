<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="upd-fn-put">
   <description>XQuery Update - fn:put() </description>

   <dependency type="spec" value="XQ30+"/>

   <dependency type="feature" value="XQUpdate"/>

   <test-case name="fn-put-001">
      <description>Store a document.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test fn-put-001"/>
      <environment>
         <param name="uri"
            select="'../results/sandpit/put-001.xml'"
            declared="true"/>
      </environment>
      <test update="true"><![CDATA[
         declare variable $uri external; 
         fn:put(document { <test it='now'/> }, $uri)
      ]]></test>
      <result>
         <assert>doc(trace(resolve-uri('../results/sandpit/put-001.xml', static-base-uri()), 'DOC'))/test/@it='now'</assert>
      </result>
   </test-case>
   
   <test-case name="fn-put-003">
      <description>Store a comment.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
         on="2021-04-18"
         change="converted from original XQUTS test fn-put-003"/>
      <dependency type="put" value="comment"/>
      <test update="true"><![CDATA[declare variable $input-URI external; fn:put(comment { "This is a test" }, $input-URI)]]></test>
      <result>
         <assert><![CDATA[$result instance of item()* (: any non-error result is OK :)]]></assert>
      </result>
   </test-case>
   
   <test-case name="fn-put-003-fail">
      <description>Store a comment.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
         on="2021-04-18"
         change="converted from original XQUTS test fn-put-003-fail"/>
      <dependency type="put" value="comment" satisfied="false"/>
      <test update="true"><![CDATA[declare variable $input-URI external; fn:put(comment { "This is a test" }, $input-URI)]]></test>
      <result>
         <error code="FOUP0001"/>
      </result>
   </test-case>
   
   <test-case name="fn-put-004">
      <description>Store a PI.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
         on="2021-04-18"
         change="converted from original XQUTS test fn-put-004"/>
      <dependency type="put" value="processing-instruction"/>
      <test update="true"><![CDATA[declare variable $input-URI external; fn:put(processing-instruction myPI { "This is a test" }, $input-URI)]]></test>
      <result>
         <assert><![CDATA[$result instance of item()* (: any non-error result is OK :)]]></assert>
      </result>
   </test-case>
   
   <test-case name="fn-put-004-fail">
      <description>Store a PI.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
         on="2021-04-18"
         change="converted from original XQUTS test fn-put-004-fail"/>
      <dependency type="put" value="processing-instruction" satisfied="false"/>
      <test update="true"><![CDATA[declare variable $input-URI external; fn:put(processing-instruction myPI { "This is a test" }, $input-URI)]]></test>
      <result>
         <error code="FOUP0001"/>
      </result>
   </test-case>
   
   <test-case name="fn-put-005">
      <description>Store an attribute.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
         on="2021-04-18"
         change="converted from original XQUTS test fn-put-005"/>
      <dependency type="put" value="attribute"/>
      <test update="true"><![CDATA[declare variable $input-URI external; fn:put(attribute name { "Barack" }, $input-URI)]]></test>
      <result>
         <assert><![CDATA[$result instance of item()* (: any non-error result is OK :)]]></assert>
      </result>
   </test-case>
   
   <test-case name="fn-put-005-fail">
      <description>Store an attribute.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
         on="2021-04-18"
         change="converted from original XQUTS test fn-put-005-fail"/>
      <dependency type="put" value="attribute" satisfied="false"/>
      <test update="true"><![CDATA[declare variable $input-URI external; fn:put(attribute name { "Barack" }, $input-URI)]]></test>
      <result>
         <error code="FOUP0001"/>
      </result>
   </test-case>
   
   <test-case name="fn-put-006">
      <description>Store a text node.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
         on="2021-04-18"
         change="converted from original XQUTS test fn-put-006"/>
      <dependency type="put" value="text"/>
      <test update="true"><![CDATA[declare variable $input-URI external; fn:put(text { "This is a test" }, $input-URI)]]></test>
      <result>
         <assert><![CDATA[$result instance of item()* (: any non-error result is OK :)]]></assert>
      </result>
   </test-case>
   
   <test-case name="fn-put-006-fail">
      <description>Store a text node.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
         on="2021-04-18"
         change="converted from original XQUTS test fn-put-006-fail"/>
      <dependency type="put" value="text" satisfied="false"/>
      <test update="true"><![CDATA[declare variable $input-URI external; fn:put(text { "This is a test" }, $input-URI)]]></test>
      <result>
         <error code="FOUP0001"/>
      </result>
   </test-case>

   <test-case name="fn-put-007">
      <description>Bad URI as argument to fn:put.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test fn-put-007"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[fn:put(document { <test/> }, "http:\\invalid&gt;URI\someURI")]]></test>
      <result>
         <error code="FOUP0002"/>
      </result>
   </test-case>

   <test-case name="fn-put-008">
      <description>Check that fn:put is an updating function.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test fn-put-008"/>
      <environment/>
      <test update="true"><![CDATA[declare variable $input-URI external; 12, fn:put(document { <test/> }, $input-URI)]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="fn-put-009">
      <description>Check that fn:put is an updating function.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test fn-put-009"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
         <param name="uri"
            select="'../results/sandpit/put-009.xml'"
            declared="true"/>
      </environment>
      <test update="true"><![CDATA[
         declare variable $input-context external; 
         declare variable $uri external; 
         let $var := $input-context/works[1]/employee[1] 
         return ( insert node <retiring/> as last into $var, 
                  fn:put(document { <test/> }, $uri) )
      ]]></test>
      <test update="true"><![CDATA[
         declare variable $uri external;
         document {
            <out>{
               fn:doc($uri),
               ./works[1]/employee[1]
            }</out>  
         }
      ]]></test>
      <result>
         <all-of>
            <assert>$result/out/test=''</assert>
            <assert>$result/out/employee[@name="Jane Doe 1"]/retiring=''</assert>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-put-011">
      <description>Check that fn:put does not become effective until after completion of
                     the snapshot.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test fn-put-011"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
         <param name="uri"
            select="'../results/sandpit/put-011.xml'"
            declared="true"/>
      </environment>
      <test update="true"><![CDATA[
         declare variable $input-context external; 
         declare variable $uri external; 
         let $var := $input-context/works[1]/employee[1]
         let $uri-random := $uri || current-dateTime()
         return ( fn:put(document { <test/> }, $uri-random), 
         insert node fn:doc($uri-random)/test[1] as last into $var )
      ]]></test>
      <result>
         <any-of>
            <error code="FODC0002"/>
            <error code="FODC0005"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="fn-put-012">
      <description>Multiple invocations of fn:put on the same URI.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test fn-put-012"/>
      <environment>
         <param name="uri"
            select="'../results/sandpit/put-012.xml'"
            declared="true"/>
      </environment>
      <test update="true"><![CDATA[
         declare variable $uri external; 
         fn:put(document { <test/> }, $uri), 
         fn:put(document { <test2/> }, $uri)
      ]]></test>
      <result>
         <error code="XUDY0031"/>
      </result>
   </test-case>

   <test-case name="fn-put-013">
      <description>Multiple invocations of fn:put on different URIs.</description>
      <created by="Andrew Eisenberg" on="2008-11-05"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test fn-put-013"/>
      <environment>
         <param name="uri-a"
            select="'../results/sandpit/put-013a.xml'"
            declared="true"/>
         <param name="uri-b"
            select="'../results/sandpit/put-013b.xml'"
            declared="true"/>
      </environment>
      <test update="true"><![CDATA[
         declare variable $uri-a external; 
         declare variable $uri-b external; 
         fn:put(document { <test-a/> }, $uri-a), 
         fn:put(document { <test-b/> }, $uri-b)
      ]]></test>
      <result>
         <all-of>
            <assert>doc('../results/sandpit/put-013a.xml')/test-a</assert>
            <assert>doc('../results/sandpit/put-013b.xml')/test-b</assert>
         </all-of>
      </result>
   </test-case>

   <test-case name="fn-put-014">
      <description>Multiple invocations of fn:put on the same URI.</description>
      <created by="Andrew Eisenberg" on="2008-11-12"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test fn-put-014"/>
      <environment>
         <param name="uri-a"
            select="'../results/sandpit/put-014.xml'"
            declared="true"/>
         <param name="uri-b"
            select="'../results/sandpit/put-014.xml'"
            declared="true"/>
      </environment>
      <test update="true"><![CDATA[
         declare variable $uri-a external; 
         declare variable $uri-b external; 
         let $d := document { <test/> } 
         return ( fn:put($d, $uri-a), fn:put($d, $uri-b) )]]></test>
      <result>
         <error code="XUDY0031"/>
      </result>
   </test-case>
   
   <test-case name="fn-put-101">
      <description>simple test of fn:put function: element node.
         Note (MHK): the spec doesn't actually say what happens when put() is applied to an 
         element node; this test assumes it is wrapped in a document node.
      </description>
      <created by="Saxonica" on="2008-04-06"/>
      <modified by="Michael Kay"
         on="2021-04-18"
         change="converted from original XQUTS test put-001"/>
      <environment>
         <param name="uri"
            select="'../results/sandpit/put-101.xml'"
            declared="true"/>
      </environment>
      <test update="true"><![CDATA[
         declare variable $uri external; 
         fn:put(<test it='{current-date()}'/>, $uri)
      ]]></test>
      <result>
         <assert>doc('../results/sandpit/put-101.xml')/test/@it => starts-with('2')</assert>
      </result>
   </test-case>
 
</test-set>
