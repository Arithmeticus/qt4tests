<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog"
          name="upd-InsertExpressions">
   <description>XQuery Update - Insert Expressions</description>

   <dependency type="spec" value="XQ30+"/>

   <dependency type="feature" value="XQUpdate"/>

   <test-case name="id-insert-expr-001">
      <description>Evaluates a simple insert expression with "after" clause only. Inserts
                  an element.</description>
      <created by="Carmelo Montanez" on="2006-11-13"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-01"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node <hours>25</hours> after $var/hours[1]]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours><hours>25</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-002">
      <description>Evaluates a simple insert expression with "after" clause only. Inserts
                  an element.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-02"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node <hours>15</hours> before $var/hours[1]]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>15</hours><hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-003">
      <description>Evaluates a simple insert expression with "as first" and "into" clauses.
                  Inserts an element.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-03"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[3] return insert node <hours>15</hours> as first into $var/hours]]></test>
      <test><![CDATA[ ./works[1]/employee[3]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "Jane Doe 3" gender="female">
   <empnum>E1</empnum>
   <pnum>P3</pnum>
   <hours><hours>15</hours>80</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-004">
      <description>Evaluates a simple insert expression with "as last" and "into" clauses.
                  Inserts an element.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-04"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[3] return insert node <hours>15</hours> as last into $var/hours]]></test>
      <test><![CDATA[ ./works[1]/employee[3]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "Jane Doe 3" gender="female">
   <empnum>E1</empnum>
   <pnum>P3</pnum>
   <hours>80<hours>15</hours></hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-005">
      <description>Evaluates a simple insert expression with "into" clause only. Inserts an
                  element.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-05"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[3] return insert node <hours>15</hours> into $var/hours]]></test>
      <test><![CDATA[ ./works[1]/employee[3]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "Jane Doe 3" gender="female">
   <empnum>E1</empnum>
   <pnum>P3</pnum>
   <hours>80<hours>15</hours></hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-006">
      <description>Evaluates a simple insert expression with "after" clause only. Inserts
                  an attribute.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-06"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[3] return insert node attribute type {"Part Time"} after $var]]></test>
      <test><![CDATA[ ./works[1]/employee[3]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "Jane Doe 3" gender="female">
   <empnum>E1</empnum>
   <pnum>P3</pnum>
   <hours>80</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-007">
      <description>Evaluates a simple insert expression with "before" clause only. Inserts
                  an attribute.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-07"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[3] return insert node attribute type {"Part Time"} before $var]]></test>
      <test><![CDATA[ ./works[1]/employee[3]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "Jane Doe 3" gender="female">
   <empnum>E1</empnum>
   <pnum>P3</pnum>
   <hours>80</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-008">
      <description>Evaluates a simple insert expression with "as first" and "into" clauses.
                  Inserts an attribute.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-08"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[4] return insert node attribute type {"Part Time"} as first into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[4]]]></test>
      <result>
         <assert-xml><![CDATA[<employee type = "Part Time" name= "John Doe 4" gender="male">
   <empnum>E1</empnum>
   <pnum>P4</pnum>
   <hours>20</hours>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-009">
      <description>Evaluates a simple insert expression with "as last" and "into" clauses.
                  Inserts an attribute.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-09"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[4] return insert node attribute type {"Part Time"} as last into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[4]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name= "John Doe 4" gender="male" type = "Part Time">
   <empnum>E1</empnum>
   <pnum>P4</pnum>
   <hours>20</hours>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-010">
      <description>Evaluates a simple insert expression with "into" clause only. Inserts an
                  attribute.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-010"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[4] return insert node attribute type {"Part Time"} into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[4]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name= "John Doe 4" gender="male" type = "Part Time">
   <empnum>E1</empnum>
   <pnum>P4</pnum>
   <hours>20</hours>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-011">
      <description>Evaluates a simple insert expression with "after" clause only. Inserts a
                  comment.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-011"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1]/hours[1] return insert node <!-- A Comment Node --> after $var]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours><!-- A Comment Node -->
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-012">
      <description>Evaluates a simple insert expression with "before" clause only. Inserts
                  a comment.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-012"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1]/hours[1] return insert node <!-- A Comment Node --> before $var]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <!-- A Comment Node --><hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-013">
      <description>Evaluates a simple insert expression with "as first" and "into" clauses.
                  Inserts a comment.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-013"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1]/hours[1] return insert node <!-- A Comment Node --> as first into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours><!-- A Comment Node -->40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-014">
      <description>Evaluates a simple insert expression with "as first" and "into" clauses.
                  Inserts a comment.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-014"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1]/hours[1] return insert node <!-- A Comment Node --> as last into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40<!-- A Comment Node --></hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-015">
      <description>Evaluates a simple insert expression with "into" clause only. Inserts a
                  comment.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-015"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1]/hours[1] return insert node <!-- A Comment Node --> into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40<!-- A Comment Node --></hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-016">
      <description>Evaluates a simple insert expression with "before" clause only. Inserts
                  an element into a directly constructed element node.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-016"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node <hours>15</hours> before $var/hours[1]]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>15</hours><hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-017">
      <description>Evaluates a simple insert expression with "after" clause only. Inserts
                  an element into a directly constructed element node.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-017"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[3] return insert node <hours>15</hours> after $var/hours[1]]]></test>
      <test><![CDATA[ ./works[1]/employee[3]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "Jane Doe 3" gender="female">
   <empnum>E1</empnum>
   <pnum>P3</pnum>
   <hours>80</hours><hours>15</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-018">
      <description>Evaluates a simple insert expression with "as first" and "into" clauses.
                  Inserts an element into a directly constructed element node.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-018"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1]/hours[1] return insert node <hours>15</hours> as first into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[1]//hours]]></test>
      <result>
         <assert-xml><![CDATA[<hours><hours>15</hours>40</hours><hours>15</hours>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-019">
      <description>Evaluates a simple insert expression with "as last" and "into" clauses.
                  Inserts an element into a directly constructed element node.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-019"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1]/hours[1] return insert node <hours>15</hours> as last into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[1]//hours]]></test>
      <result>
         <assert-xml><![CDATA[<hours>40<hours>15</hours></hours><hours>15</hours>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-020">
      <description>Evaluates a simple insert expression with "into" clause only. Inserts an
                  element into a directly constructed element node.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-020"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return insert node <hours>15</hours> into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours>70</hours>
   <hours>20</hours>Text data from Employee[2]
  <hours>15</hours></employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-021">
      <description>Evaluates a simple insert expression with "after" only. Insert a
                  sequence of element nodes into a directly constructed element node.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-021"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2]/hours[1] return insert node (<hours>15</hours>,<hours>20</hours>) after $var]]></test>
      <test><![CDATA[ ./works[1]/employee[2]//hours]]></test>
      <result>
         <assert-xml><![CDATA[<hours>70</hours><hours>15</hours><hours>20</hours><hours>20</hours>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-022">
      <description>Evaluation of simple insert expression that uses "into" clause only to
                  insert a sequence of element nodes into into an XML data source.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-022"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return insert node (<hours>15</hours>,<hours>20</hours>) into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours>70</hours>
   <hours>20</hours>Text data from Employee[2]
  <hours>15</hours><hours>20</hours></employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-023">
      <description>Evaluates a simple insert expression where source expression is an
                  updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-023"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return insert node (insert node <salary>150000</salary> into $var) into $var]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-024">
      <description>Evaluates a simple insert expression where target expression is an
                  updating expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-024"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return insert node <salary>100000</salary> into (insert node <salary>150000</salary> into $var)]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-025">
      <description>Evaluates a simple insert expression where both source and target
                  expressions are updating expressions.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-025"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return insert node (insert node <salary>50000</salary> into $var) into (insert node <salary>56000</salary> into $var)]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-026">
      <description>Evaluates an insert expression where the source sequence have an
                  attribute node following an element node.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-026"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return insert node (<salary>10000</salary>, attribute myAttr {"my Value"} ) into $var]]></test>
      <result>
         <error code="XUTY0004"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-027">
      <description>Evaluates an insert expression where the target expression is a sequence
                  of nodes.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-027"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := ($input-context/employees[1]/employee[1],$input-context/employees[1]/employee[2]) return insert node <salary>100000</salary> into $var]]></test>
      <result>
         <error code="XUTY0005"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-028">
      <description>Evaluates an insert expression where the target expression is the empty
                  sequence.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-028"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return insert node <salary>100000</salary> into ()]]></test>
      <result>
         <error code="XUDY0027"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-029">
      <description>Evaluates an insert expression where the target expression evaluates to
                  a number.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-029"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return insert node <salary>100000</salary> into xs:int(2 + 2)]]></test>
      <result>
         <error code="XUTY0005"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-030">
      <description>Evaluates an insert expression where the source expression evaluates to
                  a number.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-030"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return insert node xs:integer(1 + 1) into $var]]></test>
      <test><![CDATA[ ./employees[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee dept="Toys">
    <name>Jones</name>
    <salary>60000</salary>
  2</employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-031">
      <description>Evaluates an insert expression where the target expression is a complex
                  expression.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-031"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node <hours>20</hours> after $var/hours[xs:integer(9-3) idiv 6]]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours><hours>20</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-032">
      <description>Evaluation of insert expression where a sequence of attributes is
                  inserted as first.</description>
      <created by="Carmelo Montanez" on="2007-07-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-032"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node (attribute type {"Part Time"}, attribute age {"26"}) as first into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee type="Part Time" age="26" name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-033">
      <description>Evaluation of insert expression where a sequence of attributes is
                  inserted as last.</description>
      <created by="Carmelo Montanez" on="2007-07-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-033"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node (attribute type {"Part Time"}, attribute age {"26"}) as last into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female" type="Part Time" age="26">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-034">
      <description>Evaluation of insert expression where a sequence of nodes is inserted as
                  first. Make sure order is preserved.</description>
      <created by="Carmelo Montanez" on="2007-07-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-034"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node (<type>Part Time</type>,<age>26</age>) as first into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female"><type>Part Time</type><age>26</age>
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-035">
      <description>Evaluation of insert expression where a sequence of nodes is inserted as
                  last. Make sure order is preserved.</description>
      <created by="Carmelo Montanez" on="2007-07-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-035"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node (<type>Part Time</type>,<age>26</age>) as last into $var]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  <type>Part Time</type><age>26</age></employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-036">
      <description>Evaluation of insert expression where a sequence of nodes is inserted
                  using "before" clause. Make sure order is preserved.</description>
      <created by="Carmelo Montanez" on="2007-07-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-036"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node (<type>Part Time</type>,<age>26</age>) before $var/empnum[1]]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <type>Part Time</type><age>26</age><empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-037">
      <description>Evaluation of insert expression where a sequence of nodes is inserted
                  using "after" clause. Make sure order is preserved.</description>
      <created by="Carmelo Montanez" on="2007-07-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-037"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node (<type>Part Time</type>,<age>26</age>) before $var/empnum[1]]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <type>Part Time</type><age>26</age><empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-038">
      <description>Evaluation of insert expression where a sequence of Comment nodes are
                  inserted using "before" clause. Make sure order is preserved.</description>
      <created by="Carmelo Montanez" on="2007-07-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-038"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node (<!-- First Inserted Comment -->,<!-- Second Inserted Comment -->) before $var/empnum[1]]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <!-- First Inserted Comment --><!-- Second Inserted Comment --><empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-039">
      <description>Evaluation of insert expression where a sequence of Comment nodes are
                  inserted using "after" clause. Make sure order is preserved.</description>
      <created by="Carmelo Montanez" on="2007-07-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-039"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node (<!-- First Inserted Comment -->,<!-- Second Inserted Comment -->) after $var/empnum[1]]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum><!-- First Inserted Comment --><!-- Second Inserted Comment -->
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-040">
      <description>Evaluation of insert expression where a two groups of element nodes is
                  inserted as using "after" clause. Make sure order is mantained within a
                  groups.</description>
      <created by="Carmelo Montanez" on="2007-07-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-040"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return ( insert node (<type>Part Time</type>,<age>26</age>) after $var/empnum[1], insert node (<type>Full Time</type>,<age>30</age>) after $var/empnum[1] )]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <any-of>
            <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum><type>Full Time</type><age>30</age><type>Part Time</type><age>26</age>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
            <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum><type>Part Time</type><age>26</age><type>Full Time</type><age>30</age>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-041">
      <description>Evaluation of insert expression where a two groups of element nodes is
                  inserted as using "before" clause. Make sure order is mantained within a
                  groups.</description>
      <created by="Carmelo Montanez" on="2007-07-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-041"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return ( insert node (<type>Part Time</type>,<age>26</age>) before $var/empnum[1], insert node (<type>Full Time</type>,<age>30</age>) before $var/empnum[1] )]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <any-of>
            <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <type>Full Time</type><age>30</age><type>Part Time</type><age>26</age><empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
            <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <type>Part Time</type><age>26</age><type>Full Time</type><age>30</age><empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-042">
      <description>Evaluation of insert expression where two groups of element nodes are
                  inserted as using "before" and "after" clauses respectively. Make sure order is
                  mantained within groups.</description>
      <created by="Carmelo Montanez" on="2007-07-27"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-042"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return (insert node (<type>Part Time</type>,<age>26</age>) before $var/empnum[1], insert node (<type>Full Time</type>,<age>30</age>) after $var/empnum[1])]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <type>Part Time</type><age>26</age><empnum>E1</empnum><type>Full Time</type><age>30</age>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-043">
      <description>Evaluation of insert expression where two groups of element nodes are
                  inserted as using "after" and "before" clauses respectively. Make sure order is
                  mantained within groups.</description>
      <created by="Carmelo Montanez" on="2007-07-27"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-043"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return (insert node (<type>Part Time</type>,<age>26</age>) after $var/empnum[1], insert node (<type>Full Time</type>,<age>30</age>) before $var/empnum[1])]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <type>Full Time</type><age>30</age><empnum>E1</empnum><type>Part Time</type><age>26</age>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-044">
      <description>Evaluation of insert expression, where the source expression is a
                  transform expression.</description>
      <created by="Carmelo Montanez" on="2007-08-07"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-044"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert node (copy $newVar := $var modify delete node $newVar/hours[1] return $newVar) after $var]]></test>
      <test><![CDATA[ (./works[1]/employee[1],./works[1]/employee[2])]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee><employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-045">
      <description>Evaluation of insert expression, where the before clause is used and the
                  result is a document node.</description>
      <created by="Carmelo Montanez" on="2007-08-07"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-045"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context return insert node <hours>10</hours> before $var]]></test>
      <result>
         <error code="XUTY0006"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-046">
      <description>Evaluation of insert expression, where the after clause is used and the
                  result is a document node.</description>
      <created by="Carmelo Montanez" on="2007-08-07"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-046"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context return insert node <hours>10</hours> after $var]]></test>
      <result>
         <error code="XUTY0006"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-047">
      <description>Evaluation of insert expression, where the target is a comment node and
                  usage of after clause.</description>
      <created by="Carmelo Montanez" on="2007-08-07"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-047"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[4]/comment() return insert node <hours>10</hours> after $var]]></test>
      <test><![CDATA[ ./employees[1]/employee[4]]]></test>
      <result>
         <assert-xml><![CDATA[<employee mgr="true" dept="Shoes">
    <name>Morton</name>
    <salary>150000</salary>
    <!-- A comment Node on employee # 4 --><hours>10</hours>
    <?PI value="PIValue"?>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-048">
      <description>Evaluation of insert expression, where the target is a comment node and
                  usage of before clause.</description>
      <created by="Carmelo Montanez" on="2007-08-07"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-048"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[4]/comment() return insert node <hours>10</hours> before $var]]></test>
      <test><![CDATA[ ./employees[1]/employee[4]]]></test>
      <result>
         <assert-xml><![CDATA[<employee mgr="true" dept="Shoes">
    <name>Morton</name>
    <salary>150000</salary>
    <hours>10</hours><!-- A comment Node on employee # 4 -->
    <?PI value="PIValue"?>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-049">
      <description>Evaluation of insert expression, where two nodes are inserted into the
                  same node using the "as first" clause.</description>
      <created by="Carmelo Montanez" on="2007-08-07"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-049"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return (insert node <hours>45</hours> as first into $var,insert node <hours>46</hours> as first into $var)]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <any-of>
            <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female"><hours>45</hours><hours>46</hours>
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
            <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female"><hours>46</hours><hours>45</hours>
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>]]></assert-xml>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-050">
      <description>Evaluation of insert expression, where two nodes are inserted into the
                  same node using the "as last" clause.</description>
      <created by="Carmelo Montanez" on="2007-08-07"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-050"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return (insert node <hours>45</hours> as last into $var, insert node <hours>46</hours> as last into $var)]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <any-of>
            <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  <hours>45</hours><hours>46</hours></employee>]]></assert-xml>
            <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  <hours>46</hours><hours>45</hours></employee>]]></assert-xml>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-051">
      <description>Same as id-insert-expr-01, but using keyword "nodes".</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-051"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return insert nodes <hours>25</hours> after $var/hours[1]]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours><hours>25</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-052">
      <description>Insert into respects as first, as last, before, and after.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-052"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $ot := $input-context/works[1]/employee[@name="John Doe 12"]/overtime return ( insert nodes <test1/> as first into $ot, insert nodes <test2/> before $ot/day[. eq "Monday"], insert nodes <test3/> after $ot/day[. eq "Monday"], insert nodes <test4/> before $ot/day[. eq "Tuesday"], insert nodes <test5/> after $ot/day[. eq "Tuesday"], insert nodes <test6/> as last into $ot, insert nodes <test7/> into $ot )]]></test>
      <test><![CDATA[ ./works[1]/employee[@name="John Doe 12"]/overtime]]></test>
      <result>
         <any-of>
            <assert-xml><![CDATA[<overtime><test1/><test7/>
     <test2/><day>Monday</day><test3/>
     <test4/><day>Tuesday</day><test5/>
   <test6/></overtime>]]></assert-xml>
            <assert-xml><![CDATA[<overtime><test1/>
     <test7/><test2/><day>Monday</day><test3/>
     <test4/><day>Tuesday</day><test5/>
   <test6/></overtime>]]></assert-xml>
            <assert-xml><![CDATA[<overtime><test1/>
     <test2/><day>Monday</day><test3/><test7/>
     <test4/><day>Tuesday</day><test5/>
   <test6/></overtime>]]></assert-xml>
            <assert-xml><![CDATA[<overtime><test1/>
     <test2/><day>Monday</day><test3/>
     <test7/><test4/><day>Tuesday</day><test5/>
   <test6/></overtime>]]></assert-xml>
            <assert-xml><![CDATA[<overtime><test1/>
     <test2/><day>Monday</day><test3/>
     <test4/><day>Tuesday</day><test5/><test7/>
   <test6/></overtime>]]></assert-xml>
            <assert-xml><![CDATA[<overtime><test1/>
     <test2/><day>Monday</day><test3/>
     <test4/><day>Tuesday</day><test5/>
   <test7/><test6/></overtime>]]></assert-xml>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-053">
      <description>Insert empty sequences into, as first, as last, before, and
                  after.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-053"/>
      <environment>
         <source role="$in"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[
         declare variable $in external; 
         let $ot := $in/works[1]/employee[@name="John Doe 12"]/overtime 
         return ( insert nodes () as first into $ot, 
                  insert nodes () before $ot/day[. eq "Monday"], 
                  insert nodes () after $ot/day[. eq "Monday"], 
                  insert nodes () before $ot/day[. eq "Tuesday"], 
                  insert nodes () after $ot/day[. eq "Tuesday"], 
                  insert nodes () as last into $ot, 
                  insert nodes () into $ot )
      ]]></test>
      <test><![CDATA[
         declare variable $in external; 
         $in/works[1]/employee[@name="John Doe 12"]/overtime
      ]]></test>
      <result>
         <assert-xml><![CDATA[<overtime>
     <day>Monday</day>
     <day>Tuesday</day>
   </overtime>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-054">
      <description>Insert an element into a comment.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-054"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := ($input-context//comment())[1] return insert node <test/> into $n]]></test>
      <result>
         <error code="XUTY0005"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-055">
      <description>Insert an element into a text node.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-055"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := ($input-context//text())[1] return insert node <test/> into $n]]></test>
      <result>
         <error code="XUTY0005"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-056">
      <description>Insert an element into a PI.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-056"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := ($input-context//processing-instruction())[1] return insert node <test/> into $n]]></test>
      <result>
         <error code="XUTY0005"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-057">
      <description>Insert text node into a text node.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-057"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := ($input-context//text())[1] return insert node text {"test"} into $n]]></test>
      <result>
         <error code="XUTY0005"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-058">
      <description>Insert an element before an attribute.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-058"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $emp := $input-context/works[1]/employee[1] return insert node <test/> before $emp/@name]]></test>
      <result>
         <error code="XUTY0006"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-059">
      <description>Insert an element after an attribute.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-059"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $emp := $input-context/works[1]/employee[1] return insert node <test/> after $emp/@name]]></test>
      <result>
         <error code="XUTY0006"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-060">
      <description>Insert an attribute before an attribute.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-060"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $emp := $input-context/works[1]/employee[1] return insert node attribute exempt { "true" } before $emp/@name]]></test>
      <result>
         <error code="XUTY0006"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-061">
      <description>Insert an attribute after an attribute.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-061"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $emp := $input-context/works[1]/employee[1] return insert node attribute exempt { "true" } after $emp/@name]]></test>
      <result>
         <error code="XUTY0006"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-062">
      <description>Insert an element before an element without a parent.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-062"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $emp := <employee/> return insert node <test/> before $emp]]></test>
      <result>
         <error code="XUDY0029"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-063">
      <description>Insert an element after an element without a parent.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-063"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $emp := <employee/> return insert node <test/> after $emp]]></test>
      <result>
         <error code="XUDY0029"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-064">
      <description>Insert an attribute into a comment.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-064"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := ($input-context//comment())[1] return insert node attribute day { "good" } into $n]]></test>
      <result>
         <any-of>
            <error code="XUTY0005"/>
            <error code="XUTY0022"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-065">
      <description>Insert an attribute into a text node.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-065"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := ($input-context//text())[1] return insert node attribute day { "good" } into $n]]></test>
      <result>
         <any-of>
            <error code="XUTY0005"/>
            <error code="XUTY0022"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-066">
      <description>Insert an attribute into a PI.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-066"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := ($input-context//processing-instruction())[1] return insert node attribute day { "good" } into $n]]></test>
      <result>
         <any-of>
            <error code="XUTY0005"/>
            <error code="XUTY0022"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-067">
      <description>Insert an attribute into a document.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-067"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := $input-context return insert node attribute day { "good" } into $n]]></test>
      <result>
         <error code="XUTY0022"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-068">
      <description>Insert an attribute into attribute.</description>
      <created by="Andrew Eisenberg" on="2008-10-17"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-068"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := $input-context/works[1]/employee[1] return insert node attribute day { "good" } into $n/@name]]></test>
      <result>
         <any-of>
            <error code="XUTY0005"/>
            <error code="XUTY0022"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-069">
      <description>Insert an attribute before an element without a parent.</description>
      <created by="Andrew Eisenberg" on="2008-10-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-069"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $emp := <employee/> return insert node attribute test { "123" } before $emp]]></test>
      <result>
         <any-of>
            <error code="XUDY0029"/>
            <error code="XUDY0030"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-070">
      <description>Insert an attribute after an element without a parent.</description>
      <created by="Andrew Eisenberg" on="2008-10-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-070"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $emp := <employee/> return insert node attribute test { "123" } after $emp]]></test>
      <result>
         <any-of>
            <error code="XUDY0029"/>
            <error code="XUDY0030"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-071">
      <description>Insert an attribute before an text node without a parent.</description>
      <created by="Andrew Eisenberg" on="2008-10-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-071"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := text { "alone" } return insert node attribute test { "123" } before $n]]></test>
      <result>
         <any-of>
            <error code="XUDY0029"/>
            <error code="XUDY0030"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-072">
      <description>Insert an attribute after an text node without a parent.</description>
      <created by="Andrew Eisenberg" on="2008-10-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-072"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := text { "alone" } return insert node attribute test { "123" } after $n]]></test>
      <result>
         <any-of>
            <error code="XUDY0029"/>
            <error code="XUDY0030"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-073">
      <description>Insert an attribute before a comment without a parent.</description>
      <created by="Andrew Eisenberg" on="2008-10-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-073"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := comment { "alone" } return insert node attribute test { "123" } before $n]]></test>
      <result>
         <any-of>
            <error code="XUDY0029"/>
            <error code="XUDY0030"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-074">
      <description>Insert an attribute after a comment without a parent.</description>
      <created by="Andrew Eisenberg" on="2008-10-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-074"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := comment { "alone" } return insert node attribute test { "123" } after $n]]></test>
      <result>
         <any-of>
            <error code="XUDY0029"/>
            <error code="XUDY0030"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-075">
      <description>Insert an attribute before a PI without a parent.</description>
      <created by="Andrew Eisenberg" on="2008-10-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-075"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := processing-instruction audio-output { "beep"} return insert node attribute test { "123" } before $n]]></test>
      <result>
         <any-of>
            <error code="XUDY0029"/>
            <error code="XUDY0030"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-076">
      <description>Insert an attribute after a PI without a parent.</description>
      <created by="Andrew Eisenberg" on="2008-10-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-076"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $n := processing-instruction audio-output { "beep"} return insert node attribute test { "123" } after $n]]></test>
      <result>
         <any-of>
            <error code="XUDY0029"/>
            <error code="XUDY0030"/>
         </any-of>
      </result>
   </test-case>

   <test-case name="id-insert-expr-077">
      <description>Insert text nodes as first, as last, before, and after.</description>
      <created by="Andrew Eisenberg" on="2008-10-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-077"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $ot := $input-context/works[1]/employee[@name="John Doe 12"]/overtime return ( insert nodes text { "test1" } as first into $ot, insert nodes text { "test2" } before $ot/day[. eq "Monday"], insert nodes text { "test3" } after $ot/day[. eq "Monday"], insert nodes text { "test4" } before $ot/day[. eq "Tuesday"], insert nodes text { "test5" } after $ot/day[. eq "Tuesday"], insert nodes text { "test6" } as last into $ot )]]></test>
      <test><![CDATA[ ./works[1]/employee[@name="John Doe 12"]/overtime]]></test>
      <result>
         <assert-xml><![CDATA[<overtime>test1
     test2<day>Monday</day>test3
     test4<day>Tuesday</day>test5
   test6</overtime>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-078">
      <description>Insert PI as first, as last, before, and after.</description>
      <created by="Andrew Eisenberg" on="2008-10-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-078"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $ot := $input-context/works[1]/employee[@name="John Doe 12"]/overtime return ( insert nodes processing-instruction audio-output { "beep1" } as first into $ot, insert nodes processing-instruction audio-output { "beep2" } before $ot/day[. eq "Monday"], insert nodes processing-instruction audio-output { "beep3" } after $ot/day[. eq "Monday"], insert nodes processing-instruction audio-output { "beep4" } before $ot/day[. eq "Tuesday"], insert nodes processing-instruction audio-output { "beep5" } after $ot/day[. eq "Tuesday"], insert nodes processing-instruction audio-output { "beep6" } as last into $ot )]]></test>
      <test><![CDATA[ ./works[1]/employee[@name="John Doe 12"]/overtime]]></test>
      <result>
         <assert-xml><![CDATA[<overtime><?audio-output beep1?>
     <?audio-output beep2?><day>Monday</day><?audio-output beep3?>
     <?audio-output beep4?><day>Tuesday</day><?audio-output beep5?>
   <?audio-output beep6?></overtime>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-079">
      <description>Insert a document as first.</description>
      <created by="Andrew Eisenberg" on="2008-10-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-079"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $ot := $input-context/works[1]/employee[@name="John Doe 12"]/overtime return insert node $input-context as first into $ot]]></test>
      <test><![CDATA[ ./works[1]/employee[@name="John Doe 12"]/overtime]]></test>
      <result>
         <assert-xml><![CDATA[<overtime><works>
  <employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>
  <employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours>70</hours>
   <hours>20</hours>Text data from Employee[2]
  </employee>
  <employee name = "Jane Doe 3" gender="female">
   <empnum>E1</empnum>
   <pnum>P3</pnum>
   <hours>80</hours>
  </employee>
  <employee name= "John Doe 4" gender="male">
   <empnum>E1</empnum>
   <pnum>P4</pnum>
   <hours>20</hours>
   <hours>40</hours>
  </employee>
  <employee name= "Jane Doe 5" gender="female">
   <empnum>E1</empnum>
   <pnum>P5</pnum>
   <hours>20</hours>
   <hours>30</hours>   
  </employee>
  <employee name= "John Doe 6" gender="male">
   <empnum>E1</empnum>
   <pnum>P6</pnum>
   <hours>12</hours>
  </employee>
  <employee name= "Jane Doe 7" gender="female">
   <empnum>E2</empnum>
   <pnum>P1</pnum>
   <hours>40</hours>
  </employee>
  <employee name= "John Doe 8" gender="male">
   <empnum>E2</empnum>
   <pnum>P2</pnum>
   <hours>80</hours>
  </employee>
  <employee name= "Jane Doe 9" gender="female">
   <empnum>E3</empnum>
   <pnum>P2</pnum>
   <hours>20</hours>
  </employee>
  <employee name= "John Doe 10" gender="male">
   <empnum>E3</empnum>
   <pnum>P2</pnum>
   <hours>20</hours>
  </employee>
  <employee name= "Jane Doe 11" gender="female">
   <empnum>E4</empnum>
   <pnum>P2</pnum>
   <hours>20</hours>
  </employee>
  <employee name= "John Doe 12" gender="male">
   <empnum>E4</empnum>
   <pnum>P4</pnum>
   <hours>40</hours>
   <overtime>
     <day>Monday</day>
     <day>Tuesday</day>
   </overtime>
  </employee>
  <employee name= "Jane Doe 13" gender="female" type="FT">
   <empnum>E4</empnum>
   <pnum>P5</pnum>
   <hours>80</hours>
   <status>active</status>
   <!-- A Comment on Employee # 13 -->
   <?PI value="PIValue"?>
  </employee>
 </works>
     <day>Monday</day>
     <day>Tuesday</day>
   </overtime>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-080">
      <description>Insert a mixed sequence as first, as last, before, and
                  after.</description>
      <created by="Andrew Eisenberg" on="2008-10-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-080"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $ot := $input-context/works[1]/employee[@name="John Doe 12"]/overtime return ( insert nodes (text {"test1"}, <test1/>) as first into $ot, insert nodes (text {"test2"}, <test2/>) before $ot/day[. eq "Monday"], insert nodes (text {"test3"}, <test3/>) after $ot/day[. eq "Monday"], insert nodes (text {"test4"}, <test4/>) before $ot/day[. eq "Tuesday"], insert nodes (text {"test5"}, <test5/>) after $ot/day[. eq "Tuesday"], insert nodes (text {"test6"}, <test6/>) as last into $ot )]]></test>
      <test><![CDATA[ ./works[1]/employee[@name="John Doe 12"]/overtime]]></test>
      <result>
         <assert-xml><![CDATA[<overtime>test1<test1/>
     test2<test2/><day>Monday</day>test3<test3/>
     test4<test4/><day>Tuesday</day>test5<test5/>
   test6<test6/></overtime>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-081">
      <description>Check namespace propagation when inserting an element.</description>
      <created by="Andrew Eisenberg" on="2008-12-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-081"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare copy-namespaces preserve, inherit; declare namespace myco="http://www.example.com/myco"; let $myemps := <myco:employees> <myco:employee id='100'> <myco:name>Samuel</myco:name> </myco:employee> </myco:employees> let $newemps := copy $e := $myemps modify insert node <dependents/> into $e/myco:employee[1] return $e return namespace-uri-for-prefix("myco", $newemps/myco:employee[1]/dependents[1])]]></test>
      <result>
         <assert-string-value>http://www.example.com/myco</assert-string-value>
      </result>
   </test-case>

   <test-case name="id-insert-expr-082">
      <description>Check namespace propagation when inserting an element.</description>
      <created by="Andrew Eisenberg" on="2008-12-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-082"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare copy-namespaces preserve, inherit; declare namespace myco="http://www.example.com/myco"; let $myemps := <myco:employees> <myco:employee id='100'> <myco:name>Samuel</myco:name> </myco:employee> </myco:employees> let $newemps := copy $e := $myemps modify insert node <dependents/> as first into $e/myco:employee[1] return $e return namespace-uri-for-prefix("myco", $newemps/myco:employee[1]/dependents[1])]]></test>
      <result>
         <assert-string-value>http://www.example.com/myco</assert-string-value>
      </result>
   </test-case>

   <test-case name="id-insert-expr-083">
      <description>Check namespace propagation when inserting an element.</description>
      <created by="Andrew Eisenberg" on="2008-12-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-083"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare copy-namespaces preserve, inherit; declare namespace myco="http://www.example.com/myco"; let $myemps := <myco:employees> <myco:employee id='100'> <myco:name>Samuel</myco:name> </myco:employee> </myco:employees> let $newemps := copy $e := $myemps modify insert node <dependents/> as last into $e/myco:employee[1] return $e return namespace-uri-for-prefix("myco", $newemps/myco:employee[1]/dependents[1])]]></test>
      <result>
         <assert-string-value>http://www.example.com/myco</assert-string-value>
      </result>
   </test-case>

   <test-case name="id-insert-expr-084">
      <description>Check namespace propagation when inserting an element.</description>
      <created by="Andrew Eisenberg" on="2008-12-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-084"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare copy-namespaces preserve, inherit; declare namespace myco="http://www.example.com/myco"; let $myemps := <myco:employees> <myco:employee id='100'> <myco:name>Samuel</myco:name> </myco:employee> </myco:employees> let $newemps := copy $e := $myemps modify insert node <dependents/> before $e/myco:employee[1] return $e return namespace-uri-for-prefix("myco", $newemps/dependents[1])]]></test>
      <result>
         <assert-string-value>http://www.example.com/myco</assert-string-value>
      </result>
   </test-case>

   <test-case name="id-insert-expr-085">
      <description>Check namespace propagation when inserting an element.</description>
      <created by="Andrew Eisenberg" on="2008-12-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-085"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare copy-namespaces preserve, inherit; declare namespace myco="http://www.example.com/myco"; let $myemps := <myco:employees> <myco:employee id='100'> <myco:name>Samuel</myco:name> </myco:employee> </myco:employees> let $newemps := copy $e := $myemps modify insert node <dependents/> after $e/myco:employee[1] return $e return namespace-uri-for-prefix("myco", $newemps/dependents[1])]]></test>
      <result>
         <assert-string-value>http://www.example.com/myco</assert-string-value>
      </result>
   </test-case>

   <test-case name="id-insert-expr-086">
      <description>Check namespace propagation when inserting an attribute.</description>
      <created by="Andrew Eisenberg" on="2008-12-18"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-086"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[
         declare copy-namespaces preserve, inherit; 
         declare namespace myco="http://www.example.com/myco"; 
         declare namespace hisco="http://www.example.com/hisco"; 
         let $myemps := <myco:employees> <myco:employee id='100'> <myco:name>Samuel</myco:name> </myco:employee> </myco:employees> 
         let $newemps := copy $e := $myemps 
                         modify insert node attribute hisco:salaried {"true"} into $e 
                         return $e 
         return namespace-uri-for-prefix("hisco", $newemps/myco:employee[1])
      ]]></test>
      <result>
         <assert-string-value>http://www.example.com/hisco</assert-string-value>
      </result>
   </test-case>

   <test-case name="id-insert-expr-081-no-inherit">
      <description>Check namespace propagation when inserting an element.</description>
      <created by="Josh Spiegel" on="2010-04-02"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-081-no-inherit"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare copy-namespaces preserve, no-inherit; declare namespace myco="http://www.example.com/myco"; let $myemps := <myco:employees> <myco:employee id='100'> <myco:name>Samuel</myco:name> </myco:employee> </myco:employees> let $newemps := copy $e := $myemps modify insert node <dependents/> into $e/myco:employee[1] return $e return namespace-uri-for-prefix("myco", $newemps/myco:employee[1]/dependents[1])]]></test>
      <result>
         <assert-empty/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-082-no-inherit">
      <description>Check namespace propagation when inserting an element.</description>
      <created by="Josh Spiegel" on="2010-04-02"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-082-no-inherit"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare copy-namespaces preserve, no-inherit; declare namespace myco="http://www.example.com/myco"; let $myemps := <myco:employees> <myco:employee id='100'> <myco:name>Samuel</myco:name> </myco:employee> </myco:employees> let $newemps := copy $e := $myemps modify insert node <dependents/> as first into $e/myco:employee[1] return $e return namespace-uri-for-prefix("myco", $newemps/myco:employee[1]/dependents[1])]]></test>
      <result>
         <assert-empty/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-083-no-inherit">
      <description>Check namespace propagation when inserting an element.</description>
      <created by="Josh Spiegel" on="2010-04-02"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-083-no-inherit"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare copy-namespaces preserve, no-inherit; declare namespace myco="http://www.example.com/myco"; let $myemps := <myco:employees> <myco:employee id='100'> <myco:name>Samuel</myco:name> </myco:employee> </myco:employees> let $newemps := copy $e := $myemps modify insert node <dependents/> as last into $e/myco:employee[1] return $e return namespace-uri-for-prefix("myco", $newemps/myco:employee[1]/dependents[1])]]></test>
      <result>
         <assert-empty/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-084-no-inherit">
      <description>Check namespace propagation when inserting an element.</description>
      <created by="Josh Spiegel" on="2010-04-02"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-084-no-inherit"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare copy-namespaces preserve, no-inherit; declare namespace myco="http://www.example.com/myco"; let $myemps := <myco:employees> <myco:employee id='100'> <myco:name>Samuel</myco:name> </myco:employee> </myco:employees> let $newemps := copy $e := $myemps modify insert node <dependents/> before $e/myco:employee[1] return $e return namespace-uri-for-prefix("myco", $newemps/dependents[1])]]></test>
      <result>
         <assert-empty/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-085-no-inherit">
      <description>Check namespace propagation when inserting an element.</description>
      <created by="Josh Spiegel" on="2010-04-02"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-085-no-inherit"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare copy-namespaces preserve, no-inherit; declare namespace myco="http://www.example.com/myco"; let $myemps := <myco:employees> <myco:employee id='100'> <myco:name>Samuel</myco:name> </myco:employee> </myco:employees> let $newemps := copy $e := $myemps modify insert node <dependents/> after $e/myco:employee[1] return $e return namespace-uri-for-prefix("myco", $newemps/dependents[1])]]></test>
      <result>
         <assert-empty/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-086-no-inherit">
      <description>Check namespace propagation when inserting an attribute.</description>
      <created by="Josh Spiegel" on="2010-04-02"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-086-no-inherit"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/emptydoc.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare copy-namespaces preserve, no-inherit; declare namespace myco="http://www.example.com/myco"; declare namespace hisco="http://www.example.com/hisco"; let $myemps := <myco:employees> <myco:employee id='100'> <myco:name>Samuel</myco:name> </myco:employee> </myco:employees> let $newemps := copy $e := $myemps modify insert node attribute hisco:salaried {"true"} into $e return $e return namespace-uri-for-prefix("hisco", $newemps/myco:employee[1])]]></test>
      <result>
         <assert-empty/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-087">
      <description>Insert an attribute before an element that does not have an element
                  parent.</description>
      <created by="Andrew Eisenberg" on="2009-02-06"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-087"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/TopMany.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; insert node attribute test { "123" } before $input-context/far-north[1]]]></test>
      <result>
         <error code="XUDY0030"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-088">
      <description>Insert an attribute after an element that does not have an element
                  parent.</description>
      <created by="Andrew Eisenberg" on="2009-02-06"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-088"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/TopMany.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; insert node attribute test { "123" } after $input-context/far-north[1]]]></test>
      <result>
         <error code="XUDY0030"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-089">
      <description>Insert an attribute before a comment that does not have an element
                  parent.</description>
      <created by="Andrew Eisenberg" on="2009-02-06"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-089"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/TopMany.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; insert node attribute test { "123" } before $input-context/comment()[1]]]></test>
      <result>
         <error code="XUDY0030"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-090">
      <description>Insert an attribute after a comment that does not have an element
                  parent.</description>
      <created by="Andrew Eisenberg" on="2009-02-06"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-090"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/TopMany.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; insert node attribute test { "123" } after $input-context/comment()[1]]]></test>
      <result>
         <error code="XUDY0030"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-091">
      <description>Insert an attribute before a PI that does not have an element
                  parent.</description>
      <created by="Andrew Eisenberg" on="2009-02-06"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-091"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/TopMany.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; insert node attribute test { "123" } before $input-context/processing-instruction()[1]]]></test>
      <result>
         <error code="XUDY0030"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-092">
      <description>Insert an attribute after a PI that does not have an element
                  parent.</description>
      <created by="Andrew Eisenberg" on="2009-02-06"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-092"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/TopMany.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; insert node attribute test { "123" } after $input-context/processing-instruction()[1]]]></test>
      <result>
         <error code="XUDY0030"/>
      </result>
   </test-case>

   <test-case name="id-insert-expr-093">
      <description>Insert an attribute that requires creation of a new namespace
                  node.</description>
      <created by="Michael Kay" on="2009-12-07"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-093"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare namespace b="http://ns.example.com/id-insert-expr-093"; declare variable $input-context external; let $ot := $input-context/works[1]/employee[@name="John Doe 12"]/overtime return ( insert node attribute { 'b:newAtt' } {"newValue"} into $ot )]]></test>
      <test><![CDATA[declare namespace b="http://ns.example.com/id-insert-expr-093";  <overtime>{./works[1]/employee[@name="John Doe 12"]/overtime/@b:newAtt/string(.)}</overtime>]]></test>
      <result>
         <assert-xml><![CDATA[<overtime>newValue</overtime>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-insert-expr-094">
      <description>Insert an attribute that doesn't conflict with an element in the default namespace.</description>
      <created by="Andrew Eisenberg" on="2010-06-11"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-insert-expr-094"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/books3.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare namespace books="http://ns.example.com/books"; declare variable $input-context external; insert node attribute ITEMS {count($input-context/books:BOOKLIST/books:BOOKS/books:ITEM)} into $input-context/books:BOOKLIST/books:BOOKS]]></test>
      <test><![CDATA[ .]]></test>
      <result>
         <assert-xml><![CDATA[<BOOKLIST xmlns="http://ns.example.com/books">
<BOOKS ITEMS="6">
	<ITEM CAT="MMP">
	    <!-- the first book -->
	    <?pi data?>
    	<TITLE>Pride and Prejudice</TITLE>
    	<AUTHOR>Jane Austen</AUTHOR>
    	<PUBLISHER>Modern Library</PUBLISHER>
    	<PUB-DATE>2002-12-31</PUB-DATE>
    	<LANGUAGE>English</LANGUAGE>
    	<PRICE>4.95</PRICE>
    	<QUANTITY>187</QUANTITY>
    	<ISBN>0679601686</ISBN>
    	<PAGES>352</PAGES>
    	<DIMENSIONS UNIT="in">8.3 5.7 1.1</DIMENSIONS>
    	<WEIGHT UNIT="oz">6.1</WEIGHT>
	</ITEM>
	<ITEM CAT="P">
		<TITLE>Wuthering Heights</TITLE>
		<AUTHOR>Charlotte Bront&#xeb;</AUTHOR>
		<PUBLISHER>Penguin Classics</PUBLISHER>
		<PUB-DATE>2002-12-31</PUB-DATE>
		<LANGUAGE>English</LANGUAGE>
		<PRICE>6.58</PRICE>
		<QUANTITY>113</QUANTITY>		
		<ISBN>0141439556</ISBN>
		<PAGES>430</PAGES>
    <DIMENSIONS UNIT="in">1.0 5.2 7.8</DIMENSIONS>
		<WEIGHT UNIT="oz">11.2</WEIGHT>
	</ITEM>
	<ITEM CAT="P">
		<TITLE>Tess of the d'Urbervilles</TITLE>
		<AUTHOR>Thomas Hardy</AUTHOR>
		<PUBLISHER>Bantam Classics</PUBLISHER>
		<PUB-DATE>1984-05-01</PUB-DATE>
		<LANGUAGE>English</LANGUAGE>
		<PRICE>4.95</PRICE>
		<QUANTITY>85</QUANTITY>		
		<ISBN>0553211684</ISBN>
		<PAGES>480</PAGES>
    <DIMENSIONS UNIT="in">6.8 4.2 0.8</DIMENSIONS>
		<WEIGHT UNIT="oz">7.7</WEIGHT>
	</ITEM>
	<ITEM CAT="P">
		<TITLE>Jude the Obscure</TITLE>
		<AUTHOR>Thomas Hardy</AUTHOR>
		<PUBLISHER>Penguin Classics</PUBLISHER>
		<PUB-DATE>1998-09-01</PUB-DATE>
		<LANGUAGE>English</LANGUAGE>
		<PRICE>4.95</PRICE>
		<QUANTITY>129</QUANTITY>		
		<ISBN>0140435387</ISBN>
		<PAGES>528</PAGES>
    <DIMENSIONS UNIT="in">7.8 5.2 0.9</DIMENSIONS>
		<WEIGHT UNIT="oz">10.9</WEIGHT>
	</ITEM>
	<ITEM CAT="H">
		<TITLE>The Big Over Easy</TITLE>
		<AUTHOR>Jasper Fforde</AUTHOR>
		<PUBLISHER>Hodder &amp; Stoughton</PUBLISHER>
		<PUB-DATE>2005-07-11</PUB-DATE>
		<LANGUAGE>English</LANGUAGE>
		<PRICE>16.47</PRICE>
		<QUANTITY>129</QUANTITY>		
		<ISBN>0340835672</ISBN>
		<PAGES>346</PAGES>
    <DIMENSIONS UNIT="cm">22.5 18.0 3.5</DIMENSIONS>
		<WEIGHT UNIT="g">390</WEIGHT>
	</ITEM>
	<ITEM CAT="P" xml:id="jff001">
		<TITLE>The Eyre Affair</TITLE>
		<AUTHOR>Jasper Fforde</AUTHOR>
		<PUBLISHER>Penguin</PUBLISHER>
		<PUB-DATE>2003-02-25</PUB-DATE>
		<LANGUAGE>English</LANGUAGE>
		<PRICE>16.47</PRICE>
		<QUANTITY>129</QUANTITY>		
		<ISBN>0142001805</ISBN>
		<PAGES>384</PAGES>
    <DIMENSIONS UNIT="in">7.8 5.0 0.9</DIMENSIONS>
		<WEIGHT UNIT="oz">9.0</WEIGHT>
	</ITEM>

</BOOKS>
<CATEGORIES DESC="Miscellaneous categories">
    <CATEGORY CODE="P" DESC="Paperback"/>
    <CATEGORY CODE="MMP" DESC="Mass-market Paperback"/>
    <CATEGORY CODE="H" DESC="Hard Cover"/>
</CATEGORIES>
</BOOKLIST>
]]></assert-xml>
      </result>
   </test-case>
</test-set>
