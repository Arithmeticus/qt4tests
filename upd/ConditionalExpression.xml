<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog"
          name="upd-ConditionalExpression">
   <description>XQuery Update - Conditional Expressions</description>

   <dependency type="spec" value="XQ30+"/>

   <dependency type="feature" value="XQUpdate"/>

   <test-case name="id-conditional-expr-001">
      <description>Evaluates an insert expression used with conditional expression where a
                  branch (the "then") is an updating expression. Other branch return
                  ().</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-01"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; if (fn:true()) then insert node <hours>25</hours> into $input-context/works[1]/employee[2] else ()]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours>70</hours>
   <hours>20</hours>Text data from Employee[2]
  <hours>25</hours></employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-002">
      <description>Evaluates an insert expression used with conditional expression where a
                  branch (the "else") is an updating expression. Other branch returns
                  ().</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-02"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; if (fn:false()) then () else insert node <hours>25</hours> into $input-context/works[1]/employee[2]]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours>70</hours>
   <hours>20</hours>Text data from Employee[2]
  <hours>25</hours></employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-003">
      <description>Evaluates an insert expression used with conditional expression where a
                  branch (the "then") is an updating expression. Other branch calls
                  fn:error().</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-03"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; if (fn:true()) then insert node <hours>25</hours> into $input-context/works[1]/employee[2] else fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000'))]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours>70</hours>
   <hours>20</hours>Text data from Employee[2]
  <hours>25</hours></employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-004">
      <description>Evaluates an insert expression used with conditional expression where a
                  branch (the "else") is an updating expression. Other branch calls
                  fn:error().</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-04"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; if (fn:false()) then fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')) else insert node <hours>25</hours> into $input-context/works[1]/employee[2]]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours>70</hours>
   <hours>20</hours>Text data from Employee[2]
  <hours>25</hours></employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-005">
      <description>Evaluates an insert expression used with conditional expression where a
                  branch (the "then") is an updating expression. Other branch print a
                  string.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-05"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; if (fn:true()) then insert node <salary>25000</salary> into $input-context/employees[1]/employee[2] else "This test should fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-006">
      <description>Evaluates an insert expression used with conditional expression where a
                  branch (the "else") is an updating expression. Other branch print a
                  string.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-06"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; if (fn:false()) then "This test should fail" else insert node <salary>25000</salary> into $input-context/employees[1]/employee[2]]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-007">
      <description>Evaluation of a delete expression used with conditional expression where
                  a branch (the "then") is an updating expression. The "else" returns the empty
                  sequence.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-07"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:true()) then delete node $var/hours[1] else ()]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-008">
      <description>Evaluation of a delete expression used with conditional expression where
                  a branch (the "else") is an updating expression. The "then" returns the empty
                  sequence.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-08"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:false()) then () else delete node $var/hours[1]]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-009">
      <description>Evaluation of a delete expression used with conditional expression where
                  a branch (the "then") is an updating expression. The "else" returns
                  fn:error().</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-09"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:true()) then delete node $var/hours[1] else fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000'))]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-010">
      <description>Evaluation of a delete expression used with conditional expression where
                  a branch (the "else") is an updating expression. The "then" returns
                  fn:error().</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-010"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:false()) then fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')) else delete node $var/hours[1]]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-011">
      <description>Evaluation of a delete expression used with conditional expression where
                  a branch (the "then") is an updating expression. The "else" print a
                  string</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-011"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return if (fn:true()) then delete node $var/salary[1] else "This test should fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-012">
      <description>Evaluation of a delete expression used with conditional expression where
                  a branch (the "else") is an updating expression. The "then" print a
                  string</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-012"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return if (fn:false()) then "This test should fail" else delete node $var/salary[1]]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-013">
      <description>Evaluates a replace expression used together with a conditional
                  expression where a branch (the "then") is an updating (replace) expression. The
                  "else" return the empty sequence.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-013"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:true()) then replace value of node $var/hours[1] with $var/hours[2] else ()]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours>20</hours>
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-014">
      <description>Evaluates a replace expression used together with a conditional
                  expression where a branch (the "else") is an updating (replace) expression. The
                  "then" return the empty sequence.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-014"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:false()) then () else replace value of node $var/hours[1] with $var/hours[2]]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours>20</hours>
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-015">
      <description>Evaluates a replace expression used together with a conditional
                  expression where a branch (the "then") is an updating (replace) expression. The
                  "else" invokes the fn:error function.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-015"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:true()) then replace value of node $var/hours[1] with $var/hours[2] else fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000'))]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours>20</hours>
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-016">
      <description>Evaluates a replace expression used together with a conditional
                  expression where a branch (the "else") is an updating (replace) expression. The
                  "then" invokes the fn:error function.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-016"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:false()) then fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')) else replace value of node $var/hours[1] with $var/hours[2]]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours>20</hours>
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-017">
      <description>Evaluates a replace expression used together with a conditional
                  expression where a branch (the then) is an updating (replace) expression. The
                  "else" just return a string.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-017"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return if (fn:true()) then replace value of node $var/salary[1] with <salary>124000</salary> else "This test should fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-018">
      <description>Evaluates a replace expression used together with a conditional
                  expression where a branch (the else) is an updating (replace) expression. The
                  "then" just return a string.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-018"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return if (fn:false()) then "This test should fail" else replace value of node $var/salary[1] with <salary>124000</salary>]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-019">
      <description>Evaluation of a rename expression used with a conditional expression
                  where a branch (the "then") is an updating expression. The "else" returns the
                  empty sequence.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-019"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return if (fn:true()) then rename node $var/hours[1] as "hours1" else ()]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours1>40</hours1>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-020">
      <description>Evaluation of a rename expression used with a conditional expression
                  where a branch (the "else") is an updating expression. The "then" returns the
                  empty sequence.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-020"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return if (fn:false()) then () else rename node $var/hours[1] as "hours1"]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours1>40</hours1>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-021">
      <description>Evaluation of a rename expression used with a conditional expression
                  where a branch (the "then") is an updating expression. The "else" invokes the
                  fn:error function.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-021"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:true()) then rename node $var/hours[1] as "hours1" else fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000'))]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours1>70</hours1>
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-022">
      <description>Evaluation of a rename expression used with a conditional expression
                  where a branch (the "else") is an updating expression. The "then" invokes the
                  fn:error function.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-022"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:false()) then fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')) else rename node $var/hours[1] as "hours1"]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee gender="male" name="John Doe 2">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   <hours1>70</hours1>
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-023">
      <description>Evaluation of rename expression used with conditional expression where a
                  branch (the "then") is an updating expression. The "else" prints a
                  string.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-023"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[3] return if (fn:true()) then rename node $var/salary[1] as "salary1" else "This test should fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-024">
      <description>Evaluation of a rename expression used with conditional expression where
                  a branch (the "else") is an updating expression. The "then" print a
                  string.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-024"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[3] return if (fn:false()) then "This test should fail" else rename node $var/hours[1] as "hours1"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-025">
      <description>Evaluates a transform expression together with a conditional expression
                  where a branch (the "then")is an updating (transform) and the "else" returns the
                  empty sequence.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-025"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:true()) then (copy $newVar := $var modify delete node $newVar/hours[1] return $newVar) else ()]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-026">
      <description>Evaluates a transform expression together with a conditional expression
                  where a branch (the "else")is an updating (transform) and the "then" returns the
                  empty sequence.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-026"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; let $var :=$input-context/works[1]/employee[2] return if (fn:false()) then () else (copy $newVar := $var modify delete node $newVar/hours[1] return $newVar)]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-027">
      <description>Evaluates a transform expression together with a conditional expression
                  where a branch (the "then")is an updating (transform) and the "else" is an
                  invokation to fn:error().</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-027"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:true()) then (copy $newVar := $var modify delete node $newVar/hours[1] return $newVar) else fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000'))]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-028">
      <description>Evaluates a transform expression together with a conditional expression
                  where a branch (the "else")is an updating (transform) and the "then" is an
                  invokation to fn:error().</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-028"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:false()) then fn:error(fn:QName('http://www.w3.org/2005/xqt-errors', 'err:FOER0000')) else (copy $newVar := $var modify delete node $newVar/hours[1] return $newVar)]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-029">
      <description>Evaluates a transform expression together with a conditional expression
                  where a branch (the "then")is an non updating (transform) and the "else" returns a
                  string.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-029"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return if (fn:true()) then (copy $newVar := $var modify delete node $newVar/salary[1] return $newVar) else "This test should not fail"]]></test>
      <result>
         <assert-xml><![CDATA[<employee dept="Toys">
    <name>Jones</name>
    
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-030">
      <description>Evaluates a transform expression together with a conditional expression
                  where a branch (the "else")is a non updating (transform) and the "then" return a
                  string.</description>
      <created by="Carmelo Montanez" on="2007-06-04"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-030"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return if (fn:false()) then "This test should fail" else (copy $newVar := $var modify delete node $newVar/salary[1] return $newVar)]]></test>
      <result>
         <assert-xml><![CDATA[<employee dept="Toys">
    <name>Jones</name>
    
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-031">
      <description>Evaluates a transform expression together with a conditional expression
                  where the if-clause is an non-updating (transform) expression.</description>
      <created by="Carmelo Montanez" on="2007-08-02"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-031"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (copy $newVar := $var modify delete node $newVar/hours[1] return $newVar) then "This test should not fail" else "This test should not fail"]]></test>
      <result>
         <assert-string-value>This test should not fail</assert-string-value>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-032">
      <description>Evaluates a transform expression together with a conditional expression
                  where the if-clause is an updating (delete) expression.</description>
      <created by="Carmelo Montanez" on="2007-08-02"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-032"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return if (delete node $var/hours[1]) then "This test should fail" else "This test should fail"]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-033">
      <description>Evaluates a conditional expression, where both branches are updating
                  expressions (delete). Both delete the same node (only one is
                  selected).</description>
      <created by="Carmelo Montanez" on="2007-08-05"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-033"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:true()) then delete node $var/hours[1] else delete node $var/hours[1]]]></test>
      <test><![CDATA[ ./works[1]/employee[2]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-034">
      <description>Evaluates a conditional expression, where the if branch contains a
                  delete expression and the else branch contains transform expression.</description>
      <created by="Carmelo Montanez" on="2007-08-06"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-034"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/employeesNIST.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/employees[1]/employee[2] return if (fn:true()) then delete node $var else copy $newVar := $var modify delete node $newVar/salary[1] return $newVar]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-035">
      <description>Evaluates a conditional expression, where both branches contains a
                  transform expression.</description>
      <created by="Carmelo Montanez" on="2007-08-06"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-035"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[2] return if (fn:true()) then copy $newVar := $var modify delete node $newVar/hours[1] return $newVar else copy $newVar := $var modify delete node $newVar/hours[1] return $newVar]]></test>
      <result>
         <assert-xml><![CDATA[<employee name = "John Doe 2" gender="male">
   <empnum>E1</empnum>
   <pnum>P2</pnum>
   
   <hours>20</hours>Text data from Employee[2]
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-036">
      <description>Updating conditional expression in a conditional
                  expression.</description>
      <created by="Andrew Eisenberg" on="2008-10-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-036"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return if ($var/hours = 40) then if ($var/@gender = "female") then replace value of node $var/hours with 41 else replace value of node $var/hours with 42 else replace value of node $var/hours with 43]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>41</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-037">
      <description>Vacuous conditional expression in a conditional
                  expression.</description>
      <created by="Andrew Eisenberg" on="2008-10-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-037"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return if ($var/hours = 45) then if ($var/@gender = "female") then () else () else replace value of node $var/hours with 43]]></test>
      <test><![CDATA[ ./works[1]/employee[1]]]></test>
      <result>
         <assert-xml><![CDATA[<employee name="Jane Doe 1" gender="female">
   <empnum>E1</empnum>
   <pnum>P1</pnum>
   <hours>43</hours>
  </employee>]]></assert-xml>
      </result>
   </test-case>

   <test-case name="id-conditional-expr-038">
      <description>Simple conditional expression in a conditional expression.</description>
      <created by="Andrew Eisenberg" on="2008-10-26"/>
      <modified by="Michael Kay"
                on="2021-04-18"
                change="converted from original XQUTS test id-conditional-expr-038"/>
      <environment>
         <source role="$input-context"
                 file="TestSources/works-mod.xml"
                 mutable="true"
                 declared="true"/>
      </environment>
      <test update="true"><![CDATA[declare variable $input-context external; let $var := $input-context/works[1]/employee[1] return if ($var/hours eq 45) then if ($var/@gender eq "female") then $var/@gender else $var/@name else replace value of node $var/hours with 43]]></test>
      <result>
         <error code="XUST0001"/>
      </result>
   </test-case>
</test-set>
