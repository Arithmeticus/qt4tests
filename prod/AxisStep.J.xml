<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-AxisStep.J">
   <description>Tests for axis steps with JNodes</description>
   
   <test-case name="JAxes-001">
      <description> Evaluate all axes in JSON document with map as root </description>
      <created by="Michael Kay" on="2025-07-15"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-map.json")
         return ax:histogram(jtree($in))
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 0,
            "ancestor-or-self": 1,
            "child": 1,
            "descendant": 20,
            "descendant-or-self": 21,
            "following": 0,
            "following-or-self": 1,
            "following-sibling": 0,
            "following-sibling-or-self": 1,
            "parent": 0,
            "preceding": 0,
            "preceding-or-self": 1,
            "preceding-sibling": 0,
            "preceding-sibling-or-self": 1,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-002">
      <description> Evaluate all axes in JSON document with map as root </description>
      <created by="Michael Kay" on="2025-07-15"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-map.json")
         return ax:histogram(jtree($in)/root)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 1,
            "ancestor-or-self": 2,
            "child": 7,
            "descendant": 19,
            "descendant-or-self": 20,
            "following": 0,
            "following-or-self": 1,
            "following-sibling": 0,
            "following-sibling-or-self": 1,
            "parent": 1,
            "preceding": 0,
            "preceding-or-self": 1,
            "preceding-sibling": 0,
            "preceding-sibling-or-self": 1,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-003">
      <description> Evaluate all axes in JSON document with map as root </description>
      <created by="Michael Kay" on="2025-07-15"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-map.json")
         return ax:histogram(jtree($in)/root/A)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 2,
            "ancestor-or-self": 3,
            "child": 3,
            "descendant": 3,
            "descendant-or-self": 4,
            "following": 15,
            "following-or-self": 16,
            "following-sibling": 6,
            "following-sibling-or-self": 7,
            "parent": 1,
            "preceding": 0,
            "preceding-or-self": 1,
            "preceding-sibling": 0,
            "preceding-sibling-or-self": 1,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-004">
      <description> Evaluate all axes in JSON document with map as root </description>
      <created by="Michael Kay" on="2025-07-15"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-map.json")
         return ax:histogram(jtree($in)/root/B)
      </test>
      <result> 
         <assert-deep-eq>{
            "ancestor": 2,
            "ancestor-or-self": 3,
            "child": 3,
            "descendant": 3,
            "descendant-or-self": 4,
            "following": 11,
            "following-or-self": 12,
            "following-sibling": 5,
            "following-sibling-or-self": 6,
            "parent": 1,
            "preceding": 4,
            "preceding-or-self": 5,
            "preceding-sibling": 1,
            "preceding-sibling-or-self": 2,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-005">
      <description> Evaluate all axes in JSON document with map as root </description>
      <created by="Michael Kay" on="2025-07-15"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-map.json")
         return ax:histogram(jtree($in)/root/C)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 2,
            "ancestor-or-self": 3,
            "child": 0,
            "descendant": 0,
            "descendant-or-self": 1,
            "following": 10,
            "following-or-self": 11,
            "following-sibling": 4,
            "following-sibling-or-self": 5,
            "parent": 1,
            "preceding": 8,
            "preceding-or-self": 9,
            "preceding-sibling": 2,
            "preceding-sibling-or-self": 3,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-006">
      <description> Evaluate all axes in JSON document with map as root </description>
      <created by="Michael Kay" on="2025-07-15"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-map.json")
         return ax:histogram(jtree($in)/root/D)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 2,
            "ancestor-or-self": 3,
            "child": 0,
            "descendant": 0,
            "descendant-or-self": 1,
            "following": 9,
            "following-or-self": 10,
            "following-sibling": 3,
            "following-sibling-or-self": 4,
            "parent": 1,
            "preceding": 9,
            "preceding-or-self": 10,
            "preceding-sibling": 3,
            "preceding-sibling-or-self": 4,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-007">
      <description> Evaluate all axes in JSON document with map as root </description>
      <created by="Michael Kay" on="2025-07-15"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-map.json")
         return ax:histogram(jtree($in)/root/E)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 2,
            "ancestor-or-self": 3,
            "child": 0,
            "descendant": 0,
            "descendant-or-self": 1,
            "following": 8,
            "following-or-self": 9,
            "following-sibling": 2,
            "following-sibling-or-self": 3,
            "parent": 1,
            "preceding": 10,
            "preceding-or-self": 11,
            "preceding-sibling": 4,
            "preceding-sibling-or-self": 5,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-008">
      <description> Evaluate all axes in JSON document with map as root </description>
      <created by="Michael Kay" on="2025-07-15"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-map.json")
         return ax:histogram(jtree($in)/root/F)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 2,
            "ancestor-or-self": 3,
            "child": 0,
            "descendant": 0,
            "descendant-or-self": 1,
            "following": 7,
            "following-or-self": 8,
            "following-sibling": 1,
            "following-sibling-or-self": 2,
            "parent": 1,
            "preceding": 11,
            "preceding-or-self": 12,
            "preceding-sibling": 5,
            "preceding-sibling-or-self": 6,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-009">
      <description> Evaluate all axes in JSON document with map as root </description>
      <created by="Michael Kay" on="2025-07-15"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-map.json")
         return ax:histogram(jtree($in)/root/G)
      </test>
      <result> 
         <assert-deep-eq>{
            "ancestor": 2,
            "ancestor-or-self": 3,
            "child": 2,
            "descendant": 6,
            "descendant-or-self": 7,
            "following": 0,
            "following-or-self": 1,
            "following-sibling": 0,
            "following-sibling-or-self": 1,
            "parent": 1,
            "preceding": 12,
            "preceding-or-self": 13,
            "preceding-sibling": 6,
            "preceding-sibling-or-self": 7,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-010">
      <description> Evaluate all axes in JSON document with map as root </description>
      <created by="Michael Kay" on="2025-07-15"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-map.json")
         return ax:histogram(jtree($in)/root/G/p)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 3,
            "ancestor-or-self": 4,
            "child": 2,
            "descendant": 2,
            "descendant-or-self": 3,
            "following": 3,
            "following-or-self": 4,
            "following-sibling": 1,
            "following-sibling-or-self": 2,
            "parent": 1,
            "preceding": 12,
            "preceding-or-self": 13,
            "preceding-sibling": 0,
            "preceding-sibling-or-self": 1,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-011">
      <description> Evaluate all axes in JSON document with map as root </description>
      <created by="Michael Kay" on="2025-07-15"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-map.json")
         return ax:histogram(jtree($in)/root/G/q)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 3,
            "ancestor-or-self": 4,
            "child": 2,
            "descendant": 2,
            "descendant-or-self": 3,
            "following": 0,
            "following-or-self": 1,
            "following-sibling": 0,
            "following-sibling-or-self": 1,
            "parent": 1,
            "preceding": 15,
            "preceding-or-self": 16,
            "preceding-sibling": 1,
            "preceding-sibling-or-self": 2,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-021">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in))
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 0,
            "ancestor-or-self": 1,
            "child": 1,
            "descendant": 22,
            "descendant-or-self": 23,
            "following": 0,
            "following-or-self": 1,
            "following-sibling": 0,
            "following-sibling-or-self": 1,
            "parent": 0,
            "preceding": 0,
            "preceding-or-self": 1,
            "preceding-sibling": 0,
            "preceding-sibling-or-self": 1,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-022">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in)/*/root)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 2,
            "ancestor-or-self": 3,
            "child": 7,
            "descendant": 19,
            "descendant-or-self": 20,
            "following": 1,
            "following-or-self": 2,
            "following-sibling": 1,
            "following-sibling-or-self": 2,
            "parent": 1,
            "preceding": 0,
            "preceding-or-self": 1,
            "preceding-sibling": 0,
            "preceding-sibling-or-self": 1,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-023">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in)/*/root/A)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 3,
            "ancestor-or-self": 4,
            "child": 3,
            "descendant": 3,
            "descendant-or-self": 4,
            "following": 16,
            "following-or-self": 17,
            "following-sibling": 6,
            "following-sibling-or-self": 7,
            "parent": 1,
            "preceding": 0,
            "preceding-or-self": 1,
            "preceding-sibling": 0,
            "preceding-sibling-or-self": 1,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-024">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in)/*/root/B)
      </test>
      <result> 
         <assert-deep-eq>{
            "ancestor": 3,
            "ancestor-or-self": 4,
            "child": 3,
            "descendant": 3,
            "descendant-or-self": 4,
            "following": 12,
            "following-or-self": 13,
            "following-sibling": 5,
            "following-sibling-or-self": 6,
            "parent": 1,
            "preceding": 4,
            "preceding-or-self": 5,
            "preceding-sibling": 1,
            "preceding-sibling-or-self": 2,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-025">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in)/*/root/C)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 3,
            "ancestor-or-self": 4,
            "child": 0,
            "descendant": 0,
            "descendant-or-self": 1,
            "following": 11,
            "following-or-self": 12,
            "following-sibling": 4,
            "following-sibling-or-self": 5,
            "parent": 1,
            "preceding": 8,
            "preceding-or-self": 9,
            "preceding-sibling": 2,
            "preceding-sibling-or-self": 3,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-026">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in)/*/root/D)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 3,
            "ancestor-or-self": 4,
            "child": 0,
            "descendant": 0,
            "descendant-or-self": 1,
            "following": 10,
            "following-or-self": 11,
            "following-sibling": 3,
            "following-sibling-or-self": 4,
            "parent": 1,
            "preceding": 9,
            "preceding-or-self": 10,
            "preceding-sibling": 3,
            "preceding-sibling-or-self": 4,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-027">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in)/*/root/E)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 3,
            "ancestor-or-self": 4,
            "child": 0,
            "descendant": 0,
            "descendant-or-self": 1,
            "following": 9,
            "following-or-self": 10,
            "following-sibling": 2,
            "following-sibling-or-self": 3,
            "parent": 1,
            "preceding": 10,
            "preceding-or-self": 11,
            "preceding-sibling": 4,
            "preceding-sibling-or-self": 5,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-028">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in)/*/root/F)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 3,
            "ancestor-or-self": 4,
            "child": 0,
            "descendant": 0,
            "descendant-or-self": 1,
            "following": 8,
            "following-or-self": 9,
            "following-sibling": 1,
            "following-sibling-or-self": 2,
            "parent": 1,
            "preceding": 11,
            "preceding-or-self": 12,
            "preceding-sibling": 5,
            "preceding-sibling-or-self": 6,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-029">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in)/*/root/G)
      </test>
      <result> 
         <assert-deep-eq>{
            "ancestor": 3,
            "ancestor-or-self": 4,
            "child": 2,
            "descendant": 6,
            "descendant-or-self": 7,
            "following": 1,
            "following-or-self": 2,
            "following-sibling": 0,
            "following-sibling-or-self": 1,
            "parent": 1,
            "preceding": 12,
            "preceding-or-self": 13,
            "preceding-sibling": 6,
            "preceding-sibling-or-self": 7,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-030">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in)/*/root/G/p)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 4,
            "ancestor-or-self": 5,
            "child": 2,
            "descendant": 2,
            "descendant-or-self": 3,
            "following": 4,
            "following-or-self": 5,
            "following-sibling": 1,
            "following-sibling-or-self": 2,
            "parent": 1,
            "preceding": 12,
            "preceding-or-self": 13,
            "preceding-sibling": 0,
            "preceding-sibling-or-self": 1,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-031">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in)/*/root/G/q)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 4,
            "ancestor-or-self": 5,
            "child": 2,
            "descendant": 2,
            "descendant-or-self": 3,
            "following": 1,
            "following-or-self": 2,
            "following-sibling": 0,
            "following-sibling-or-self": 1,
            "parent": 1,
            "preceding": 15,
            "preceding-or-self": 16,
            "preceding-sibling": 1,
            "preceding-sibling-or-self": 2,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-032">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in)/*)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 1,
            "ancestor-or-self": 2,
            "child": 2,
            "descendant": 21,
            "descendant-or-self": 22,
            "following": 0,
            "following-or-self": 1,
            "following-sibling": 0,
            "following-sibling-or-self": 1,
            "parent": 1,
            "preceding": 0,
            "preceding-or-self": 1,
            "preceding-sibling": 0,
            "preceding-sibling-or-self": 1,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="JAxes-033">
      <description> Evaluate all axes in JSON document with array as root </description>
      <created by="Michael Kay" on="2025-08-02"/>
      <dependency type="spec" value="XQ40+"/>
      <module uri="http://www.w3.org/TestModules/AxisStepJ/Histogram" file="AxisStep.J/histogram.xq"/>
      <test>
         import module namespace ax="http://www.w3.org/TestModules/AxisStepJ/Histogram";
         let $in := json-doc("AxisStep.J/json-array.json")
         return ax:histogram(jtree($in)/*/root2)
      </test>
      <result>
         <assert-deep-eq>{
            "ancestor": 2,
            "ancestor-or-self": 3,
            "child": 0,
            "descendant": 0,
            "descendant-or-self": 1,
            "following": 0,
            "following-or-self": 1,
            "following-sibling": 0,
            "following-sibling-or-self": 1,
            "parent": 1,
            "preceding": 20,
            "preceding-or-self": 21,
            "preceding-sibling": 1,
            "preceding-sibling-or-self": 2,
            "self": 1
            }
         </assert-deep-eq>
      </result>
   </test-case>
</test-set>