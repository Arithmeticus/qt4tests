<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-EnumerationType" covers-40="prod-EnumerationType">
   <description>Tests for the EnumerationType production: 4.0 proposal</description>
             
   <dependency type="spec" value="XP40+ XQ40+"/>
   
   <test-case name="enum-001">
      <description>instance of enum()</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <modified by="Gunther Rademacher" on="2024-03-25" change="changed result from true to false"/>
      <test>"c" instance of enum("a", "b", "c", "d")</test>
      <result>
        <assert-false/>
      </result>
   </test-case> 
   
   <test-case name="enum-001a">
      <description>castable as enum()</description>
      <created by="Gunther Rademacher" on="2024-03-25"/>
      <test>"c" castable as enum("a", "b", "c", "d")</test>
      <result>
        <assert-true/>
      </result>
   </test-case> 
   
   <test-case name="enum-002">
      <description>instance of enum()</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <test>"g" instance of enum("a", "b", "c", "d")</test>
      <result>
         <assert-false/>
      </result>
   </test-case> 

   <test-case name="enum-002a">
      <description>castable as enum()</description>
      <created by="Gunther Rademacher" on="2024-03-25"/>
      <test>"g" castable as enum("a", "b", "c", "d")</test>
      <result>
         <assert-false/>
      </result>
   </test-case> 
   
   <test-case name="enum-003">
      <description>cast as enum()</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <modified by="Gunther Rademacher" on="2024-03-25" change="changed result from XPST0003 to &quot;a&quot;"/>
      <test>"a" cast as enum("a", "b", "c", "d")</test>
      <result>
         <assert-eq>"a"</assert-eq>
      </result>
   </test-case> 
   
   <test-case name="enum-004">
      <description>empty enum()</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <test>"a" instance of enum()</test>
      <result>
         <error code="XPST0003"/>
      </result>
   </test-case> 
   
   <test-case name="enum-005">
      <description>singleton enum()</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <modified by="Gunther Rademacher" on="2024-03-25" change="changed result from true to false"/>
      <test>"a" instance of enum("a")</test>
      <result>
         <assert-false/>
      </result>
   </test-case> 

   <test-case name="enum-005a">
      <description>singleton enum()</description>
      <created by="Gunther Rademacher" on="2024-03-25"/>
      <test>"a" castable as enum("a")</test>
      <result>
         <assert-true/>
      </result>
   </test-case> 
   
   <test-case name="enum-006">
      <description>singleton enum()</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <test>"z" instance of enum("a")</test>
      <result>
         <assert-false/>
      </result>
   </test-case> 

   <test-case name="enum-006a">
      <description>singleton enum()</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <test>"z" castable as enum("a")</test>
      <result>
         <assert-false/>
      </result>
   </test-case> 
   
   <test-case name="enum-007">
      <description>Union with enum</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <modified by="Gunther Rademacher" on="2024-03-25" change="changed result from true to false"/>
      <test>"z" instance of union(enum("a"), enum("z"))</test>
      <result>
         <assert-false/>
      </result>
   </test-case> 

   <test-case name="enum-007a">
      <description>Union with enum</description>
      <created by="Gunther Rademacher" on="2024-03-25"/>
      <test>"z" castable as union(enum("a"), enum("z"))</test>
      <result>
         <assert-true/>
      </result>
   </test-case> 
   
   <test-case name="enum-008">
      <description>Substitutability enum</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <modified by="Gunther Rademacher" on="2024-03-25" change="changed result from true to false"/>
      <test>xs:NCName("a1234") instance of enum("x", "a1234")</test>
      <result>
         <assert-false/>
      </result>
   </test-case> 
   
   <test-case name="enum-008a">
      <description>Substitutability enum</description>
      <created by="Gunther Rademacher" on="2024-03-25"/>
      <test>xs:NCName("a1234") castable as enum("x", "a1234")</test>
      <result>
         <assert-true/>
      </result>
   </test-case> 

   <test-case name="enum-009">
      <description>Case-sensitive</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <test>xs:NCName("A1234") instance of enum("x", "a1234")</test>
      <result>
         <assert-false/>
      </result>
   </test-case> 

   <test-case name="enum-009a">
      <description>Case-sensitive</description>
      <created by="Gunther Rademacher" on="2024-03-25"/>
      <test>xs:NCName("A1234") castable as enum("x", "a1234")</test>
      <result>
         <assert-false/>
      </result>
   </test-case> 
   
   <test-case name="enum-010">
      <description>Use in function signature</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <test>let $f := function($a as enum("x", "a1234")) as xs:boolean {$a eq "z"} return $f('x')</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="enum-011">
      <description>Use in function signature</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <test>let $f := function($a as enum("x", "a1234")) as xs:boolean {$a eq "z"} return $f('z')</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="enum-012">
      <description>Use in function signature</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <test>let $f := function($a as enum("x", "a1234")) as xs:boolean {$a eq "x"} return $f('x')</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="enum-013">
      <description>Use in function return type</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <test>let $f := function($a as xs:string) as enum("x", "a1234") {"alpha"} return $f('x')</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="enum-014">
      <description>Duplicates are allowed</description>
      <created by="Michael Kay" on="2020-12-01"/>
      <test>"q" instance of enum("x", "a1234", "x")</test>
      <result>
         <assert-false/>
      </result>
   </test-case>

   <test-case name="enum-015">
      <description>instance of enum()</description>
      <created by="Gunther Rademacher" on="2026-03-26"/>
      <test>("A" cast as enum("A", "B")) instance of enum("A", "B")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>

   <test-case name="enum-016">
      <description>instance of enum()</description>
      <created by="Gunther Rademacher" on="2026-03-26"/>
      <test>("A" cast as enum("A", "B")) instance of enum("A", "C")</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
 
   
</test-set>
