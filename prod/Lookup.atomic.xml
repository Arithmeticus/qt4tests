<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-Lookup" covers="postfix-lookup">
   <description>Tests for the Binary Lookup operator on maps and arrays in XQuery 3.1</description>
    
   <dependency type="spec" value="XP40+ XQ40+"/>

   <test-case name="Lookup-Atomic-dateTime-001">
      <description>Lookup operator applied to dateTime</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:dateTime('2020-12-09T18:26:05.125Z')?year</test>
      <result>
         <all-of>
            <assert-eq>2020</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-dateTime-002">
      <description>Lookup operator applied to dateTime</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:dateTime('2020-12-09T18:26:05.125Z')?month</test>
      <result>
         <all-of>
            <assert-eq>12</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-dateTime-003">
      <description>Lookup operator applied to dateTime</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:dateTime('2020-12-09T18:26:05.125Z')?day</test>
      <result>
         <all-of>
            <assert-eq>9</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-dateTime-004">
      <description>Lookup operator applied to dateTime</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:dateTime('2020-12-09T18:26:05.125Z')?hours</test>
      <result>
         <all-of>
            <assert-eq>18</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-dateTime-005">
      <description>Lookup operator applied to dateTime</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:dateTime('2020-12-09T18:26:05.125Z')?minutes</test>
      <result>
         <all-of>
            <assert-eq>26</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-dateTime-006">
      <description>Lookup operator applied to dateTime</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:dateTime('2020-12-09T18:26:05.125Z')?seconds</test>
      <result>
         <all-of>
            <assert-eq>5.125</assert-eq>
            <assert-type>xs:decimal</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-dateTime-007">
      <description>Lookup operator applied to dateTime</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:dateTime('2020-12-09T18:26:05.125Z')?timezone</test>
      <result>
         <all-of>
            <assert-eq>xs:dayTimeDuration('PT0S')</assert-eq>
            <assert-type>xs:dayTimeDuration</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-dateTime-008">
      <description>Lookup operator applied to dateTime with timezone</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:dateTime('2020-12-09T18:26:05.125-05:00')?timezone</test>
      <result>
         <all-of>
            <assert-eq>xs:dayTimeDuration('-PT5H')</assert-eq>
            <assert-type>xs:dayTimeDuration</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-dateTime-009">
      <description>Lookup operator applied to dateTime with no timezone</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:dateTime('2020-12-09T18:26:05.125')?timezone</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-dateTime-010">
      <description>Lookup operator applied to dateTime at 24:00</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:dateTime('2020-12-31T24:00:00Z') ! (?year, ?month, ?day, ?hours, ?minutes, ?seconds)</test>
      <result>
         <assert-deep-eq>2021, 1, 1, 0, 0, 0</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-dateTime-011">
      <description>Lookup operator applied to dateTime with timezone</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:dateTime('2020-12-09T18:26:05.125-05:00')?timezone?hours</test>
      <result>
         <all-of>
            <assert-eq>-5</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   
   <test-case name="Lookup-Atomic-date-001">
      <description>Lookup operator applied to date</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:date('2020-12-09Z')?year</test>
      <result>
         <all-of>
            <assert-eq>2020</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-date-002">
      <description>Lookup operator applied to date</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:date('2020-12-09Z')?month</test>
      <result>
         <all-of>
            <assert-eq>12</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-date-003">
      <description>Lookup operator applied to date</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:date('2020-12-09Z')?day</test>
      <result>
         <all-of>
            <assert-eq>9</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-date-004">
      <description>Lookup operator applied to date</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:date('2020-12-09Z')?hours</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-date-005">
      <description>Lookup operator applied to date</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:date('2020-12-09Z')?minutes</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-date-006">
      <description>Lookup operator applied to date</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:date('2020-12-09Z')?seconds</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-date-007">
      <description>Lookup operator applied to date</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:date('2020-12-09Z')?timezone</test>
      <result>
         <all-of>
            <assert-eq>xs:dayTimeDuration('PT0S')</assert-eq>
            <assert-type>xs:dayTimeDuration</assert-type>
         </all-of>
      </result>
   </test-case>
   
   
   <test-case name="Lookup-Atomic-time-001">
      <description>Lookup operator applied to time</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:time('18:26:05.125Z')?year</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-time-002">
      <description>Lookup operator applied to time</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:time('18:26:05.125Z')?month</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-time-003">
      <description>Lookup operator applied to time</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:time('18:26:05.125Z')?day</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-time-004">
      <description>Lookup operator applied to time</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:time('18:26:05.125Z')?hours</test>
      <result>
         <all-of>
            <assert-eq>18</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-time-005">
      <description>Lookup operator applied to time</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:time('18:26:05.125Z')?minutes</test>
      <result>
         <all-of>
            <assert-eq>26</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-time-006">
      <description>Lookup operator applied to time</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:time('18:26:05.125Z')?seconds</test>
      <result>
         <all-of>
            <assert-eq>5.125</assert-eq>
            <assert-type>xs:decimal</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-time-007">
      <description>Lookup operator applied to time</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:time('18:26:05.125Z')?timezone</test>
      <result>
         <all-of>
            <assert-eq>xs:dayTimeDuration('PT0S')</assert-eq>
            <assert-type>xs:dayTimeDuration</assert-type>
         </all-of>
      </result>
   </test-case>
   
   
   <test-case name="Lookup-Atomic-gYear-001">
      <description>Lookup operator applied to gYear</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYear('2020Z')?year</test>
      <result>
         <all-of>
            <assert-eq>2020</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gYear-002">
      <description>Lookup operator applied to gYear</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYear('2020Z')?month</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gYear-003">
      <description>Lookup operator applied to gYear</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYear('2020Z')?day</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gYear-004">
      <description>Lookup operator applied to gYear</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYear('2020Z')?hours</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gYear-005">
      <description>Lookup operator applied to gYear</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYear('2020Z')?minutes</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gYear-006">
      <description>Lookup operator applied to gYear</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYear('2020Z')?seconds</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gYear-007">
      <description>Lookup operator applied to gYear</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYear('2020Z')?timezone</test>
      <result>
         <all-of>
            <assert-eq>xs:dayTimeDuration('PT0S')</assert-eq>
            <assert-type>xs:dayTimeDuration</assert-type>
         </all-of>
      </result>
   </test-case>
   
   
   <test-case name="Lookup-Atomic-gYearMonth-001">
      <description>Lookup operator applied to gYearMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYearMonth('2020-12Z')?year</test>
      <result>
         <all-of>
            <assert-eq>2020</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gYearMonth-002">
      <description>Lookup operator applied to gYearMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYearMonth('2020-12Z')?month</test>
      <result>
         <all-of>
            <assert-eq>12</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gYearMonth-003">
      <description>Lookup operator applied to gYearMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYearMonth('2020-12Z')?day</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gYearMonth-004">
      <description>Lookup operator applied to gYearMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYearMonth('2020-12Z')?hours</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gYearMonth-005">
      <description>Lookup operator applied to gYearMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYearMonth('2020-12Z')?minutes</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gYearMonth-006">
      <description>Lookup operator applied to gYearMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYearMonth('2020-12Z')?seconds</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gYearMonth-007">
      <description>Lookup operator applied to gYearMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gYearMonth('2020-12Z')?timezone</test>
      <result>
         <all-of>
            <assert-eq>xs:dayTimeDuration('PT0S')</assert-eq>
            <assert-type>xs:dayTimeDuration</assert-type>
         </all-of>
      </result>
   </test-case>
   
   
   <test-case name="Lookup-Atomic-gMonth-001">
      <description>Lookup operator applied to gMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonth('--12Z')?year</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gMonth-002">
      <description>Lookup operator applied to gMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonth('--12Z')?month</test>
      <result>
         <all-of>
            <assert-eq>12</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gMonth-003">
      <description>Lookup operator applied to gMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonth('--12Z')?day</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gMonth-004">
      <description>Lookup operator applied to gMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonth('--12Z')?hours</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gMonth-005">
      <description>Lookup operator applied to gMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonth('--12Z')?minutes</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gMonth-006">
      <description>Lookup operator applied to gMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonth('--12Z')?seconds</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gMonth-007">
      <description>Lookup operator applied to gMonth</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonth('--12Z')?timezone</test>
      <result>
         <all-of>
            <assert-eq>xs:dayTimeDuration('PT0S')</assert-eq>
            <assert-type>xs:dayTimeDuration</assert-type>
         </all-of>
      </result>
   </test-case>
   
   
   <test-case name="Lookup-Atomic-gMonthDay-001">
      <description>Lookup operator applied to gMonthDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonthDay('--12-09Z')?year</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gMonthDay-002">
      <description>Lookup operator applied to gMonthDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonthDay('--12-09Z')?month</test>
      <result>
         <all-of>
            <assert-eq>12</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gMonthDay-003">
      <description>Lookup operator applied to gMonthDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonthDay('--12-09Z')?day</test>
      <result>
         <all-of>
            <assert-eq>9</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gMonthDay-004">
      <description>Lookup operator applied to gMonthDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonthDay('--12-09Z')?hours</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gMonthDay-005">
      <description>Lookup operator applied to gMonthDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonthDay('--12-09Z')?minutes</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gMonthDay-006">
      <description>Lookup operator applied to gMonthDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonthDay('--12-09Z')?seconds</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gMonthDay-007">
      <description>Lookup operator applied to gMonthDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gMonthDay('--12-09Z')?timezone</test>
      <result>
         <all-of>
            <assert-eq>xs:dayTimeDuration('PT0S')</assert-eq>
            <assert-type>xs:dayTimeDuration</assert-type>
         </all-of>
      </result>
   </test-case>
   
   
   <test-case name="Lookup-Atomic-gDay-001">
      <description>Lookup operator applied to gDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gDay('---09Z')?year</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gDay-002">
      <description>Lookup operator applied to gDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gDay('---09Z')?month</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gDay-003">
      <description>Lookup operator applied to gDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gDay('---09Z')?day</test>
      <result>
         <all-of>
            <assert-eq>9</assert-eq>
            <assert-type>xs:integer</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gDay-004">
      <description>Lookup operator applied to gDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gDay('---09Z')?hours</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gDay-005">
      <description>Lookup operator applied to gDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gDay('---09Z')?minutes</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gDay-006">
      <description>Lookup operator applied to gDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gDay('---09Z')?seconds</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-gDay-007">
      <description>Lookup operator applied to gDay</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:gDay('---09Z')?timezone</test>
      <result>
         <all-of>
            <assert-eq>xs:dayTimeDuration('PT0S')</assert-eq>
            <assert-type>xs:dayTimeDuration</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-duration-001">
      <description>Lookup operator applied to duration</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:duration('P1Y5M2DT12H30M3.12S') ! (?years, ?months, ?days, ?hours, ?minutes, ?seconds)</test>
      <result>
         <assert-deep-eq>1, 5, 2, 12, 30, 3.12</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-duration-002">
      <description>Lookup operator applied to negative duration</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:duration('-P1Y5M2DT12H30M3.12S') ! (?years, ?months, ?days, ?hours, ?minutes, ?seconds)</test>
      <result>
         <assert-deep-eq>-1, -5, -2, -12, -30, -3.12</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-duration-003">
      <description>Lookup operator applied to yearMonth duration</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:yearMonthDuration('P1Y5M') ! (?years, ?months, ?days, ?hours, ?minutes, ?seconds)</test>
      <result>
         <assert-deep-eq>1, 5, 0, 0, 0, 0</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-duration-004">
      <description>Lookup operator applied to dayTime duration</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:dayTimeDuration('-P2DT12H30M3.12S') ! (?years, ?months, ?days, ?hours, ?minutes, ?seconds)</test>
      <result>
         <assert-deep-eq>0, 0, -2, -12, -30, -3.12</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-hexBinary-001">
      <description>Lookup operator applied to QName</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:hexBinary('0A0B0C0D0EA0FF00')?octets</test>
      <result>
         <all-of>
            <assert-deep-eq>10, 11, 12, 13, 14, 160, 255, 0</assert-deep-eq>
            <assert-type>xs:unsignedByte*</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-hexBinary-002">
      <description>Lookup operator applied to QName</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:hexBinary('')?octets</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-base64Binary-001">
      <description>Lookup operator applied to QName</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:base64Binary('ASI/Tg==')?octets</test>
      <result>
         <all-of>
            <assert-deep-eq>1, 34, 63, 78</assert-deep-eq>
            <assert-type>xs:unsignedByte*</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-base64Binary-002">
      <description>Lookup operator applied to QName</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:base64Binary('')?octets</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-QName-001">
      <description>Lookup operator applied to QName</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:QName('xs:QName')?prefix</test>
      <result>
         <all-of>
            <assert-eq>"xs"</assert-eq>
            <assert-type>xs:NCName</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-QName-002">
      <description>Lookup operator applied to QName</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:QName('xs:QName')?namespace-uri</test>
      <result>
         <all-of>
            <assert-eq>"http://www.w3.org/2001/XMLSchema"</assert-eq>
            <assert-type>xs:anyURI</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-QName-003">
      <description>Lookup operator applied to QName</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:QName('xs:QName')?local-name</test>
      <result>
         <all-of>
            <assert-eq>"QName"</assert-eq>
            <assert-type>xs:NCName</assert-type>
         </all-of>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-QName-004">
      <description>Lookup operator applied to unprefixed QName</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:QName('local')?prefix</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-QName-005">
      <description>Lookup operator applied to unprefixed QName</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:QName('local')?namespace-uri</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-QName-006">
      <description>Lookup operator applied to unprefixed QName</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:QName('local')?local-name</test>
      <result>
         <assert-eq>"local"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-001">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('https://www.example.com/')?scheme</test>
      <result>
         <assert-eq>"https"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-002">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('books.xml')?scheme</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-003">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('https://www.example.com/')?authority</test>
      <result>
         <assert-eq>'www.example.com'</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-004">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('https://www.example.com:1202/')?authority</test>
      <result>
         <assert-eq>'www.example.com:1202'</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-005">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('books.xml')?authority</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-006">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('https://www.example.com/')?path</test>
      <result>
         <assert-eq>'/'</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-006a">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('https://www.example.com')?path</test>
      <result>
         <assert-eq>''</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-007">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('books.xml#title')?path</test>
      <result>
         <assert-eq>"books.xml"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-008">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('http://www.saxonica.com/x/y/books.xml?author=Jane_Austen')?path</test>
      <result>
         <assert-eq>"/x/y/books.xml"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-009">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('http://www.saxonica.com/x/y/books.xml?author=Jane_Austen')?query</test>
      <result>
         <assert-eq>"author=Jane_Austen"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-010">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('http://www.saxonica.com/x/y/books.xml?author=Jane_Austen')?query-parameters?author</test>
      <result>
         <assert-eq>"Jane_Austen"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-011">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('books.xml?author=Jane_Austen;title=Pride_and_Prejudice')?query</test>
      <result>
         <assert-eq>"author=Jane_Austen;title=Pride_and_Prejudice"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-012">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('books.xml?author=Jane_Austen;title=Pride_and_Prejudice')?query-parameters?title</test>
      <result>
         <assert-eq>"Pride_and_Prejudice"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-013">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('books.xml?author=Jane_Austen' || codepoints-to-string(38) || 'title=Pride_and_Prejudice')?query-parameters?title</test>
      <result>
         <assert-eq>"Pride_and_Prejudice"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-014">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('books.xml?author=Jane%20Austen')?query</test>
      <result>
         <assert-eq>"author=Jane Austen"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-015">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('books.xml?author=Jane%20Austen;title=Pride%20and%20Prejudice')?query-parameters?author</test>
      <result>
         <assert-eq>"Jane Austen"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-016">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('books.xml?hardback')?query-parameters?hardback</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-017">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('books.xml?author=John;author=Jane')?query-parameters?author</test>
      <result>
         <assert-deep-eq>"John", "Jane"</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-025">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('books.xml#main')?fragment</test>
      <result>
         <assert-eq>"main"</assert-eq>
      </result>
   </test-case>
   
   <test-case name="Lookup-Atomic-anyURI-026">
      <description>Lookup operator applied to xs:anyURI</description>
      <created by="Michael Kay" on="2020-12-09"/>
      <test>xs:anyURI('books.xml#section%20one')?fragment</test>
      <result>
         <assert-eq>"section one"</assert-eq>
      </result>
   </test-case>
 

</test-set>