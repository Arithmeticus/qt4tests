<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="prod-ByExpr" covers-40="prod-ByExpr">
   <description>Tests for extended range expressions (e.g. A to B by C)</description>
   <link type="spec" document="http://www.w3.org/TR/xpath-functions-11/"
         idref="func-abs"/>
         
   <dependency type="spec" value="XP40+ XQ40+"/>
     
 
   

   
   <test-case name="ByExpr-430">
      <description>empty range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>0 to -42 by 1</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-430a">
      <description>empty range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(0 to -42 by 1)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-430b">
      <description>empty range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(0 to -42 by 1)[1]</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-431">
      <description>empty range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>0 to -42 by 8</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-431a">
      <description>empty range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(0 to -42 by 8)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-431b">
      <description>empty range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(0 to -42 by 8)[1]</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-432">
      <description>singleton range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>10 to 10 by 8</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-432a">
      <description>singleton range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(10 to 10 by 8)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-432b">
      <description>singleton range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(10 to 10 by 8)[1]</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-433">
      <description>zero increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>10 to 20 by 0</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-433a">
      <description>zero increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(10 to 20 by 0)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-433b">
      <description>zero increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(10 to 20 by 0)[3]</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-434">
      <description>finite increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>10 to 90 by 10</test>
      <result>
         <assert-deep-eq>10, 20, 30, 40, 50, 60, 70, 80, 90</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-434a">
      <description>finite increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(10 to 90 by 10)</test>
      <result>
         <assert-eq>9</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-434b">
      <description>finite increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(10 to 90 by 10)[8]</test>
      <result>
         <assert-eq>80</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-434c">
      <description>finite increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>80 = 10 to 90 by 10</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-434d">
      <description>finite increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>81 = 10 to 90 by 10</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-434e">
      <description>finite increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>81 &lt; 10 to 90 by 10</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-434f">
      <description>finite increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>81 > 10 to 90 by 10</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-434g">
      <description>finite increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>10 to 90 by 10 > 91</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-434h">
      <description>finite increment, reversed</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>reverse(10 to 90 by 10)</test>
      <result>
         <assert-deep-eq>90, 80, 70, 60, 50, 40, 30, 20, 10</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-434i">
      <description>finite increment, reversed</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>reverse(10 to 91 by 10)</test>
      <result>
         <assert-deep-eq>90, 80, 70, 60, 50, 40, 30, 20, 10</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-435">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-20 to +20 by 10</test>
      <result>
         <assert-deep-eq>-20, -10, 0, 10, 20</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-435a">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(-20 to +20 by 10)</test>
      <result>
         <assert-eq>5</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-435b">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(-20 to +20 by 10)[4]</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-435c">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-20 to +20 by 10 = 0</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-436">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-25 to +25 by 10</test>
      <result>
         <assert-deep-eq>-25, -15, -5, 5, 15, 25</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-436a">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(-25 to +25 by 10)</test>
      <result>
         <assert-eq>6</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-436b">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(-25 to +25 by 10)[3]</test>
      <result>
         <assert-eq>-5</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-436c">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-25 to +25 by 10 = 0</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-437">
      <description>finite increment, singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>4 to 30 by 50</test>
      <result>
         <assert-eq>4</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-437a">
      <description>finite increment, singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(4 to 30 by 50)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-437b">
      <description>finite increment, singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(4 to 30 by 50)[1]</test>
      <result>
         <assert-eq>4</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-438">
      <description>finite increment, negative singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-4 to 30 by 50</test>
      <result>
         <assert-eq>-4</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-438a">
      <description>finite increment, negative singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(-4 to 30 by 50)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-438b">
      <description>finite increment, negative singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(-4 to 30 by 50)[1]</test>
      <result>
         <assert-eq>-4</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-439">
      <description>finite increment, large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>30000000000004 to 30000000000005 by 50</test>
      <result>
         <assert-eq>30000000000004</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-439a">
      <description>finite increment, large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(30000000000004 to 30000000000005 by 50)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-439b">
      <description>finite increment, large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(30000000000004 to 30000000000005 by 50)[1]</test>
      <result>
         <assert-eq>30000000000004</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-440">
      <description>finite increment, large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>30000000000004 to 30000000000085 by 50</test>
      <result>
         <assert-deep-eq>30000000000004, 30000000000054</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-440a">
      <description>finite increment, large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(30000000000004 to 30000000000085 by 50)</test>
      <result>
         <assert-deep-eq>2</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-440b">
      <description>finite increment, large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(30000000000004 to 30000000000085 by 50)[2]</test>
      <result>
         <assert-eq>30000000000054</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-440c">
      <description>finite increment, large values, reversed</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>reverse(30000000000004 to 30000000000085 by 50)</test>
      <result>
         <assert-deep-eq>30000000000054, 30000000000004</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-441">
      <description>finite increment, very large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>300000000000000000000004 to 300000000000000000000085 by 50</test>
      <result>
         <assert-deep-eq>300000000000000000000004, 300000000000000000000054</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-441a">
      <description>finite increment, very large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(300000000000000000000004 to 300000000000000000000085 by 50)</test>
      <result>
         <assert-eq>2</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-441b">
      <description>finite increment, very large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(300000000000000000000004 to 300000000000000000000085 by 50)[2]</test>
      <result>
         <assert-eq>300000000000000000000054</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-441c">
      <description>finite increment, very large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>300000000000000000000004 to 300000000000000000000085 by 50 = 300000000000000000000054</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-441d">
      <description>finite increment, very large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>300000000000000000000004 to 300000000000000000000085 by 50 = 300000000000000000000055</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-441e">
      <description>finite increment, very large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>300000000000000000000004 to 300000000000000000000085 by 50 != 300000000000000000000055</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-441f">
      <description>finite increment, very large values, reversed</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>reverse(300000000000000000000004 to 300000000000000000000085 by 50)</test>
      <result>
         <assert-deep-eq>300000000000000000000054, 300000000000000000000004</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-501">
      <description>singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>3 to 3 by -1</test>
      <result>
         <assert-eq>3</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-501a">
      <description>singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(3 to 3 by -1)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-501b">
      <description>singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(3 to 3 by -1)[1]</test>
      <result>
         <assert-eq>3</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-501c">
      <description>singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>3 to 3 by -1 = 3</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-501d">
      <description>singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>3 to 3 by -1 >= 3</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-502">
      <description>negative singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-33 to -33 by -5</test>
      <result>
         <assert-eq>-33</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-502a">
      <description>negative singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(-33 to -33 by -5)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-502b">
      <description>negative singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(-33 to -33 by -5)[1]</test>
      <result>
         <assert-eq>-33</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-502c">
      <description>negative singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-33 = -33 to -33 by -5</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-502d">
      <description>negative singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-33 != -33 to -33 by -5</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-503">
      <description>zero singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>0 to 0 by -3</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-503a">
      <description>zero singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(0 to 0 by -3)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-503b">
      <description>zero singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(0 to 0 by -3)[1]</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-503d">
      <description>zero singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>0 to 0 by -3 != 0</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-504">
      <description>empty range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>11 to 10 by -88888888888888888888888888888888888888</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-504a">
      <description>empty range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(11 to 10 by -88888888888888888888888888888888888888)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-504b">
      <description>empty range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(11 to 10 by -88888888888888888888888888888888888888)[1]</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-504c">
      <description>empty range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>11 to 10 by -88888888888888888888888888888888888888 != 0</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-505">
      <description>empty range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>0 to -10 by -1</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-505a">
      <description>empty range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(0 to -10 by -1)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-505b">
      <description>empty range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(0 to -10 by -1)[1]</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-505c">
      <description>empty range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>0 to -10 by -1 = -11</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-506">
      <description>multiple range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>1 to 10 by -1</test>
      <result>
         <assert-deep-eq>10, 9, 8 ,7, 6, 5, 4, 3, 2, 1</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-506a">
      <description>multiple range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(1 to 10 by -1)</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-506b">
      <description>multiple range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(1 to 10 by -1)[3]</test>
      <result>
         <assert-eq>8</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-506c">
      <description>multiple range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>1 to 10 by -1 = 1</test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-506d">
      <description>multiple range</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>1 to 10 by -1 > 10</test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-507">
      <description>multiple range, negative</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-200000  to -199997 by -1</test>
      <result>
         <assert-deep-eq>-199997, -199998, -199999, -200000</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-507a">
      <description>multiple range, negative</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(-200000  to -199997 by -1)</test>
      <result>
         <assert-eq>4</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-507b">
      <description>multiple range, negative</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(-200000  to -199997 by -1)[3]</test>
      <result>
         <assert-eq>-199999</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-508">
      <description>multiple range, large numbers</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>100000000000 to 100000000003 by -1</test>
      <result>
         <assert-deep-eq>100000000003, 100000000002, 100000000001, 100000000000</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-508a">
      <description>multiple range, large numbers</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(100000000000 to 100000000003 by -1)</test>
      <result>
         <assert-eq>4</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-508b">
      <description>multiple range, large numbers</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(100000000000 to 100000000003 by -1)[3]</test>
      <result>
         <assert-eq>100000000001</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-509">
      <description>multiple range, very large numbers</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>1000000000000000000000 to 1000000000000000000003 by -1</test>
      <result>
         <assert-deep-eq>1000000000000000000003, 1000000000000000000002, 1000000000000000000001, 1000000000000000000000</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-509a">
      <description>multiple range, very large numbers</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(1000000000000000000000 to 1000000000000000000003 by -1)</test>
      <result>
         <assert-eq>4</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-509b">
      <description>multiple range, very large numbers</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(1000000000000000000000 to 1000000000000000000003 by -1)[2]</test>
      <result>
         <assert-eq>1000000000000000000002</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-510">
      <description>multiple range, large negative numbers</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-100000000003 to -100000000000 by -1</test>
      <result>
         <assert-deep-eq>-100000000000, -100000000001, -100000000002, -100000000003</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-510a">
      <description>multiple range, large negative numbers</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(-100000000003 to -100000000000 by -1)</test>
      <result>
         <assert-deep-eq>4</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-510b">
      <description>multiple range, large negative numbers</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(-100000000003 to -100000000000 by -1)[2]</test>
      <result>
         <assert-eq>-100000000001</assert-eq>
      </result>
   </test-case>

   <test-case name="ByExpr-511">
      <description>multiple range, very large negative numbers</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-1000000000000000000003 to -1000000000000000000000 by -1</test>
      <result>
         <assert-deep-eq>-1000000000000000000000, -1000000000000000000001, -1000000000000000000002, -1000000000000000000003</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-511a">
      <description>multiple range, very large negative numbers</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(-1000000000000000000003 to -1000000000000000000000 by -1)</test>
      <result>
         <assert-eq>4</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-511b">
      <description>multiple range, very large negative numbers</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(-1000000000000000000003 to -1000000000000000000000 by -1)[4]</test>
      <result>
         <assert-eq>-1000000000000000000003</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-512">
      <description>multiple range, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-5 to 5 by -1</test>
      <result>
         <assert-deep-eq>5, 4, 3, 2, 1, 0, -1, -2, -3, -4, -5</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-512a">
      <description>multiple range, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(-5 to 5 by -1)</test>
      <result>
         <assert-eq>11</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-512b">
      <description>multiple range, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(-5 to 5 by -1)[6]</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-513">
      <description>multiple range, not known statically</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>year-from-date(current-date()) idiv 1000 to 4 by -1</test>
      <result>
         <assert-deep-eq>4, 3, 2</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-513a">
      <description>multiple range, not known statically</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(year-from-date(current-date()) idiv 1000 to 4 by -1)</test>
      <result>
         <assert-eq>3</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-513b">
      <description>multiple range, not known statically</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(year-from-date(current-date()) idiv 1000)[2] to 4 by -1</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-514">
      <description>multiple range, not known statically</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>0 to year-from-date(current-date()) idiv 1000 by -1</test>
      <result>
         <assert-deep-eq>2, 1, 0</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-514a">
      <description>multiple range, not known statically</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(0 to year-from-date(current-date()) idiv 1000 by -1)</test>
      <result>
         <assert-eq>3</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-514b">
      <description>multiple range, not known statically</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(0 to year-from-date(current-date()) idiv 1000 by -1)[2]</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-515">
      <description>singleton range, not known statically</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>2 to year-from-date(current-date()) idiv 1000 by -4</test>
      <result>
         <assert-eq>2</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-515a">
      <description>singleton range, not known statically</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(2 to year-from-date(current-date()) idiv 1000 by -4)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-515b">
      <description>singleton range, not known statically</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(year-from-date(current-date()) idiv 1000 to 2 by -4)[1]</test>
      <result>
         <assert-eq>2</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-516">
      <description>empty range, not known statically</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>42 to year-from-date(current-date()) idiv 1000 by -1</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-516a">
      <description>empty range, not known statically</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(42 to year-from-date(current-date()) idiv 1000 by -1)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-516b">
      <description>empty range, not known statically</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>42 to (year-from-date(current-date()) idiv 1000)[2] by -1</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-530">
      <description>empty range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>42 to 0 by -1</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-530a">
      <description>empty range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(42 to 0 by -1)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-530b">
      <description>empty range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(42 to 0 by -1)[1]</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-531">
      <description>empty range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>42 to 0 by -8</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-531a">
      <description>empty range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(42 to 0 by -8)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-531b">
      <description>empty range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(42 to 0 by -8)[1]</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-532">
      <description>singleton range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>10 to 10 by -8</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-532a">
      <description>singleton range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(10 to 10 by -8)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-532b">
      <description>singleton range, explicit increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(10 to 10 by -8)[1]</test>
      <result>
         <assert-eq>10</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-533">
      <description>zero increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>10 to 20 by 0</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-533a">
      <description>zero increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(10 to 20 by 0)</test>
      <result>
         <assert-eq>0</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-533b">
      <description>zero increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(10 to 20 by 0)[3]</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-534">
      <description>finite increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>10 to 90 by -10</test>
      <result>
         <assert-deep-eq>90, 80, 70, 60, 50, 40, 30, 20, 10</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-534a">
      <description>finite increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(10 to 90 by -10)</test>
      <result>
         <assert-eq>9</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-534b">
      <description>finite increment</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(10 to 90 by -10)[8]</test>
      <result>
         <assert-eq>20</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-535">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-20 to +20 by -10</test>
      <result>
         <assert-deep-eq>20, 10, 0, -10, -20</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-535a">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(-20 to +20 by -10)</test>
      <result>
         <assert-eq>5</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-535b">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(-20 to +20 by -10)[4]</test>
      <result>
         <assert-eq>-10</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-536">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-25 to 25 by -10</test>
      <result>
         <assert-deep-eq>25, 15, 5, -5, -15, -25</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-536a">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(-25 to 25 by -10)</test>
      <result>
         <assert-eq>6</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-536b">
      <description>finite increment, spanning zero</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(-25 to 25 by -10)[3]</test>
      <result>
         <assert-eq>5</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-537">
      <description>finite increment, singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-30 to 4 by -50</test>
      <result>
         <assert-eq>4</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-537a">
      <description>finite increment, singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(-30 to 4 by -50)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-537b">
      <description>finite increment, singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(-30 to 4 by -50)[1]</test>
      <result>
         <assert-eq>4</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-538">
      <description>finite increment, negative singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>-10 to -4 by -50</test>
      <result>
         <assert-eq>-4</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-538a">
      <description>finite increment, negative singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(-10 to -4 by -50)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-538b">
      <description>finite increment, negative singleton</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(-10 to -4 by -50)[1]</test>
      <result>
         <assert-eq>-4</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-539">
      <description>finite increment, large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>30000000000004 to 30000000000005 by -50</test>
      <result>
         <assert-eq>30000000000005</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-539a">
      <description>finite increment, large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(30000000000004 to 30000000000005 by -50)</test>
      <result>
         <assert-eq>1</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-539b">
      <description>finite increment, large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(30000000000004 to 30000000000005 by -50)[1]</test>
      <result>
         <assert-eq>30000000000005</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-540">
      <description>finite increment, large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>30000000000004 to 30000000000085 by -50</test>
      <result>
         <assert-deep-eq>30000000000085, 30000000000035</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-540a">
      <description>finite increment, large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(30000000000004 to 30000000000085 by -50)</test>
      <result>
         <assert-deep-eq>2</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-540b">
      <description>finite increment, large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(30000000000004 to 30000000000085 by -50)[2]</test>
      <result>
         <assert-eq>30000000000035</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-541">
      <description>finite increment, very large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>300000000000000000000004 to 300000000000000000000085 by -50</test>
      <result>
         <assert-deep-eq>300000000000000000000085, 300000000000000000000035</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-541a">
      <description>finite increment, very large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>count(300000000000000000000004 to 300000000000000000000085 by -50)</test>
      <result>
         <assert-eq>2</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-541b">
      <description>finite increment, very large values</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>(300000000000000000000004 to 300000000000000000000085 by -50)[2]</test>
      <result>
         <assert-eq>300000000000000000000035</assert-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-541c">
      <description>finite increment, very large values, reversed</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>reverse(300000000000000000000004 to 300000000000000000000085 by -50)</test>
      <result>
         <assert-deep-eq>300000000000000000000035, 300000000000000000000085</assert-deep-eq>
      </result>
   </test-case>
   
 
   
   <test-case name="ByExpr-602">
      <description>empty by arg</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>1 to 17 by year-from-date(current-date())[. lt 0]</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-603">
      <description>non-integer first arg</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <test>1 to 17 by year-from-date(current-date())[. lt 0]</test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   
   
   <test-case name="ByExpr-605">
      <description>atomized second arg</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <dependency type="spec" value="XQ30+"/>    
      <test><![CDATA[let $x := <e>2</e> return 1 to 10 by $x]]></test>
      <result>
         <assert-deep-eq>1, 3, 5, 7, 9</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-606">
      <description>atomized second arg</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <dependency type="spec" value="XQ30+"/>    
      <test><![CDATA[let $x := <e>-2</e> return 1 to 10 by $x]]></test>
      <result>
         <assert-deep-eq>10, 8, 6, 4, 2</assert-deep-eq>
      </result>
   </test-case>
   
   <test-case name="ByExpr-607">
      <description>atomized second arg</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <dependency type="spec" value="XQ30+"/>    
      <test><![CDATA[let $x := <e>0</e> return 10 to 1 by $x ]]></test>
      <result>
         <assert-empty/>
      </result>
   </test-case>
   
   <test-case name="ByExpr-608">
      <description>atomized third arg</description>
      <created by="Michael Kay" on="2020-11-30"/>
      <dependency type="spec" value="XQ30+"/>    
      <test><![CDATA[let $x := <e>10</e> return 1 to $x by 2]]></test>
      <result>
         <assert-deep-eq>1, 3, 5, 7, 9</assert-deep-eq>
      </result>
   </test-case>
   

</test-set>