<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="math-sinh" covers-40="PR1205">
  <description>Tests for the math:sinh function introduced in XPath 4.0</description>
  <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/" idref="func-sinh"/>
  <dependency type="spec" value="XP40+ XQ40+"/>
  
  <test-case name="math-sinh-001">
    <description>Evaluate the function math:sinh() with the argument ()</description>
    <created by="Christian Gruen" on="2024-05-21"/>
    <environment ref="math"/>        
    <test>math:sinh(())</test>
    <result>
      <assert-empty />
    </result>
  </test-case>
  <test-case name="math-sinh-002">
    <description>Evaluate the function math:sinh() with the argument 0</description>
    <created by="Christian Gruen" on="2024-05-21"/>
    <environment ref="math"/>        
    <test>math:sinh(0)</test>
    <result>
      <assert-eq>0.0e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-sinh-003">
    <description>Evaluate the function math:sinh() with the argument -0.0e0</description>
    <created by="Christian Gruen" on="2024-05-21"/>
    <environment ref="math"/>        
    <test>math:sinh(-0.0e0)</test>
    <result>
      <assert-eq>-0.0e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-sinh-004">
    <description>Evaluate the function math:sinh() with the argument math:pi() div 2</description>
    <created by="Christian Gruen" on="2024-05-21"/>
    <environment ref="math"/>        
    <test>math:sinh(math:pi() div 2)</test>
    <result>
      <assert-eq>2.3012989023072947e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-sinh-005">
    <description>Evaluate the function math:sinh() with the argument -math:pi() div 2</description>
    <created by="Christian Gruen" on="2024-05-21"/>
    <environment ref="math"/>        
    <test>math:sinh(-math:pi() div 2)</test>
    <result>
      <assert-eq>-2.3012989023072947e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-sinh-006">
    <description>Evaluate the function math:sinh() with the argument math:pi()</description>
    <created by="Christian Gruen" on="2024-05-21"/>
    <environment ref="math"/>        
    <test>math:sinh(math:pi())</test>
    <result>
      <assert-eq>11.548739357257748e0</assert-eq>
    </result>
  </test-case>
  <test-case name="math-sinh-007">
    <description>Evaluate the function math:sinh() with the argument xs:double('NaN')</description>
    <created by="Christian Gruen" on="2024-05-21"/>
    <environment ref="math"/>        
    <test>math:sinh(xs:double('NaN'))</test>
    <result>
      <assert-string-value>NaN</assert-string-value>
    </result>
  </test-case>
  <test-case name="math-sinh-008">
    <description>Evaluate the function math:sinh() with the argument xs:double('INF')</description>
    <created by="Christian Gruen" on="2024-05-21"/>
    <environment ref="math"/>        
    <test>math:sinh(xs:double('INF'))</test>
    <result>
      <assert-string-value>INF</assert-string-value>
    </result>
  </test-case>
  <test-case name="math-sinh-009">
    <description>Evaluate the function math:sinh() with the argument xs:double('-INF')</description>
    <created by="Christian Gruen" on="2024-05-21"/>
    <environment ref="math"/>        
    <test>math:sinh(xs:double('-INF'))</test>
    <result>
      <assert-string-value>-INF</assert-string-value>
    </result>
  </test-case>
</test-set>
