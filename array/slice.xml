<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="array-slice">
  <description>Tests for the array:slice function</description>
  <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/" idref="func-array-slice"/>
  <dependency type="feature" value="higherOrderFunctions"/>
  <dependency type="spec" value="XP40+ XQ40+"/>

  <test-case name="array-slice-100">
    <description>Empty sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { } => array:slice(0)]]></test>
    <result>
      <assert-deep-eq>[]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-101">
    <description>Empty sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { } => array:slice(1, 2, 3)]]></test>
    <result>
      <assert-deep-eq>[]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-102">
    <description>Empty sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { } => array:slice(-1, -2, -3)]]></test>
    <result>
      <assert-deep-eq>[]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-103">
    <description>Empty sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { } => array:slice(0, 0, 0)]]></test>
    <result>
      <assert-deep-eq>[]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-104">
    <description>Single string</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(0)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-105">
    <description>Single string</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(0, 0)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-106">
    <description>Single string</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(0, 0, 0)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-107">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(2, 4)]]></test>
    <result>
      <assert-deep-eq>["b", "c", "d"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-108">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(2, 4)]]></test>
    <result>
      <assert-deep-eq>["b", "c", "d"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-109">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(2)]]></test>
    <result>
      <assert-deep-eq>["b", "c", "d", "e", "f", "g"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-110">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice((), 2)]]></test>
    <result>
      <assert-deep-eq>["a", "b"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-111">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(3, 3)]]></test>
    <result>
      <assert-deep-eq>["c"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-112">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(4, 3)]]></test>
    <result>
      <assert-deep-eq>["d", "c"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-113">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(2, 5, 2)]]></test>
    <result>
      <assert-deep-eq>["b", "d"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-114">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(5, 2, -2)]]></test>
    <result>
      <assert-deep-eq>["e", "c"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-115">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(2, 5, -2)]]></test>
    <result>
      <assert-deep-eq>[]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-116">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(5, 2, 2)]]></test>
    <result>
      <assert-deep-eq>[]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-117">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice()]]></test>
    <result>
      <assert-deep-eq>["a", "b", "c", "d", "e", "f", "g"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-118">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(-1)]]></test>
    <result>
      <assert-deep-eq>["g"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-119">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(-3)]]></test>
    <result>
      <assert-deep-eq>["e", "f", "g"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-120">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice((), -2)]]></test>
    <result>
      <assert-deep-eq>["a", "b", "c", "d", "e", "f"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-121">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(2, -2)]]></test>
    <result>
      <assert-deep-eq>["b", "c", "d", "e", "f"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-122">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(-2, 2)]]></test>
    <result>
      <assert-deep-eq>["f", "e", "d", "c", "b"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-123">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(-4, -2)]]></test>
    <result>
      <assert-deep-eq>["d", "e", "f"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-124">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(-2, -4)]]></test>
    <result>
      <assert-deep-eq>["f", "e", "d"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-125">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(-4, -2, 2)]]></test>
    <result>
      <assert-deep-eq>["d", "f"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-126">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b', 'c', 'd', 'e', 'f', 'g' } => array:slice(-2, -4, -2)]]></test>
    <result>
      <assert-deep-eq>["f", "d"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-127">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(0)]]></test>
    <result>
      <assert-deep-eq>["a", "b"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-128">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(1)]]></test>
    <result>
      <assert-deep-eq>["a", "b"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-129">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(-1)]]></test>
    <result>
      <assert-deep-eq>["b"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-130">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(1, 2)]]></test>
    <result>
      <assert-deep-eq>["a", "b"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-131">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(-1, 2)]]></test>
    <result>
      <assert-deep-eq>["b"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-132">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(1, -2)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-133">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(-1, -2)]]></test>
    <result>
      <assert-deep-eq>["b", "a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-134">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(1, 2, 3)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-135">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(1, 2, -3)]]></test>
    <result>
      <assert-deep-eq>[]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-136">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(1, -2, 3)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-137">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(1, -2, -3)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-138">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(-1, 2, 3)]]></test>
    <result>
      <assert-deep-eq>["b"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-139">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(-1, 2, -3)]]></test>
    <result>
      <assert-deep-eq>["b"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-140">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(-1, -2, 3)]]></test>
    <result>
      <assert-deep-eq>[]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-141">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a', 'b' } => array:slice(-1, -2, -3)]]></test>
    <result>
      <assert-deep-eq>["b"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-142">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(0)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-143">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(1)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-144">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(-1)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-145">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(1, 2)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-146">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(-1, 2)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-147">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(1, -2)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-148">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(-1, -2)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-149">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(1, 2, 3)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-150">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(1, 2, -3)]]></test>
    <result>
      <assert-deep-eq>[]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-151">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(1, -2, 3)]]></test>
    <result>
      <assert-deep-eq>[]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-152">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(1, -2, -3)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-153">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(-1, 2, 3)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-154">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(-1, 2, -3)]]></test>
    <result>
      <assert-deep-eq>[]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-155">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(-1, -2, 3)]]></test>
    <result>
      <assert-deep-eq>[]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-156">
    <description>String sequence</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 'a' } => array:slice(-1, -2, -3)]]></test>
    <result>
      <assert-deep-eq>["a"]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-157">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(-1001) => array:size()]]></test>
    <result>
      <assert-eq>1000</assert-eq>
    </result>
  </test-case>
  <test-case name="array-slice-158">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(-1000) => array:size()]]></test>
    <result>
      <assert-eq>1000</assert-eq>
    </result>
  </test-case>
  <test-case name="array-slice-159">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(-999) => array:size()]]></test>
    <result>
      <assert-eq>999</assert-eq>
    </result>
  </test-case>
  <test-case name="array-slice-160">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(-2) => array:size()]]></test>
    <result>
      <assert-eq>2</assert-eq>
    </result>
  </test-case>
  <test-case name="array-slice-161">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(-1) => array:size()]]></test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="array-slice-162">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(0) => array:size()]]></test>
    <result>
      <assert-eq>1000</assert-eq>
    </result>
  </test-case>
  <test-case name="array-slice-163">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(1) => array:size()]]></test>
    <result>
      <assert-eq>1000</assert-eq>
    </result>
  </test-case>
  <test-case name="array-slice-164">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(2) => array:size()]]></test>
    <result>
      <assert-eq>999</assert-eq>
    </result>
  </test-case>
  <test-case name="array-slice-165">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(999) => array:size()]]></test>
    <result>
      <assert-eq>2</assert-eq>
    </result>
  </test-case>
  <test-case name="array-slice-166">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(1000) => array:size()]]></test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="array-slice-167">
    <description>Integer range</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(1001) => array:size()]]></test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="array-slice-168">
    <description>Integer range, argument wrapped in node constructor</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(array { data(attribute _ { '1000' }) })]]></test>
    <result>
      <assert-deep-eq>[1000]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-169">
    <description>Integer range, argument wrapped in node constructor</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(array { 1000 }, data(attribute _ { '1000' }))]]></test>
    <result>
      <assert-deep-eq>[1000]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-slice-170">
    <description>Integer range, argument wrapped in node constructor</description>
    <created by="Christian Gruen" on="2022-08-11"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[array { 1 to 1000 } => array:slice(array { 1000 }, 1000, data(attribute _ { '1' }))]]></test>
    <result>
      <assert-deep-eq>[1000]</assert-deep-eq>
    </result>
  </test-case>
</test-set>