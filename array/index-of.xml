<?xml version="1.0" encoding="us-ascii"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="array-index-of" covers-40="PR968">
  <description>Tests for the array:index-of() function (4.0)</description>
  
  <dependency type="spec" value="XP40+ XQ40+"/>
  
  <test-case name="array-index-of-001">
    <description>Empty array</description>
    <created by="Michael Kay" on="2020-02-09"/>
    <test>array:index-of([], 23)</test>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  
  <test-case name="array-index-of-002">
    <description>No matches</description>
    <created by="Michael Kay" on="2020-02-09"/>
    <test>array:index-of(array{1 to 100}, -4)</test>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  
  <test-case name="array-index-of-003">
    <description>All matches</description>
    <created by="Michael Kay" on="2020-02-09"/>
    <test>array:index-of([3,3,3,3,3,3,3], 3)</test>
    <result>
      <assert-deep-eq>1 to 7</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="array-index-of-004">
    <description>Selective matches</description>
    <created by="Michael Kay" on="2020-02-09"/>
    <test>array:index-of(array{(1 to 100) ! (. mod 30)}, 1)</test>
    <result>
      <assert-deep-eq>1, 31, 61, 91</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="array-index-of-008">
    <description>Select empty members</description>
    <created by="Michael Kay" on="2023-11-30"/>
    <test>array:index-of([1, 2, 3, (), 5, (), 7], ())</test>
    <result>
      <assert-deep-eq>4, 6</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="array-index-of-009">
    <description>Select empty members</description>
    <created by="Michael Kay" on="2023-11-30"/>
    <test>array:index-of([1, 2, 3, (), [], (), 7], ())</test>
    <result>
      <assert-deep-eq>4, 6</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="array-index-of-010">
    <description>Select sequence members</description>
    <created by="Michael Kay" on="2023-11-30"/>
    <test>array:index-of([1, 2, 3, (10, 11, 12), 5, (20, 21, 22), 7], (10, 11, 12))</test>
    <result>
      <assert-eq>4</assert-eq>
    </result>
  </test-case>
  
  <test-case name="array-index-of-011" covers-40="PR1295">
    <description>Atomize sequence</description>
    <created by="Michael Kay" on="2023-11-30"/>
    <modified by="Christian Gruen" on="2024-06-04"/>
    <test><![CDATA[array:index-of(array{parse-xml("<doc><a>1</a><a>2</a><a>4</a></doc>")//a}, '4')]]></test>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  
  <test-case name="array-index-of-012" covers-40="PR1295">
    <description>Atomize sequence</description>
    <created by="Michael Kay" on="2023-11-30"/>
    <modified by="Michael Kay" on="2024-06-25" change="no atomization takes place"/>
    <test><![CDATA[array:index-of(array{parse-xml("<doc><a>1</a><a>2</a><a>4</a></doc>")//a}, 4)]]></test>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  
  <test-case name="array-index-of-013" covers-40="PR1295">
    <description>Atomize search key</description>
    <created by="Michael Kay" on="2023-11-30"/>
    <modified by="Michael Kay" on="2024-06-25" change="no atomization takes place"/>
    <test><![CDATA[
array:index-of(
  array { 11 to 50 },
  parse-xml("<doc><a>44</a></doc>")//a ! xs:integer()
)
]]></test>
    <result>
      <assert-eq>34</assert-eq>
    </result>
  </test-case>
  
  <test-case name="array-index-of-014" covers-40="PR1295">
    <description>Comparison uses deep-equal</description>
    <created by="Michael Kay" on="2024-06-25"/>
    <test><![CDATA[
array:index-of(
  [parse-xml("<doc><a y='1' x='2'>44</a></doc>"), parse-xml("<doc><a y='1' x='2' z='3'>44</a></doc>")],
  parse-xml("<doc><a x='2' y='1'>44</a></doc>")
)
]]></test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  
  <test-case name="array-index-of-015" covers-40="PR1295">
    <description>Collation when comparing strings</description>
    <created by="Michael Kay" on="2024-06-25"/>
    <test>
array:index-of(
  ["a", "b", "c", "A", "B", "C"],
  "a",
  "http://www.w3.org/2005/xpath-functions/collation/html-ascii-case-insensitive"
)  </test>
    <result>
      <assert-deep-eq>1, 4</assert-deep-eq>
    </result>
  </test-case>
  
  <test-case name="array-index-of-016" covers-40="PR1295">
    <description>Collation when comparing nodes</description>
    <created by="Michael Kay" on="2024-06-25"/>
    <test><![CDATA[
array:index-of(
  [parse-xml("<doc>a</doc>"), parse-xml("<doc>b</doc>"), parse-xml("<doc>A</doc>"), parse-xml("<doc>B</doc>")],
  parse-xml("<doc>A</doc>"),
  "http://www.w3.org/2005/xpath-functions/collation/html-ascii-case-insensitive"
)
]]></test>
    <result>
      <assert-deep-eq>1, 3</assert-deep-eq>
    </result>
  </test-case>

</test-set>
