<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="array-partition">
  <description>Tests for the array:partition function</description>
  <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/" idref="func-array-partition"/>
  <dependency type="feature" value="higherOrderFunctions"/>
  <dependency type="spec" value="XP40+ XQ40+"/>
  <test-case name="array-partition-001">
    <description>Empty sequence, function always true</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition((), function($seq, $curr) { true() })]]></test>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  <test-case name="array-partition-002">
    <description>Single integer, function always true</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition(1, function($seq, $curr) { true() })]]></test>
    <result>
      <assert-deep-eq>[1]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-partition-003">
    <description>Integer range, function always true</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition((1 to 1000), function($seq, $curr) { false() }) => count()]]></test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="array-partition-004">
    <description>Empty sequence, function always false</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition((), function($seq, $curr) { false() })]]></test>
    <result>
      <assert-empty/>
    </result>
  </test-case>
  <test-case name="array-partition-005">
    <description>Single integer, function always false</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition(1, function($seq, $curr) { false() })]]></test>
    <result>
      <assert-deep-eq>[1]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-partition-006">
    <description>Integer range, function always false</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition((1 to 1000), function($seq, $curr) { true() }) => count()]]></test>
    <result>
      <assert-eq>1000</assert-eq>
    </result>
  </test-case>
  <test-case name="array-partition-007">
    <description>Partition equal integers</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition((1, 1), function($seq, $curr) { not($seq = $curr) })]]></test>
    <result>
      <assert-deep-eq>[(1,1)]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-partition-008">
    <description>Partition equal integers</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition((1, 1, 2, 1), function($seq, $curr) { not($seq = $curr) })]]></test>
    <result>
      <assert-deep-eq>[(1,1)],[2],[1]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-partition-009">
    <description>Partition smaller integers</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition((846, 23, 5, 8, 6, 1000), function($seq, $curr) { $curr > $seq })]]></test>
    <result>
      <assert-deep-eq>[(846,23,5)],[(8,6)],[1000]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-partition-010">
    <description>Partition by first character</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition(('Anita', 'Anne', 'Barbara', 'Catherine', 'Christine'), function($x, $y) { substring($x[last()], 1, 1) ne substring($y, 1, 1) })]]></test>
    <result>
      <assert-deep-eq>[("Anita","Anne")],["Barbara"],[("Catherine","Christine")]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-partition-011">
    <description>Partition into sequences of two</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition((1, 2, 3, 4, 5, 6), function($a, $b){ count($a) eq 2 })]]></test>
    <result>
      <assert-deep-eq>[(1,2)],[(3,4)],[(5,6)]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-partition-012">
    <description>Partition based on sum</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition((1, 4, 6, 3, 1, 1), function($a, $b) { sum($a) ge 5 })]]></test>
    <result>
      <assert-deep-eq>[(1,4)],[6],[(3,1,1)]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-partition-013">
    <description>Partition based on length of tokens</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition(tokenize('In the beginning was the word'), function($a, $b) { sum(($a, $b) ! string-length()) gt 10 })]]></test>
    <result>
      <assert-deep-eq>[("In","the")],["beginning"],[("was","the","word")]</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="array-partition-014">
    <description>Densely numbered partitions</description>
    <created by="Christian Gruen" on="2022-08-15"/>
    <test><![CDATA[array:partition((1, 2, 3, 6, 7, 9, 10), function($seq, $new) { not($new = $seq[last()] + 1) })]]></test>
    <result>
      <assert-deep-eq>[(1,2,3)],[(6,7)],[(9,10)]</assert-deep-eq>
    </result>
  </test-case>
</test-set>