<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog"
          name="misc-ConstructorKeywords" covers-40="PR159">
   <description>
            Tests for constructor functions using keyword arguments.
            Generated by prod/CastExpr/makeKeywordConstructorTests.xsl.
         </description>
   <dependency type="spec" value="XP40+ XQ40+"/>
   <test-case name="constructor-keywords-1">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonPositiveInteger(value := '0')</test>
      <result>
         <assert-type>xs:nonPositiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-2">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:negativeInteger(value := '-1')</test>
      <result>
         <assert-type>xs:negativeInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-3">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:long(value := '9223372036854775807')</test>
      <result>
         <assert-type>xs:long</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-4">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:int(value := '2147483647')</test>
      <result>
         <assert-type>xs:int</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-5">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:short(value := '-32768')</test>
      <result>
         <assert-type>xs:short</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-6">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:byte(value := '-128')</test>
      <result>
         <assert-type>xs:byte</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-7">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonNegativeInteger(value := '0')</test>
      <result>
         <assert-type>xs:nonNegativeInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-8">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedLong(value := '0')</test>
      <result>
         <assert-type>xs:unsignedLong</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-9">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedInt(value := '0')</test>
      <result>
         <assert-type>xs:unsignedInt</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-10">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedByte(value := '0')</test>
      <result>
         <assert-type>xs:unsignedByte</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-11">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedShort(value := '0')</test>
      <result>
         <assert-type>xs:unsignedShort</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-12">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:positiveInteger(value := '1')</test>
      <result>
         <assert-type>xs:positiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-13">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonPositiveInteger(value := '-999999999999999999')</test>
      <result>
         <assert-type>xs:nonPositiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-14">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:negativeInteger(value := '-999999999999999999')</test>
      <result>
         <assert-type>xs:negativeInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-15">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:long(value := '-9223372036854775808')</test>
      <result>
         <assert-type>xs:long</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-16">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:int(value := '-2147483648')</test>
      <result>
         <assert-type>xs:int</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-17">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:short(value := '32767')</test>
      <result>
         <assert-type>xs:short</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-18">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:byte(value := '127')</test>
      <result>
         <assert-type>xs:byte</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-19">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonNegativeInteger(value := '999999999999999999')</test>
      <result>
         <assert-type>xs:nonNegativeInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-20">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedLong(value := '18446744073709551615')</test>
      <result>
         <assert-type>xs:unsignedLong</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-21">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedInt(value := '4294967295')</test>
      <result>
         <assert-type>xs:unsignedInt</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-22">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedShort(value := '65535')</test>
      <result>
         <assert-type>xs:unsignedShort</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-23">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedByte(value := '255')</test>
      <result>
         <assert-type>xs:unsignedByte</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-24">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:positiveInteger(value := '999999999999999999')</test>
      <result>
         <assert-type>xs:positiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-25">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonPositiveInteger(value := false())</test>
      <result>
         <assert-type>xs:nonPositiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-26">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:long(value := false())</test>
      <result>
         <assert-type>xs:long</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-27">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:long(value := true())</test>
      <result>
         <assert-type>xs:long</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-28">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:int(value := false())</test>
      <result>
         <assert-type>xs:int</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-29">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:int(value := true())</test>
      <result>
         <assert-type>xs:int</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-30">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:short(value := false())</test>
      <result>
         <assert-type>xs:short</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-31">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:short(value := true())</test>
      <result>
         <assert-type>xs:short</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-32">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:byte(value := false())</test>
      <result>
         <assert-type>xs:byte</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-33">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:byte(value := true())</test>
      <result>
         <assert-type>xs:byte</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-34">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonNegativeInteger(value := false())</test>
      <result>
         <assert-type>xs:nonNegativeInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-35">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonNegativeInteger(value := true())</test>
      <result>
         <assert-type>xs:nonNegativeInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-36">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedLong(value := false())</test>
      <result>
         <assert-type>xs:unsignedLong</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-37">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedLong(value := true())</test>
      <result>
         <assert-type>xs:unsignedLong</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-38">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedInt(value := false())</test>
      <result>
         <assert-type>xs:unsignedInt</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-39">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedInt(value := true())</test>
      <result>
         <assert-type>xs:unsignedInt</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-40">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedShort(value := false())</test>
      <result>
         <assert-type>xs:unsignedShort</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-41">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedShort(value := true())</test>
      <result>
         <assert-type>xs:unsignedShort</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-42">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedByte(value := false())</test>
      <result>
         <assert-type>xs:unsignedByte</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-43">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedByte(value := true())</test>
      <result>
         <assert-type>xs:unsignedByte</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-44">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:positiveInteger(value := true())</test>
      <result>
         <assert-type>xs:positiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-45">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedLong(value := '-0')</test>
      <result>
         <assert-type>xs:unsignedLong</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-46">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedInt(value := '-0')</test>
      <result>
         <assert-type>xs:unsignedInt</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-47">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedShort(value := '-0')</test>
      <result>
         <assert-type>xs:unsignedShort</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-48">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedByte(value := '-0')</test>
      <result>
         <assert-type>xs:unsignedByte</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-49">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedLong(value := '+0')</test>
      <result>
         <assert-type>xs:unsignedLong</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-50">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedInt(value := '+0')</test>
      <result>
         <assert-type>xs:unsignedInt</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-51">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedShort(value := '+0')</test>
      <result>
         <assert-type>xs:unsignedShort</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-52">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedByte(value := '+0')</test>
      <result>
         <assert-type>xs:unsignedByte</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-53">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonNegativeInteger(value := '-0')</test>
      <result>
         <assert-type>xs:nonNegativeInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-54">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:negativeInteger(value := '-1')</test>
      <result>
         <assert-type>xs:negativeInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-55">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonPositiveInteger(value := '-0')</test>
      <result>
         <assert-type>xs:nonPositiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-56">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonPositiveInteger(value := '-1')</test>
      <result>
         <assert-type>xs:nonPositiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-57">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:positiveInteger(value := '+1')</test>
      <result>
         <assert-type>xs:positiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-58">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonNegativeInteger(value := '+1')</test>
      <result>
         <assert-type>xs:nonNegativeInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-59">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonPositiveInteger(value := '+0')</test>
      <result>
         <assert-type>xs:nonPositiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-60">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonPositiveInteger(value := '-000000001')</test>
      <result>
         <assert-type>xs:nonPositiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-61">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonPositiveInteger(value := '-000000000')</test>
      <result>
         <assert-type>xs:nonPositiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-62">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:negativeInteger(value := '-000000001')</test>
      <result>
         <assert-type>xs:negativeInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-63">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:long(value := '000000001')</test>
      <result>
         <assert-type>xs:long</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-64">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:int(value := '000000001')</test>
      <result>
         <assert-type>xs:int</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-65">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:short(value := '000000001')</test>
      <result>
         <assert-type>xs:short</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-66">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:byte(value := '000000001')</test>
      <result>
         <assert-type>xs:byte</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-67">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonNegativeInteger(value := '000000001')</test>
      <result>
         <assert-type>xs:nonNegativeInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-68">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedLong(value := '000000001')</test>
      <result>
         <assert-type>xs:unsignedLong</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-69">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedInt(value := '000000001')</test>
      <result>
         <assert-type>xs:unsignedInt</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-70">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedByte(value := '000000001')</test>
      <result>
         <assert-type>xs:unsignedByte</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-71">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:unsignedShort(value := '000000001')</test>
      <result>
         <assert-type>xs:unsignedShort</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-72">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:positiveInteger(value := '000000001')</test>
      <result>
         <assert-type>xs:positiveInteger</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-73">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:Name(value := 'input')</test>
      <result>
         <assert-type>xs:Name</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-74">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:normalizedString(value := '')</test>
      <result>
         <assert-type>xs:normalizedString</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-75">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:byte(3))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-76">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:int(3))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-77">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:long(3))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-78">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:negativeInteger(-3))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-79">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:nonNegativeInteger(3))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-80">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:nonPositiveInteger(0))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-81">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:short(3))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-82">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:unsignedByte(3))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-83">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:unsignedInt(3))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-84">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:unsignedInt(3))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-85">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:unsignedLong(3))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-86">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:unsignedShort(3))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-87">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:byte(3))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-88">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:int(3))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-89">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:long(3))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-90">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:negativeInteger(-3))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-91">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:nonNegativeInteger(3))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-92">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:nonPositiveInteger(0))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-93">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:short(3))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-94">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:unsignedByte(3))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-95">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:unsignedInt(3))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-96">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:unsignedInt(3))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-97">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:unsignedLong(3))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-98">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:unsignedShort(3))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-99">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:normalizedString('foo'))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-100">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:token('foo'))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-101">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:language('foo'))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-102">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:NMTOKEN('foo'))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-103">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:Name('foo'))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-104">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:NCName('foo'))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-105">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:ID('foo'))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-106">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:IDREF('foo'))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-107">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:untypedAtomic(value := xs:ENTITY('foo'))</test>
      <result>
         <assert-type>xs:untypedAtomic</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-108">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:normalizedString('foo'))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-109">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:token('foo'))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-110">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:language('foo'))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-111">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:NMTOKEN('foo'))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-112">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:Name('foo'))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-113">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:NCName('foo'))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-114">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:ID('foo'))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-115">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:IDREF('foo'))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-116">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:string(value := xs:ENTITY('foo'))</test>
      <result>
         <assert-type>xs:string</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-117">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:language(value := 'a')</test>
      <result>
         <assert-type>xs:language</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-118">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:language(value := 'ab')</test>
      <result>
         <assert-type>xs:language</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-119">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:language(value := 'abc')</test>
      <result>
         <assert-type>xs:language</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-120">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:language(value := 'abcd')</test>
      <result>
         <assert-type>xs:language</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-121">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:language(value := 'abcde')</test>
      <result>
         <assert-type>xs:language</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-122">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:language(value := 'abcdef')</test>
      <result>
         <assert-type>xs:language</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-123">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:language(value := 'abcdefg')</test>
      <result>
         <assert-type>xs:language</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-124">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:language(value := 'abcdefgh')</test>
      <result>
         <assert-type>xs:language</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-125">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:language(value := 'abcdefgh-abcdefgh')</test>
      <result>
         <assert-type>xs:language</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-126">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:anyURI(value := ' http://example.com/ foo.xml ')</test>
      <result>
         <assert-type>xs:anyURI</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-127">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:anyURI(value := 'foo://')</test>
      <result>
         <assert-type>xs:anyURI</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-128">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:time(value := '12:00:00Z')</test>
      <result>
         <assert-type>xs:time</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-129">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:time(value := '24:00:00')</test>
      <result>
         <assert-type>xs:time</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-130">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:date(value := '2002-12-11')</test>
      <result>
         <assert-type>xs:date</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-131">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:gYear(value := '2040')</test>
      <result>
         <assert-type>xs:gYear</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-132">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:gYear(value := '2040Z')</test>
      <result>
         <assert-type>xs:gYear</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-133">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:gYearMonth(value := '2040-01')</test>
      <result>
         <assert-type>xs:gYearMonth</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-134">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:gYearMonth(value := '2040-01Z')</test>
      <result>
         <assert-type>xs:gYearMonth</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-135">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:gMonth(value := '--01')</test>
      <result>
         <assert-type>xs:gMonth</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-136">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:gMonth(value := '--01Z')</test>
      <result>
         <assert-type>xs:gMonth</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-137">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:gMonthDay(value := '--01-31')</test>
      <result>
         <assert-type>xs:gMonthDay</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-138">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:gMonthDay(value := '--01-31Z')</test>
      <result>
         <assert-type>xs:gMonthDay</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-139">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:gDay(value := '---31')</test>
      <result>
         <assert-type>xs:gDay</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-140">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:gDay(value := '---31Z')</test>
      <result>
         <assert-type>xs:gDay</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-141">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:boolean(value := 'true')</test>
      <result>
         <assert-type>xs:boolean</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-142">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:boolean(value := 'false')</test>
      <result>
         <assert-type>xs:boolean</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-143">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:boolean(value := '0')</test>
      <result>
         <assert-type>xs:boolean</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-144">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:boolean(value := '1')</test>
      <result>
         <assert-type>xs:boolean</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-145">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:hexBinary(value := '')</test>
      <result>
         <assert-type>xs:hexBinary</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-146">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:hexBinary(value := 'FF')</test>
      <result>
         <assert-type>xs:hexBinary</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-147">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:hexBinary(value := 'cafebabe')</test>
      <result>
         <assert-type>xs:hexBinary</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-148">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:base64Binary(value := '')</test>
      <result>
         <assert-type>xs:base64Binary</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-149">
      <description>Generated test case</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:base64Binary(value := xs:hexBinary('0FB7'))</test>
      <result>
         <assert-type>xs:base64Binary</assert-type>
      </result>
   </test-case>
   <test-case name="constructor-keywords-901">
      <description>Wrong keyword error</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonPositiveInteger(eulav := '0')</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   <test-case name="constructor-keywords-902">
      <description>Wrong arity error</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonPositiveInteger('0', value := '2')</test>
      <result>
         <error code="XPST0017"/>
      </result>
   </test-case>
   <test-case name="constructor-keywords-903">
      <description>Invalid value error</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:positiveInteger(value := '-2')</test>
      <result>
         <error code="FORG0001"/>
      </result>
   </test-case>
   <test-case name="constructor-keywords-904">
      <description>Invalid type error</description>
      <created by="Michael Kay" on="2023-08-15"/>
      <test>xs:nonPositiveInteger(value := current-date())</test>
      <result>
         <error code="XPTY0004"/>
      </result>
   </test-case>
</test-set>
