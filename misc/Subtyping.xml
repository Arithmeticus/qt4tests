<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog"
          name="misc-Subtyping" covers-40="PR202">
   <description>
        Tests for subtyping relationships.
   </description>
   <dependency type="spec" value="XQ40+"/>
   
   <test-case name="subtyping-001">
      <description>Atomic types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('xs:integer', 'xs:decimal')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-002">
      <description>Atomic types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('xs:dayTimeDuration', 'xs:duration')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-003">
      <description>Atomic types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('xs:int', 'xs:long*')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-004">
      <description>Atomic types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('xs:int', 'xs:int?')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-005">
      <description>Atomic types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('xs:dateTime', 'xs:dateTime')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-006">
      <description>Atomic types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('xs:boolean', 'xs:dateTime')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-020">
      <description>Choice types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('xs:integer', '(xs:string | xs:decimal)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-021">
      <description>Choice types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('xs:int+', '(xs:string | xs:long)*')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-022" covers-40="PR1400">
      <description>Choice types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('(xs:date | xs:time)', '(xs:time | xs:dateTime | xs:date)+')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-023" covers-40="PR1400">
      <description>Choice types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('(xs:hexBinary | xs:base64Binary)', '(xs:base64Binary | xs:hexBinary)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-024" covers-40="PR1400">
      <description>Choice types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('(xs:hexBinary | xs:base64Binary | xs:string)', '(xs:base64Binary | xs:hexBinary)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-025" covers-40="PR1400">
      <description>Choice types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('(xs:long | xs:int)', 'xs:integer')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-026" covers-40="PR1400">
      <description>Choice types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('record(a, b)', '(map(*) | array(*))')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-050">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element()', 'node()')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-051">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element()', 'item()')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-052">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a)', 'element(*)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-053">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(*)', 'element(a)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-054">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a|b)', 'element(a)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-055">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a|b|c)', 'element(b|c)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-056">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a|b)', 'element(b|c|a)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-057">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(p1:*)', 'element(p1:a)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-058">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(p1:a)', 'element(p1:*)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-059">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(p1:*|p2:*)', 'element(p1:*)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-060">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(p1:*)', 'element(p1:*|p2:*)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-061">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(*:a)', 'element(a)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-062">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a|b)', 'element(*:a|*:b)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-063">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(*:a|*:b)', 'element(a|b|c)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-064">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a|b)', '(element(a)|element(b))')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-065">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a|b|c)', '(element(a)|element(b))')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-066">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <modified by="Michael Kay" on="2024-10-17" change="correct expected result"/>
      <modified by="Christian Gruen" on="2025-03-31" change="typedData dependency added"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <dependency type="feature" value="typedData"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a|b, xs:long)', '(element(a, xs:integer)|element(b, xs:decimal))')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-067">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <modified by="Michael Kay" on="2024-10-17" change="correct expected result"/>
      <modified by="Christian Gruen" on="2025-03-31" change="typedData dependency added"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <dependency type="feature" value="typedData"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('(element(a, xs:integer)|element(b, xs:integer))', 'element(a|b, xs:decimal)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-070">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <modified by="Christian Gruen" on="2025-03-31" change="typedData dependency added"/>
      <dependency type="feature" value="typedData"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a, xs:integer)', 'element(a, xs:decimal)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-071">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <modified by="Christian Gruen" on="2025-03-31" change="typedData dependency added"/>
      <dependency type="feature" value="typedData"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a, xs:integer)', 'element(a, xs:long)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-072">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <modified by="Christian Gruen" on="2025-03-31" change="typedData dependency added"/>
      <dependency type="feature" value="typedData"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a, xs:numeric)', 'element(a, xs:long)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-073">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <modified by="Christian Gruen" on="2025-03-31" change="typedData dependency added"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <dependency type="feature" value="typedData"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a, xs:long)', 'element(a, xs:numeric)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-074">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <modified by="Michael Kay" on="2024-10-17" change="syntax of second type was invalid"/>
      <modified by="Christian Gruen" on="2025-03-31" change="typedData dependency added"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <dependency type="feature" value="typedData"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(p1:*, xs:long)', 'element(*, xs:numeric)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-075">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <modified by="Christian Gruen" on="2025-03-31" change="typedData dependency added"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <dependency type="feature" value="typedData"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('element(a|b|c, xs:boolean)', '(element(a)|element(b)|element(c))')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-076" covers-40="PR1604">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-11-29"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('document-node(a|b)', '(document-node(a)|document-node(b)|document-node(c))')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-077" covers-40="PR1604 PR1898">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-11-29"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('document-node(a)', 'document-node(element(a))')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-078" covers-40="PR1604 PR1898">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-11-29"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('document-node(element(a))', 'document-node(*)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-079" covers-40="PR1604 PR1898">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-11-29"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('document-node(*)', 'document-node()')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-080" covers-40="PR1604 PR1898">
      <description>Node types</description>
      <created by="Michael Kay" on="2024-11-29"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('document-node()', 'document-node(*)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-100">
      <description>Record types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('record(a)', 'record(*)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-101">
      <description>Record types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('record(a,b)', 'record(a)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-102">
      <description>Record types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('record(a,b)', 'record(a,*)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-103">
      <description>Record types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('record(a,b as xs:integer)', 'record(a,b as xs:decimal)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-104">
      <description>Record types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('record(a,b as xs:decimal)', 'record(a,b as xs:integer)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-105">
      <description>Record types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('record(a,b as xs:decimal,*)', 'record(b as xs:decimal, a)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-106">
      <description>Record types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('record(a,b)', 'record(b,a)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-107">
      <description>Record types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('record(a,b)', 'record(b,a?)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-108">
      <description>Record types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('record(a?,b)', 'record(b,a)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-150">
      <description>JNodes</description>
      <created by="Michael Kay" on="2025-07-31"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('jnode()', 'gnode()')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-151">
      <description>JNodes</description>
      <created by="Michael Kay" on="2025-07-31"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('jnode(xs:integer)', 'jnode()')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-152">
      <description>JNodes</description>
      <created by="Michael Kay" on="2025-07-31"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('jnode(xs:integer)', 'jnode(xs:decimal)')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-153">
      <description>JNodes</description>
      <created by="Michael Kay" on="2025-07-31"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('jnode(xs:integer)', 'jnode(xs:string)')
      </test>
      <result>
         <assert-false/>
      </result>
   </test-case>
   
   <test-case name="subtyping-154">
      <description>JNodes</description>
      <created by="Michael Kay" on="2025-07-31"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('node()', 'gnode()')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-200">
      <description>Special types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('empty-sequence()', 'map(*)*')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <test-case name="subtyping-201">
      <description>Special types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('empty-sequence()', 'empty-sequence()')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
   
   <!-- Test dropped. The way we test subtyping using function return types doesn't work for this
      case, because the function `fn() as xs:error {$cmp:var}` doesn't actually return the declared
      return type -->
   <!--<test-case name="subtyping-202">
      <description>Special types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('xs:error', 'empty-sequence()')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>-->
   
   <test-case name="subtyping-203">
      <description>Special types</description>
      <created by="Michael Kay" on="2024-08-21"/>
      <module uri="http://www.w3.org/qt4cg/subtyping" file="Subtyping/compareTypes.xquery"/>
      <test>
         import module namespace sub="http://www.w3.org/qt4cg/subtyping";
         sub:isSubtype('empty-sequence()', 'xs:error*')
      </test>
      <result>
         <assert-true/>
      </result>
   </test-case>
 
 
</test-set>
