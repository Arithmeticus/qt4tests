<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="map-group-by">
  <description>Tests for the map:group-by function</description>
  <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/" idref="func-map-group-by"/>
  <dependency type="feature" value="higherOrderFunctions"/>
  <dependency type="spec" value="XP40+ XQ40+"/>
  <test-case name="map-group-by-001">
    <description>Empty sequence, named function reference</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[map:group-by((), boolean#1)]]></test>
    <result>
      <assert-deep-eq>map{}</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-002">
    <description>Integer, named function reference</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[map:group-by(0, boolean#1)]]></test>
    <result>
      <assert-deep-eq>map{false():0}</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-003">
    <description>Integer, named function reference</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[map:group-by(1, boolean#1)]]></test>
    <result>
      <assert-deep-eq>map{true():1}</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-004">
    <description>Integers, named function reference</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[map:group-by((0, 1), boolean#1) => map:size()]]></test>
    <result>
      <assert-eq>2</assert-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-005">
    <description>Integers, function item</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[map:group-by((0, 1), function($i) { boolean($i)[.] })]]></test>
    <result>
      <assert-deep-eq>map{true():1}</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-006">
    <description>Integer range, function yielding empty sequence</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[map:group-by((1 to 100), function($i) { })]]></test>
    <result>
      <assert-deep-eq>map{}</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-007">
    <description>Integer range, named function reference</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[map:group-by((1 to 100), boolean#1) => map:size()]]></test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-008">
    <description>Integer range, named function reference</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[map:group-by((1 to 100), string#1) => map:size()]]></test>
    <result>
      <assert-eq>100</assert-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-009">
    <description>Integer range, function item</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[map:group-by((1 to 100), function($i) { $i mod 10 }) => map:size()]]></test>
    <result>
      <assert-eq>10</assert-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-010">
    <description>Strings, named function reference</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[map:group-by(('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August',
      'September', 'October', 'November', 'December'), string-length#1) => map:size()]]></test>
    <result>
      <assert-eq>7</assert-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-011">
    <description>Integer range, function item</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[map:group-by((1 to 100), function($i) { $i mod 10 }) => map:size()]]></test>
    <result>
      <assert-eq>10</assert-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-012">
    <description>Nodes, named function reference</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <dependency type="spec" value="XQ40+"/>
    <test><![CDATA[map:group-by(<xml>{ (1 to 9) ! <sub>{ . }</sub> }</xml>/*, string-length#1) => map:keys()]]></test>
    <result>
      <assert-eq>1</assert-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-013">
    <description>Filter expression selecting appropriate functions</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[for $f in (true#0, false#0, concat#2, substring#2, contains#2, identity#1)[function-arity(.) = 1]
      return map:group-by(5, $f)]]></test>
    <result>
      <assert-deep-eq>map{5:5}</assert-deep-eq>
    </result>
  </test-case>
  <test-case name="map-group-by-014">
    <description>Filter expression selecting appropriate functions</description>
    <created by="Christian Gruen" on="2022-08-10"/>
    <test><![CDATA[for $f in (1, 2, 3, 4, string#1, 6)[. instance of function(*)] return  map:group-by(8, $f)]]></test>
    <result>
      <assert-deep-eq>map{"8":8}</assert-deep-eq>
    </result>
  </test-case>
</test-set>