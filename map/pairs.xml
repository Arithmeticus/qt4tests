<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns="http://www.w3.org/2010/09/qt-fots-catalog" name="map-pairs"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" covers-40="map-pairs">
    <description>Tests for the map:pairs function introduced in XPath 4.0</description>
    <link type="spec" document="http://www.w3.org/TR/xpath-functions-30/" idref="func-map-pairs"/>
    <dependency type="spec" value="XP40+ XQ40+"/>
    
    <test-case name="map-pairs-001">
        <description>Entries in empty map</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>

        <environment ref="map"/>
        <test>map:pairs(map{})</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    
    <test-case name="map-pairs-002">
        <description>Entries in empty map</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map:merge(()))</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    
    <test-case name="map-pairs-003">
        <description>Entries in singleton map</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map{"a":1})</test>
        <result>
            <assert-deep-eq>map{"key":"a","value":1}</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="map-pairs-004">
        <description>Entries in singleton map</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map:entry("a", 1))</test>
        <result>
            <assert-deep-eq>map{"key":"a","value":1}</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="map-pairs-005">
        <description>Entries in two-entry map</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map:merge((map:entry("a", "1"), map:entry("b", 2))))</test>
        <result>
            <any-of>
                <assert-deep-eq>map{"key":"a","value":1}, map{"key":"b","value":2}</assert-deep-eq>
                <assert-deep-eq>map{"key":"b","value":2}, map{"key":"a","value":1}</assert-deep-eq>
            </any-of>
        </result>
    </test-case>
    
    <test-case name="map-pairs-006">
        <description>Size of two-entry map</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map{"a":1, "b":2})?key</test>
        <result>
            <all-of>
                <assert>$result = "a"</assert>
                <assert>$result = "b"</assert>
                <assert-count>2</assert-count>
            </all-of>
        </result>
    </test-case>
    
    <test-case name="map-pairs-007">
        <description>Elimination of duplicates</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map{"a":1, "a":2})</test>
        <result>
           <error code="XQDY0137"/>
        </result>
    </test-case>
    
    <test-case name="map-pairs-008">
        <description>Elimination of duplicates</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map:merge((map:entry("a",1), map:entry("a",2))))</test>
        <result>
            <assert-deep-eq>map{"key":"a","value":1}</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="map-pairs-009">
        <description>Entries after removing an entry</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map:remove(map{"a":1,"b":2}, "b"))</test>
        <result>
            <assert-deep-eq>map{"key":"a","value":1}</assert-deep-eq>
        </result>
    </test-case>
    
    <test-case name="map-pairs-010">
        <description>Entries after removing the only entry</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map:remove(map:entry(1,2),1))</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    
    <test-case name="map-pairs-011">
        <description>Entries after removing the only two entries</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map:remove(map{"a":1,"b":2},("b","a")))</test>
        <result>
            <assert-empty/>
        </result>
    </test-case>
    
    <test-case name="map-pairs-012">
        <description>Entries after adding a NaN entry</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map{number('NaN'):1, "b":2})</test>
        <result>
            <assert-count>2</assert-count>
        </result>
    </test-case>
    
    <test-case name="map-pairs-013">
        <description>Size after a null remove operation</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map:remove(map{"a":1,"b":2}, "c"))</test>
        <result>
            <any-of>
                <assert-deep-eq>map{"key":"a","value":1}, map{"key":"b","value":2}</assert-deep-eq>
                <assert-deep-eq>map{"key":"b","value":2}, map{"key":"a","value":1}</assert-deep-eq>
            </any-of>
        </result>
    </test-case>
    <test-case name="map-pairs-014">
        <description>Entries for a large map</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map:merge(for $n in 1 to 500000 return map:entry($n, $n+1)))</test>
        <result>
            <all-of>
                <assert>$result[?key eq 1]?value = 2</assert>
                <assert>$result[?key eq 500000]?value = 500001</assert>
                <assert-count>500000</assert-count>
            </all-of>
        </result>
    </test-case>
    
    <test-case name="map-pairs-015">
        <description>Access both key and value</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:pairs(map{"a":1, "b":2}) ! (?key || ?value)</test>
        <result>
            <all-of>
                <assert>$result = "a1"</assert>
                <assert>$result = "b2"</assert>
                <assert-count>2</assert-count>
            </all-of>
        </result>
    </test-case>
    
    <test-case name="map-pairs-016">
        <description>Invert a map</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <test>map:merge(map:pairs(map{"a":1, "b":2}) ! map{?value : ?key})</test>
        <result>
            <all-of>
                <assert>$result(1) eq "a"</assert>
                <assert>$result(2) eq "b"</assert>
                <assert-count>1</assert-count>
            </all-of>
        </result>
    </test-case>
    
    <test-case name="map-pairs-017">
        <description>Convert a map to XML</description>
        <created by="Michael Kay, Saxonica" on="2024-01-06"/>
        <environment ref="map"/>
        <dependency type="spec" value="XQ40+"/>
        <test><![CDATA[<e>{map:pairs(map{"a":1, "b":2}) ! attribute{?key}{?value}}</e>]]></test>
        <result>
            <assert-xml><![CDATA[<e a="1" b="2"/>]]></assert-xml>
        </result>
    </test-case>
    
 
    
 

</test-set>
